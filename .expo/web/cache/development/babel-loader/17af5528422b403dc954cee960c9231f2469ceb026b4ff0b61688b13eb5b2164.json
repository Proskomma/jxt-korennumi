{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CheckboxMe } from \"./CheckBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ChapitreSelection(_ref) {\n  var pk = _ref.pk,\n    bible = _ref.bible,\n    livre = _ref.livre,\n    chapitre = _ref.chapitre,\n    setChapitre = _ref.setChapitre;\n  if (livre === 'null' || bible == 'null') {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n  var chapters = pk.gqlQuerySync(\"{\\n        docSet(id: \\\"\" + bible + \"\\\") {\\n          document(bookCode: \\\"\" + livre + \"\\\") {\\n            cvIndexes {\\n              chapter\\n            }\\n          }\\n        }\\n      }\");\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    boolChapter = _useState2[0],\n    setBoolChapter = _useState2[1];\n  var initialState = Array.from({\n    length: 10\n  }, function () {\n    return useState(false);\n  });\n  var _useState3 = useState(initialState),\n    _useState4 = _slicedToArray(_useState3, 2),\n    states = _useState4[0],\n    setStates = _useState4[1];\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item;\n    return item;\n  }, []);\n  var keyExtractor = useCallback(function (item, index) {\n    return \"chap-\" + index;\n  }, []);\n  useEffect(function () {\n    console.log(boolChapter);\n  }, [boolChapter]);\n  if (chapters.data.docSet.document != null) {\n    var data = [];\n    chapters.data.docSet.document.cvIndexes.map(function (doc, id) {\n      boolChapter.push({\n        check: false\n      });\n      data.push(_jsx(CheckboxMe, {\n        num: doc.chapter,\n        state: states[id]\n      }));\n    });\n    return _jsx(FlatList, {\n      data: data,\n      numColumns: 3,\n      keyExtractor: keyExtractor,\n      renderItem: renderItem\n    });\n  } else {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n}\nexport { ChapitreSelection };","map":{"version":3,"names":["Text","useCallback","useEffect","useState","View","FlatList","CheckboxMe","jsx","_jsx","ChapitreSelection","_ref","pk","bible","livre","chapitre","setChapitre","children","chapters","gqlQuerySync","_useState","_useState2","_slicedToArray","boolChapter","setBoolChapter","initialState","Array","from","length","_useState3","_useState4","states","setStates","renderItem","_ref2","item","keyExtractor","index","console","log","data","docSet","document","cvIndexes","map","doc","id","push","check","num","chapter","state","numColumns"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/ChapitreSelection.js"],"sourcesContent":["import { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { View, FlatList } from 'react-native';\nimport { CheckboxMe } from './CheckBox';\n\nfunction ChapitreSelection({ pk, bible, livre, chapitre, setChapitre }) {\n\n\n\n  if (livre === 'null' || bible == 'null') {\n    return <Text>{`Can't display`}</Text>\n  }\n  let chapters = pk.gqlQuerySync(\n    `{\n        docSet(id: \"${bible}\") {\n          document(bookCode: \"${livre}\") {\n            cvIndexes {\n              chapter\n            }\n          }\n        }\n      }`);\n\n  const [boolChapter, setBoolChapter] = useState([]);\n\n\n  const initialState = Array.from({ length: 10 }, () => useState(false));\n  const [states, setStates] = useState(initialState);\n\n  const renderItem = useCallback(({ item }) => item, []);\n  const keyExtractor = useCallback((item, index) => `chap-${index}`, []);\n  useEffect(() => {\n    console.log(boolChapter)\n  }, [boolChapter]);\n\n  if (chapters.data.docSet.document != null) {\n    let data = []\n    chapters.data.docSet.document.cvIndexes.map((doc, id) =>\n    {\n      boolChapter.push({check:false});\n      data.push(\n        <CheckboxMe num={doc.chapter} state={states[id]}></CheckboxMe>\n      )})\n    return <FlatList\n      data={data}\n      numColumns={3}\n      keyExtractor={keyExtractor}\n      renderItem={renderItem} />\n  } else {\n    return <Text>{`Can't display`}</Text>\n  }\n}\nexport { ChapitreSelection }\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAGzD,SAASC,UAAU;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAExC,SAASC,iBAAiBA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAEC,WAAW,GAAAL,IAAA,CAAXK,WAAW;EAIlE,IAAIF,KAAK,KAAK,MAAM,IAAID,KAAK,IAAI,MAAM,EAAE;IACvC,OAAOJ,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;EACA,IAAIC,QAAQ,GAAGN,EAAE,CAACO,YAAY,8BAEVN,KAAK,8CACKC,KAAK,2GAM5B;EAEP,IAAAM,SAAA,GAAsChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAGlC,IAAMI,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE;IAAA,OAAMxB,QAAQ,CAAC,KAAK,CAAC;EAAA,EAAC;EACtE,IAAAyB,UAAA,GAA4BzB,QAAQ,CAACqB,YAAY,CAAC;IAAAK,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA3CE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAExB,IAAMG,UAAU,GAAG/B,WAAW,CAAC,UAAAgC,KAAA;IAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAAOA,IAAI;EAAA,GAAE,EAAE,CAAC;EACtD,IAAMC,YAAY,GAAGlC,WAAW,CAAC,UAACiC,IAAI,EAAEE,KAAK;IAAA,iBAAaA,KAAK;EAAA,CAAE,EAAE,EAAE,CAAC;EACtElC,SAAS,CAAC,YAAM;IACdmC,OAAO,CAACC,GAAG,CAAChB,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,IAAIL,QAAQ,CAACsB,IAAI,CAACC,MAAM,CAACC,QAAQ,IAAI,IAAI,EAAE;IACzC,IAAIF,IAAI,GAAG,EAAE;IACbtB,QAAQ,CAACsB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,SAAS,CAACC,GAAG,CAAC,UAACC,GAAG,EAAEC,EAAE,EACpD;MACEvB,WAAW,CAACwB,IAAI,CAAC;QAACC,KAAK,EAAC;MAAK,CAAC,CAAC;MAC/BR,IAAI,CAACO,IAAI,CACPtC,IAAA,CAACF,UAAU;QAAC0C,GAAG,EAAEJ,GAAG,CAACK,OAAQ;QAACC,KAAK,EAAEpB,MAAM,CAACe,EAAE;MAAE,EAAc,CAC/D;IAAA,CAAC,CAAC;IACL,OAAOrC,IAAA,CAACH,QAAQ;MACdkC,IAAI,EAAEA,IAAK;MACXY,UAAU,EAAE,CAAE;MACdhB,YAAY,EAAEA,YAAa;MAC3BH,UAAU,EAAEA;IAAW,EAAG;EAC9B,CAAC,MAAM;IACL,OAAOxB,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;AACF;AACA,SAASP,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}