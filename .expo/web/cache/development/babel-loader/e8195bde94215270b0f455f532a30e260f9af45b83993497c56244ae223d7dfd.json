{"ast":null,"code":"import { Text, Checkbox } from 'react-native-paper';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CheckboxMe(_ref) {\n  var num = _ref.num,\n    isChecked = _ref.isChecked,\n    onChange = _ref.onChange;\n  console.log('renderCheckbox..');\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column',\n      width: 50\n    },\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: num\n    }), _jsx(View, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: _jsx(Checkbox, {\n        style: {\n          alignSelf: 'center'\n        },\n        value: num,\n        status: isChecked ? 'checked' : 'unchecked',\n        onPress: function onPress() {\n          console.log('checkBoxCard');\n          onChange(num);\n        }\n      })\n    })]\n  });\n}\nexport default React.memo(CheckboxMe);","map":{"version":3,"names":["Text","Checkbox","useState","View","jsx","_jsx","jsxs","_jsxs","CheckboxMe","_ref","num","isChecked","onChange","console","log","style","flexDirection","width","children","alignSelf","value","status","onPress","React","memo"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/CheckBox.js"],"sourcesContent":["import { Text, Checkbox } from 'react-native-paper';\nimport { useState } from 'react';\nimport { View } from 'react-native';\n\nfunction CheckboxMe({ num, isChecked, onChange }) {\n    console.log('renderCheckbox..')\n\n    return (\n      <View style={{ flexDirection: 'column', width: 50 }}>\n        <Text style={{ alignSelf: 'center' }}>{num}</Text>\n        <View style={{ alignSelf: 'center' }}>\n          <Checkbox\n            style={{ alignSelf: 'center' }}\n            value={num}\n            status={isChecked ? 'checked' : 'unchecked'}\n            onPress={() => {\n              console.log('checkBoxCard')\n              onChange(num);\n            }}/>\n        </View>\n      </View>\n    )\n}\n\nexport default React.memo(CheckboxMe);\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjC,SAASC,UAAUA,CAAAC,IAAA,EAA+B;EAAA,IAA5BC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAE/B,OACEP,KAAA,CAACJ,IAAI;IAACY,KAAK,EAAE;MAAEC,aAAa,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,GAClDb,IAAA,CAACL,IAAI;MAACe,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAER;IAAG,EAAQ,EAClDL,IAAA,CAACF,IAAI;MAACY,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EACnCb,IAAA,CAACJ,QAAQ;QACPc,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAS,CAAE;QAC/BC,KAAK,EAAEV,GAAI;QACXW,MAAM,EAAEV,SAAS,GAAG,SAAS,GAAG,WAAY;QAC5CW,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbT,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC3BF,QAAQ,CAACF,GAAG,CAAC;QACf;MAAE;IAAE,EACD;EAAA,EACF;AAEb;AAEA,eAAea,KAAK,CAACC,IAAI,CAAChB,UAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}