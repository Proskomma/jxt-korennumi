{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nlibrary.add(faCheckSquare);\nvar CheckboxMe = function CheckboxMe() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isCheck = _useState2[0],\n    setIsCheck = _useState2[1];\n  return _jsx(TouchableOpacity, {\n    style: {\n      borderWidth: 1,\n      width: 15,\n      height: 15\n    },\n    onPress: function onPress() {\n      return setIsCheck(!isCheck);\n    },\n    children: isCheck ? _jsx(FontAwesomeIcon, {\n      icon: \"faCheckSquare\",\n      size: 20,\n      color: \"black\"\n    }) : _jsx(_Fragment, {})\n  });\n};\nexport { CheckboxMe };","map":{"version":3,"names":["useCallback","useState","TouchableOpacity","library","faCheckSquare","FontAwesomeIcon","jsx","_jsx","Fragment","_Fragment","add","CheckboxMe","_useState","_useState2","_slicedToArray","isCheck","setIsCheck","style","borderWidth","width","height","onPress","children","icon","size","color"],"sources":["/home/gabriel/repos/jxt-korennumi/components/used/TextConfig/CheckBox.js"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\n\nlibrary.add(faCheckSquare);\n\nconst CheckboxMe = (() => {\n  const [isCheck, setIsCheck] = useState(false)\n\n\n  return (\n    <TouchableOpacity style={{ borderWidth: 1, width: 15, height: 15 }} onPress={() => setIsCheck(!isCheck)}>\n      {isCheck ? <FontAwesomeIcon icon=\"faCheckSquare\" size={20} color=\"black\" />\n        : <></>}\n    </TouchableOpacity>\n  );\n});\n\nexport { CheckboxMe }\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,gBAAA;AAE9C,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,eAAe,QAAQ,uCAAuC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExEN,OAAO,CAACO,GAAG,CAACN,aAAa,CAAC;AAE1B,IAAMO,UAAU,GAAI,SAAdA,UAAUA,CAAA,EAAU;EACxB,IAAAC,SAAA,GAA8BX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAG1B,OACEN,IAAA,CAACL,gBAAgB;IAACe,KAAK,EAAE;MAAEC,WAAW,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAML,UAAU,CAAC,CAACD,OAAO,CAAC;IAAA,CAAC;IAAAO,QAAA,EACrGP,OAAO,GAAGR,IAAA,CAACF,eAAe;MAACkB,IAAI,EAAC,eAAe;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC;IAAO,EAAG,GACvElB,IAAA,CAAAE,SAAA;EAAK,EACQ;AAEvB,CAAE;AAEF,SAASE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}