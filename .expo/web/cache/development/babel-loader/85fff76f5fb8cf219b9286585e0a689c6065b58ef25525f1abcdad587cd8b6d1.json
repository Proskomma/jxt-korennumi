{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { memo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckboxMe = memo(function (_ref) {\n  var num = _ref.num,\n    state = _ref.state;\n  var _state = _slicedToArray(state, 2),\n    chec = _state[0],\n    setChec = _state[1];\n  console.log(check.check);\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column',\n      width: 50\n    },\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: num\n    }), _jsx(View, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: _jsx(Checkbox, {\n        style: {\n          alignSelf: 'center'\n        },\n        value: num,\n        status: chec ? 'checked' : 'unchecked',\n        onPress: function onPress() {\n          check.check = !check.check;\n          setChec(check.check);\n        }\n      })\n    })]\n  });\n});\nexport { CheckboxMe };","map":{"version":3,"names":["Text","Checkbox","useCallback","useState","View","FlatList","memo","jsx","_jsx","jsxs","_jsxs","CheckboxMe","_ref","num","state","_state","_slicedToArray","chec","setChec","console","log","check","style","flexDirection","width","children","alignSelf","value","status","onPress"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/CheckBox.js"],"sourcesContent":["import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport { View, FlatList } from 'react-native';\nimport { memo } from 'react';\nconst CheckboxMe = memo(({ num, state }) => {\n    const [chec,setChec] = state\n    console.log(check.check)\n    return (\n        <View style={{ flexDirection: 'column', width: 50 }}>\n            <Text style={{ alignSelf: 'center' }}>{num}</Text>\n            <View style={{ alignSelf: 'center' }}>\n                <Checkbox\n                    style={{ alignSelf: 'center' }}\n                    value={num}\n                    status={chec ? 'checked' : 'unchecked'}\n                    onPress={() => {check.check = !check.check;\n                        setChec(check.check);\n                    }} />\n            </View>\n        </View>\n    )\n}\n)\nexport { CheckboxMe }\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AACnD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE9C,SAASC,IAAI,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC7B,IAAMC,UAAU,GAAGL,IAAI,CAAC,UAAAM,IAAA,EAAoB;EAAA,IAAjBC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EACjC,IAAAC,MAAA,GAAAC,cAAA,CAAuBF,KAAK;IAArBG,IAAI,GAAAF,MAAA;IAACG,OAAO,GAAAH,MAAA;EACnBI,OAAO,CAACC,GAAG,CAACC,KAAK,CAACA,KAAK,CAAC;EACxB,OACIX,KAAA,CAACN,IAAI;IAACkB,KAAK,EAAE;MAAEC,aAAa,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,GAChDjB,IAAA,CAACR,IAAI;MAACsB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAEZ;IAAG,EAAQ,EAClDL,IAAA,CAACJ,IAAI;MAACkB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EACjCjB,IAAA,CAACP,QAAQ;QACLqB,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAS,CAAE;QAC/BC,KAAK,EAAEd,GAAI;QACXe,MAAM,EAAEX,IAAI,GAAG,SAAS,GAAG,WAAY;QACvCY,OAAO,EAAE,SAAAA,QAAA,EAAM;UAACR,KAAK,CAACA,KAAK,GAAG,CAACA,KAAK,CAACA,KAAK;UACtCH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;QACxB;MAAE;IAAG,EACN;EAAA,EACJ;AAEf,CAAC,CACA;AACD,SAASV,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}