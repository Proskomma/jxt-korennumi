{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport { ReadingScreen } from \"../used/ReadingScreen\";\nimport ResizableContainer from \"./ResizableContainer\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ConfigDrawer from \"./TextConfig/configDrawer\";\nimport { Button } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction createRefsArray(length) {\n  return Array.from({\n    length: length\n  }, function () {\n    return useRef(null);\n  });\n}\nfunction ResizableTab(_ref) {\n  var pk = _ref.pk;\n  var numberText = 2;\n  var arrayHooks = [];\n  var flatListRefs = createRefsArray(numberText);\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isUserScroll = _useState2[0],\n    setIsUserScroll = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scrollLock = _useState4[0],\n    setScrollLock = _useState4[1];\n  var _useState5 = useState('local_test_1'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    bible = _useState6[0],\n    setBible = _useState6[1];\n  var _useState7 = useState('GEN'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    livre = _useState8[0],\n    setLivre = _useState8[1];\n  var _onScroll = function onScroll(event, currentIndex) {\n    if (scrollLock) return;\n    setScrollLock(true);\n    var offsetX = event.nativeEvent.contentOffset.x;\n    if (isUserScroll) {\n      setIsUserScroll(false);\n      flatListRefs.forEach(function (ref, index) {\n        if (index !== currentIndex) {\n          ref.current.scrollToOffset({\n            offset: offsetX,\n            animated: false\n          });\n        }\n      });\n    } else {\n      setIsUserScroll(true);\n    }\n    setTimeout(function () {\n      return setScrollLock(false);\n    }, 20);\n  };\n  var resizableContainers = Array.from({\n    length: numberText\n  }, function (_, index) {\n    var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isActive = _useState10[0],\n      setIsActive = _useState10[1];\n    var _useState11 = useState('local_test_1'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      bible = _useState12[0],\n      setBible = _useState12[1];\n    var _useState13 = useState('GEN'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      livre = _useState14[0],\n      setLivre = _useState14[1];\n    arrayHooks.push([isActive, setIsActive, bible, setBible, livre, setLivre]);\n    return _jsxs(ResizableContainer, {\n      initalHeigth: Dimensions.get('window').height / numberText,\n      children: [_jsx(View, {\n        style: [StyleSheet.absoluteFill, {\n          zIndex: 3\n        }],\n        children: _jsx(Button, {\n          style: {\n            position: 'absolute'\n          },\n          icon: function icon() {\n            return _jsx(Icon, {\n              name: \"gear\",\n              size: 20,\n              color: \"blue\"\n            });\n          },\n          onPress: function onPress() {\n            return setIsActive(true);\n          }\n        }, Math.random())\n      }), _jsx(ReadingScreen, {\n        onScroll: function onScroll(event) {\n          return _onScroll(event, index);\n        },\n        flatListRef: flatListRefs[index],\n        pk: pk,\n        livre: livre,\n        bible: bible\n      }, \"reading-screen-\" + index)]\n    }, \"resizable-container-\" + index);\n  });\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        flex: 1\n      },\n      children: [arrayHooks.map(function (elem) {\n        return _jsx(ConfigDrawer, {\n          pk: pk,\n          setIsActive: elem[1],\n          isActive: elem[0],\n          setBibleParent: elem[3],\n          bibleParent: elem[2],\n          livreParent: elem[4],\n          setLivreParent: elem[5]\n        }, Math.random());\n      }), resizableContainers]\n    })\n  });\n}\nexport { ResizableTab };","map":{"version":3,"names":["React","useRef","useState","ReadingScreen","ResizableContainer","View","Dimensions","ConfigDrawer","Button","Icon","StyleSheet","jsx","_jsx","jsxs","_jsxs","createRefsArray","length","Array","from","ResizableTab","_ref","pk","numberText","arrayHooks","flatListRefs","_useState","_useState2","_slicedToArray","isUserScroll","setIsUserScroll","_useState3","_useState4","scrollLock","setScrollLock","_useState5","_useState6","bible","setBible","_useState7","_useState8","livre","setLivre","onScroll","event","currentIndex","offsetX","nativeEvent","contentOffset","x","forEach","ref","index","current","scrollToOffset","offset","animated","setTimeout","resizableContainers","_","_useState9","_useState10","isActive","setIsActive","_useState11","_useState12","_useState13","_useState14","push","initalHeigth","get","height","children","style","absoluteFill","zIndex","position","icon","name","size","color","onPress","Math","random","flatListRef","flex","flexDirection","map","elem","setBibleParent","bibleParent","livreParent","setLivreParent"],"sources":["/home/gabriel/repos/jxt-korennumi/components/used/resizableTab.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { ReadingScreen } from '../used/ReadingScreen';\nimport ResizableContainer from './ResizableContainer';\nimport { View } from 'react-native';\nimport { Dimensions } from 'react-native';\nimport ConfigDrawer from './TextConfig/configDrawer'\nimport { Button } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { StyleSheet } from 'react-native';\n\n\nfunction createRefsArray(length) {\n  return Array.from({ length }, () => useRef(null));\n}\nfunction ResizableTab({ pk }) {\n  const numberText = 2;\n  const arrayHooks = [];\n  const flatListRefs = createRefsArray(numberText);\n  const [isUserScroll, setIsUserScroll] = useState(true);\n  const [scrollLock, setScrollLock] = useState(false);\n  const [bible, setBible] = useState('local_test_1')\n  const [livre, setLivre] = useState('GEN')\n\n  const onScroll = (event, currentIndex) => {\n    if (scrollLock) return;\n\n    setScrollLock(true);\n    const offsetX = event.nativeEvent.contentOffset.x;\n\n\n    if (isUserScroll) {\n      setIsUserScroll(false);\n      flatListRefs.forEach((ref, index) => {\n        if (index !== currentIndex) {\n          ref.current.scrollToOffset({ offset: offsetX, animated: false });\n        }\n      });\n    } else {\n      setIsUserScroll(true);\n    }\n\n    setTimeout(() => setScrollLock(false), 20); // Release the lock after 100ms\n  };\n\n\n\n\n  const resizableContainers = Array.from({ length: numberText }, (_, index) => {\n\n    const [isActive, setIsActive] = useState(false)\n    const [bible, setBible] = useState('local_test_1')\n    const [livre, setLivre] = useState('GEN')\n\n    arrayHooks.push([isActive, setIsActive, bible, setBible, livre, setLivre])\n    return (\n      <ResizableContainer\n        key={`resizable-container-${index}`}\n        initalHeigth={Dimensions.get('window').height / numberText}\n      >\n        <View style={[StyleSheet.absoluteFill, { zIndex: 3 }]}>\n          <Button key={Math.random()} style={{ position: 'absolute' }}\n            icon={() => <Icon name=\"gear\" size={20} color=\"blue\" />\n            }\n            onPress={() => setIsActive(true)} />\n        </View>\n\n        <ReadingScreen\n          key={`reading-screen-${index}`}\n          onScroll={(event) => onScroll(event, index)}\n          flatListRef={flatListRefs[index]}\n          pk={pk}\n          livre={livre}\n          bible={bible}\n        />\n      </ResizableContainer >\n\n    )\n  });\n\n  return <View style={{ flex: 1 }}>\n    <View style={{ flexDirection: 'row', flex: 1 }}>\n      {arrayHooks.map(elem => {\n        return (<ConfigDrawer key={Math.random()} pk={pk} setIsActive={elem[1]} isActive={elem[0]} setBibleParent={elem[3]} bibleParent={elem[2]} livreParent={elem[4]} setLivreParent={elem[5]} />)\n      })}\n      {resizableContainers}\n    </View>\n  </View>;\n}\n\nexport { ResizableTab };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}