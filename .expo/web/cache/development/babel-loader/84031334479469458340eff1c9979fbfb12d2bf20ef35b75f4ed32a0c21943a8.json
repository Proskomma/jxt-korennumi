{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { tree2nodes } from \"proskomma-core\";\nvar defaultSettings = {\n  showWordAtts: false,\n  showTitles: true,\n  showHeadings: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  showCharacterMarkup: true,\n  showParaStyles: true,\n  selectedBcvNotes: []\n};\nvar sofria2WebActions = {\n  startDocument: [{\n    description: \"Set up\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref) {\n      var config = _ref.config,\n        context = _ref.context,\n        workspace = _ref.workspace,\n        output = _ref.output;\n      workspace.settings = _objectSpread(_objectSpread({}, defaultSettings), config);\n      workspace.webParas = [];\n      output.sofria = {};\n      output.sofria.sequence = {};\n      workspace.currentSequence = output.sofria.sequence;\n      workspace.paraContentStack = [];\n      workspace.footnoteNo = 1;\n      workspace.bookCode = context.document.metadata.document.bookCode;\n      workspace.chapter = 0;\n      if (config.displayPartOfText != null) {\n        if (typeof config.displayPartOfText.numberBlocks != int) {\n          console.log('numberBlocks must be typeof int', err);\n          throw err;\n        }\n      }\n    }\n  }],\n  startSequence: [{\n    description: \"identity\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref2) {\n      var context = _ref2.context,\n        workspace = _ref2.workspace;\n      workspace.currentSequence.type = context.sequences[0].type;\n      workspace.currentSequence.blocks = [];\n    }\n  }],\n  endSequence: [{\n    description: \"identity\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref3) {\n      var workspace = _ref3.workspace;\n      if (workspace.currentSequence.type === 'footnote') {\n        workspace.footnoteNo++;\n      }\n      workspace.currentSequence = {};\n    }\n  }],\n  blockGraft: [{\n    description: \"Process block grafts\",\n    test: function test() {\n      return true;\n    },\n    action: function action(environment) {\n      var currentBlock = environment.context.sequences[0].block;\n      if (currentBlock.subType !== \"remark\" && !([\"title\", \"endTitle\"].includes(currentBlock.subType) && !environment.workspace.settings.showTitles) && !([\"heading\"].includes(currentBlock.subType) && !environment.workspace.settings.showHeadings) && !([\"introduction\"].includes(currentBlock.subType) && !environment.workspace.settings.showIntroductions)) {\n        var graftRecord = {\n          type: currentBlock.type\n        };\n        if (currentBlock.sequence) {\n          graftRecord.sequence = {};\n          var cachedSequencePointer = environment.workspace.currentSequence;\n          environment.workspace.currentSequence = graftRecord.sequence;\n          var cachedParaContentStack = environment.workspace.paraContentStack;\n          environment.context.renderer.renderSequence(environment);\n          environment.workspace.paraContentStack = cachedParaContentStack;\n          environment.workspace.currentSequence = cachedSequencePointer;\n        }\n        environment.workspace.currentSequence.blocks.push(graftRecord);\n      }\n    }\n  }],\n  inlineGraft: [{\n    description: \"identity\",\n    test: function test(_ref4) {\n      var context = _ref4.context,\n        workspace = _ref4.workspace;\n      return context.sequences[0].element.subType !== \"note_caller\" && !([\"footnote\"].includes(context.sequences[0].element.subType) && !workspace.settings.showFootnotes) && !([\"xref\"].includes(context.sequences[0].element.subType) && !workspace.settings.showXrefs);\n    },\n    action: function action(environment) {\n      var element = environment.context.sequences[0].element;\n      var graftRecord = {\n        type: element.type\n      };\n      if (element.sequence) {\n        graftRecord.sequence = {};\n        var cachedSequencePointer = environment.workspace.currentSequence;\n        var cachedParaContentStack = _toConsumableArray(environment.workspace.paraContentStack);\n        var cachedWebParas = environment.workspace.webParas;\n        environment.workspace.webParas = [];\n        environment.workspace.currentSequence = graftRecord.sequence;\n        environment.context.renderer.renderSequence(environment);\n        var sequencePseudoParas = environment.workspace.webParas;\n        environment.workspace.webParas = cachedWebParas;\n        environment.workspace.paraContentStack = cachedParaContentStack;\n        environment.workspace.paraContentStack[0].content.push(sequencePseudoParas);\n        environment.workspace.currentSequence = cachedSequencePointer;\n      }\n    }\n  }],\n  startParagraph: [{\n    description: \"Initialise content stack\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref5) {\n      var context = _ref5.context,\n        workspace = _ref5.workspace;\n      var block = context.sequences[0].block;\n      workspace.paraContentStack = [{\n        subType: block.subType,\n        content: []\n      }];\n    }\n  }],\n  endParagraph: [{\n    description: \"Add completed para to webParas\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref6) {\n      var config = _ref6.config,\n        context = _ref6.context,\n        workspace = _ref6.workspace;\n      workspace.webParas.push(config.renderers.paragraph(workspace.settings.showParaStyles || ['footnote', 'xref'].includes(context.sequences[0].type) ? workspace.paraContentStack[0].subType : \"usfm:m\", workspace.paraContentStack[0].content, workspace.footnoteNo));\n    }\n  }],\n  startWrapper: [{\n    description: \"Skip usfm:w outside main sequence\",\n    test: function test(_ref7) {\n      var context = _ref7.context;\n      return context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\";\n    },\n    action: function action() {}\n  }, {\n    description: \"Handle standard w attributes\",\n    test: function test(_ref8) {\n      var context = _ref8.context;\n      return context.sequences[0].element.subType === \"usfm:w\";\n    },\n    action: function action(_ref9) {\n      var context = _ref9.context,\n        workspace = _ref9.workspace;\n      var atts = context.sequences[0].element.atts;\n      var standardAtts = {};\n      for (var _ref10 of Object.entries(atts)) {\n        var _ref11 = _slicedToArray(_ref10, 2);\n        var key = _ref11[0];\n        var value = _ref11[1];\n        if ([\"strong\", \"lemma\", \"gloss\"].includes(key)) {\n          standardAtts[key] = value;\n        }\n      }\n      workspace.paraContentStack.unshift({\n        atts: standardAtts,\n        content: []\n      });\n      return false;\n    }\n  }, {\n    description: \"Push to paraContent Stack\",\n    test: function test(_ref12) {\n      var context = _ref12.context,\n        workspace = _ref12.workspace;\n      return ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup;\n    },\n    action: function action(_ref13) {\n      var context = _ref13.context,\n        workspace = _ref13.workspace;\n      var pushed = {\n        subType: context.sequences[0].element.subType,\n        content: []\n      };\n      workspace.paraContentStack.unshift(pushed);\n    }\n  }],\n  endWrapper: [{\n    description: \"Skip usfm:w outside main sequence\",\n    test: function test(_ref14) {\n      var context = _ref14.context;\n      return context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\";\n    },\n    action: function action() {}\n  }, {\n    description: \"Handle standard w attributes\",\n    test: function test(_ref15) {\n      var context = _ref15.context;\n      return context.sequences[0].element.subType === \"usfm:w\";\n    },\n    action: function action(_ref16) {\n      var config = _ref16.config,\n        workspace = _ref16.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wWrapper(workspace.settings.showWordAtts ? popped.atts : {}, popped.content));\n      return false;\n    }\n  }, {\n    description: \"Collapse one level of paraContent Stack\",\n    test: function test(_ref17) {\n      var context = _ref17.context,\n        workspace = _ref17.workspace;\n      return ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup;\n    },\n    action: function action(_ref18) {\n      var config = _ref18.config,\n        workspace = _ref18.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wrapper(popped.subType, popped.content));\n    }\n  }],\n  startMilestone: [{\n    description: \"Handle zaln word-like atts\",\n    test: function test(_ref19) {\n      var context = _ref19.context;\n      return context.sequences[0].element.subType === \"usfm:zaln\";\n    },\n    action: function action(_ref20) {\n      var context = _ref20.context,\n        workspace = _ref20.workspace;\n      var atts = context.sequences[0].element.atts;\n      var standardAtts = {};\n      for (var _ref21 of Object.entries(atts)) {\n        var _ref22 = _slicedToArray(_ref21, 2);\n        var key = _ref22[0];\n        var value = _ref22[1];\n        if ([\"x-strong\", \"x-lemma\", \"x-morph\", \"x-content\"].includes(key)) {\n          standardAtts[key.split('-')[1]] = value;\n        }\n      }\n      workspace.paraContentStack.unshift({\n        atts: standardAtts,\n        content: []\n      });\n      return false;\n    }\n  }],\n  endMilestone: [{\n    description: \"Handle zaln word-like atts\",\n    test: function test(_ref23) {\n      var context = _ref23.context;\n      return context.sequences[0].element.subType === \"usfm:zaln\";\n    },\n    action: function action(_ref24) {\n      var config = _ref24.config,\n        workspace = _ref24.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wWrapper(workspace.settings.showWordAtts ? popped.atts : {}, popped.content));\n      return false;\n    }\n  }],\n  text: [{\n    description: \"Push text to para\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref25) {\n      var config = _ref25.config,\n        context = _ref25.context,\n        workspace = _ref25.workspace;\n      var element = context.sequences[0].element;\n      var renderedText = config.renderers.text(element.text);\n      workspace.paraContentStack[0].content.push(renderedText);\n    }\n  }],\n  mark: [{\n    description: \"Show chapter/verse markers\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref26) {\n      var config = _ref26.config,\n        context = _ref26.context,\n        workspace = _ref26.workspace;\n      var element = context.sequences[0].element;\n      if (element.subType === \"chapter_label\" && workspace.settings.showChapterLabels) {\n        workspace.chapter = element.atts.number;\n        workspace.paraContentStack[0].content.push(config.renderers.chapter_label(element.atts.number));\n      } else if (element.subType === \"verses_label\" && workspace.settings.showVersesLabels) {\n        var bcv = [];\n        if (config.selectedBcvNotes.length > 0) {\n          bcv = [workspace.bookCode, workspace.chapter, element.atts.number];\n        }\n        workspace.paraContentStack[0].content.push(config.renderers.verses_label(element.atts.number, bcv, config.bcvNotesCallback));\n      }\n    }\n  }],\n  endDocument: [{\n    description: \"Build JSX\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref27) {\n      var config = _ref27.config,\n        workspace = _ref27.workspace,\n        output = _ref27.output;\n      output.paras = config.renderers.mergeParas(workspace.webParas);\n    }\n  }]\n};\nexport default sofria2WebActions;","map":{"version":3,"names":["tree2nodes","defaultSettings","showWordAtts","showTitles","showHeadings","showFootnotes","showXrefs","showChapterLabels","showVersesLabels","showCharacterMarkup","showParaStyles","selectedBcvNotes","sofria2WebActions","startDocument","description","test","action","_ref","config","context","workspace","output","settings","_objectSpread","webParas","sofria","sequence","currentSequence","paraContentStack","footnoteNo","bookCode","document","metadata","chapter","displayPartOfText","numberBlocks","int","console","log","err","startSequence","_ref2","type","sequences","blocks","endSequence","_ref3","blockGraft","environment","currentBlock","block","subType","includes","showIntroductions","graftRecord","cachedSequencePointer","cachedParaContentStack","renderer","renderSequence","push","inlineGraft","_ref4","element","_toConsumableArray","cachedWebParas","sequencePseudoParas","content","startParagraph","_ref5","endParagraph","_ref6","renderers","paragraph","startWrapper","_ref7","_ref8","_ref9","atts","standardAtts","_ref10","Object","entries","_ref11","_slicedToArray","key","value","unshift","_ref12","_ref13","pushed","endWrapper","_ref14","_ref15","_ref16","popped","shift","wWrapper","_ref17","_ref18","wrapper","startMilestone","_ref19","_ref20","_ref21","_ref22","split","endMilestone","_ref23","_ref24","text","_ref25","renderedText","mark","_ref26","number","chapter_label","bcv","length","verses_label","bcvNotesCallback","endDocument","_ref27","paras","mergeParas"],"sources":["/home/gabriel/repos/jxt-korennumi/renderer/sofria2web.js"],"sourcesContent":["import { tree2nodes } from \"proskomma-core\";\n\nconst defaultSettings = {\n    showWordAtts: false,\n    showTitles: true,\n    showHeadings: true,\n    showFootnotes: true,\n    showXrefs: true,\n    showChapterLabels: true,\n    showVersesLabels: true,\n    showCharacterMarkup: true,\n    showParaStyles: true,\n    selectedBcvNotes: []\n}\n\nconst sofria2WebActions = {\n    startDocument: [\n        {\n            description: \"Set up\",\n            test: () => true,\n            action: ({config, context, workspace, output}) => {\n                workspace.settings = {...defaultSettings, ...config}\n                workspace.webParas = [];\n                output.sofria = {};\n                output.sofria.sequence = {};\n                workspace.currentSequence = output.sofria.sequence ;\n                workspace.paraContentStack = [];\n                workspace.footnoteNo = 1;\n                workspace.bookCode = context.document.metadata.document.bookCode;\n                workspace.chapter = 0;\n                if(config.displayPartOfText != null){\n                    if(typeof(config.displayPartOfText.numberBlocks)!= int){\n                        console.log('numberBlocks must be typeof int',err)\n                        throw err\n                    }\n                }\n            },\n        }\n    ],\n \n    startSequence: [\n        {\n            description: \"identity\",\n            test: () => true,\n            action: ({context, workspace}) => {\n                workspace.currentSequence.type = context.sequences[0].type;\n                workspace.currentSequence.blocks = [];\n            }\n        },\n    ],\n    endSequence: [\n        {\n            description: \"identity\",\n            test: () => true,\n            action: ({workspace}) => {\n                if (workspace.currentSequence.type === 'footnote') {\n                    workspace.footnoteNo++;\n                }\n                workspace.currentSequence = {};\n            }\n        },\n    ],\n    blockGraft: [\n        {\n            description: \"Process block grafts\",\n            test: () => true,\n            action: (environment) => {\n                const currentBlock = environment.context.sequences[0].block;\n                if (\n                    currentBlock.subType !== \"remark\" &&\n                    !([\"title\", \"endTitle\"].includes(currentBlock.subType) && !environment.workspace.settings.showTitles) &&\n                    !([\"heading\"].includes(currentBlock.subType) && !environment.workspace.settings.showHeadings) &&\n                    !([\"introduction\"].includes(currentBlock.subType) && !environment.workspace.settings.showIntroductions)\n                ) {\n                    const graftRecord = {\n                        type: currentBlock.type,\n                    };\n                    if (currentBlock.sequence) {\n                        graftRecord.sequence = {};\n                        const cachedSequencePointer = environment.workspace.currentSequence;\n                        environment.workspace.currentSequence = graftRecord.sequence;\n                        const cachedParaContentStack = environment.workspace.paraContentStack;\n                        environment.context.renderer.renderSequence(environment);\n                        environment.workspace.paraContentStack = cachedParaContentStack;\n                        environment.workspace.currentSequence = cachedSequencePointer;\n                    }\n                    environment.workspace.currentSequence.blocks.push(graftRecord);\n                }\n            }\n        },\n    ],\n    inlineGraft: [\n        {\n            description: \"identity\",\n            test: ({context, workspace}) => context.sequences[0].element.subType !== \"note_caller\" &&\n                !([\"footnote\"].includes(context.sequences[0].element.subType) && !workspace.settings.showFootnotes) &&\n                !([\"xref\"].includes(context.sequences[0].element.subType) && !workspace.settings.showXrefs),\n                action: (environment) => {\n                const element = environment.context.sequences[0].element;\n                const graftRecord = {\n                    type: element.type,\n                };\n                if (element.sequence) {\n                    graftRecord.sequence = {};\n                    const cachedSequencePointer = environment.workspace.currentSequence;\n                    const cachedParaContentStack = [...environment.workspace.paraContentStack];\n                    const cachedWebParas = environment.workspace.webParas;\n                    environment.workspace.webParas = [];\n                    environment.workspace.currentSequence = graftRecord.sequence;\n                    environment.context.renderer.renderSequence(environment);\n                    const sequencePseudoParas = environment.workspace.webParas;\n                    environment.workspace.webParas = cachedWebParas;\n                    environment.workspace.paraContentStack = cachedParaContentStack;\n                    environment.workspace.paraContentStack[0].content.push(sequencePseudoParas);\n                    environment.workspace.currentSequence = cachedSequencePointer;\n                }\n            }\n        },\n    ],\n    startParagraph: [\n        {\n            description: \"Initialise content stack\",\n            test: () => true,\n            action: ({context, workspace}) => {\n                const block = context.sequences[0].block;\n                workspace.paraContentStack = [\n                    {\n                        subType: block.subType,\n                        content: []\n                    }\n                ]\n            }\n        },\n    ],\n    endParagraph: [\n        {\n            description: \"Add completed para to webParas\",\n            test: () => true,\n            action: ({config,context, workspace}) => {\n                workspace.webParas.push(\n                    config.renderers.paragraph(\n                        workspace.settings.showParaStyles || ['footnote', 'xref'].includes(context.sequences[0].type) ?\n                            workspace.paraContentStack[0].subType :\n                            \"usfm:m\",\n                        workspace.paraContentStack[0].content,\n                        workspace.footnoteNo,\n                    )\n                );\n            }\n        },\n    ],\n    startWrapper: [\n        {\n            description: \"Skip usfm:w outside main sequence\",\n            test: ({context}) => context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\",\n            action: () => {}\n        },\n        {\n            description: \"Handle standard w attributes\",\n            test: ({context}) => context.sequences[0].element.subType === \"usfm:w\",\n            action: ({context, workspace}) => {\n                const atts = context.sequences[0].element.atts;\n                const standardAtts = {};\n                for (const [key, value] of Object.entries(atts)) {\n                    if ([\"strong\", \"lemma\", \"gloss\"].includes(key)) {\n                        standardAtts[key] = value;\n                    }\n                }\n                workspace.paraContentStack.unshift(\n                    {\n                        atts: standardAtts,\n                        content: []\n                    }\n                );\n                return false;\n            }\n        },\n        {\n            description: \"Push to paraContent Stack\",\n            test: ({context, workspace}) => ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup,\n            action: ({context, workspace}) => {\n                const pushed = {\n                    subType: context.sequences[0].element.subType,\n                    content: []\n                };\n                workspace.paraContentStack.unshift(\n                    pushed\n                );\n            }\n        },\n    ],\n    endWrapper: [\n        {\n            description: \"Skip usfm:w outside main sequence\",\n            test: ({context}) => context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\",\n            action: () => {}\n        },\n        {\n            description: \"Handle standard w attributes\",\n            test: ({context}) => context.sequences[0].element.subType === \"usfm:w\",\n            action: ({config,workspace}) => {\n                const popped = workspace.paraContentStack.shift();\n                    workspace.paraContentStack[0].content.push(config.renderers.wWrapper(\n                        (workspace.settings.showWordAtts ? popped.atts : {}),\n                        popped.content\n                    ));\n                return false;\n            }\n        },\n        {\n            description: \"Collapse one level of paraContent Stack\",\n            test: ({context, workspace}) => ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup,\n            action: ({config,workspace}) => {\n                const popped = workspace.paraContentStack.shift();\n                workspace.paraContentStack[0].content.push(config.renderers.wrapper(popped.subType, popped.content));\n            }\n        },\n    ],\n    startMilestone: [\n        {\n            description: \"Handle zaln word-like atts\",\n            test: ({context}) => context.sequences[0].element.subType === \"usfm:zaln\",\n            action: ({context, workspace}) => {\n                const atts = context.sequences[0].element.atts;\n                const standardAtts = {};\n                for (const [key, value] of Object.entries(atts)) {\n                    if ([\"x-strong\", \"x-lemma\", \"x-morph\", \"x-content\"].includes(key)) {\n                        standardAtts[key.split('-')[1]] = value;\n                    }\n                }\n                workspace.paraContentStack.unshift(\n                    {\n                        atts: standardAtts,\n                        content: []\n                    }\n                );\n                return false;\n            }\n        },\n    ],\n    endMilestone: [\n        {\n            description: \"Handle zaln word-like atts\",\n            test: ({context}) => context.sequences[0].element.subType === \"usfm:zaln\",\n            action: ({config,workspace}) => {\n                const popped = workspace.paraContentStack.shift();\n                workspace.paraContentStack[0].content.push(config.renderers.wWrapper(\n                    (workspace.settings.showWordAtts ? popped.atts : {}),\n                    popped.content\n                ));\n                return false;\n            }\n        },\n    ],\n    text: [\n        {\n            description: \"Push text to para\",\n            test: () => true,\n            action: ({config,context, workspace}) => {\n                const element = context.sequences[0].element;\n                const renderedText = config.renderers.text(element.text)\n                workspace.paraContentStack[0].content.push(renderedText);\n            }\n        },\n    ],\n    mark: [\n        {\n            description: \"Show chapter/verse markers\",\n            test: () => true,\n            action: ({config, context, workspace}) => {\n                const element = context.sequences[0].element;\n                if (element.subType === \"chapter_label\" && workspace.settings.showChapterLabels) {\n                    workspace.chapter = element.atts.number;\n                    workspace.paraContentStack[0].content.push(config.renderers.chapter_label(element.atts.number));\n                } else if (element.subType === \"verses_label\" && workspace.settings.showVersesLabels) {\n                    let bcv = [];\n                    if (config.selectedBcvNotes.length > 0) {\n                        bcv = [workspace.bookCode, workspace.chapter, element.atts.number]\n                    }\n                    workspace.paraContentStack[0].content.push(config.renderers.verses_label(element.atts.number, bcv, config.bcvNotesCallback));\n                }\n            }\n        },\n    ],\n    endDocument: [\n        {\n            description: \"Build JSX\",\n            test: () => true,\n            action: ({config,workspace, output}) => {\n                output.paras = config.renderers.mergeParas(workspace.webParas);\n            }\n        }\n    ],\n};\n\nexport default sofria2WebActions;\n"],"mappings":";;;;;AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAE3C,IAAMC,eAAe,GAAG;EACpBC,YAAY,EAAE,KAAK;EACnBC,UAAU,EAAE,IAAI;EAChBC,YAAY,EAAE,IAAI;EAClBC,aAAa,EAAE,IAAI;EACnBC,SAAS,EAAE,IAAI;EACfC,iBAAiB,EAAE,IAAI;EACvBC,gBAAgB,EAAE,IAAI;EACtBC,mBAAmB,EAAE,IAAI;EACzBC,cAAc,EAAE,IAAI;EACpBC,gBAAgB,EAAE;AACtB,CAAC;AAED,IAAMC,iBAAiB,GAAG;EACtBC,aAAa,EAAE,CACX;IACIC,WAAW,EAAE,QAAQ;IACrBC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAAAC,IAAA,EAA0C;MAAA,IAAxCC,MAAM,GAAAD,IAAA,CAANC,MAAM;QAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;QAAEC,SAAS,GAAAH,IAAA,CAATG,SAAS;QAAEC,MAAM,GAAAJ,IAAA,CAANI,MAAM;MACxCD,SAAS,CAACE,QAAQ,GAAAC,aAAA,CAAAA,aAAA,KAAOtB,eAAe,GAAKiB,MAAM,CAAC;MACpDE,SAAS,CAACI,QAAQ,GAAG,EAAE;MACvBH,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;MAClBJ,MAAM,CAACI,MAAM,CAACC,QAAQ,GAAG,CAAC,CAAC;MAC3BN,SAAS,CAACO,eAAe,GAAGN,MAAM,CAACI,MAAM,CAACC,QAAQ;MAClDN,SAAS,CAACQ,gBAAgB,GAAG,EAAE;MAC/BR,SAAS,CAACS,UAAU,GAAG,CAAC;MACxBT,SAAS,CAACU,QAAQ,GAAGX,OAAO,CAACY,QAAQ,CAACC,QAAQ,CAACD,QAAQ,CAACD,QAAQ;MAChEV,SAAS,CAACa,OAAO,GAAG,CAAC;MACrB,IAAGf,MAAM,CAACgB,iBAAiB,IAAI,IAAI,EAAC;QAChC,IAAG,OAAOhB,MAAM,CAACgB,iBAAiB,CAACC,YAAa,IAAGC,GAAG,EAAC;UACnDC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAACC,GAAG,CAAC;UAClD,MAAMA,GAAG;QACb;MACJ;IACJ;EACJ,CAAC,CACJ;EAEDC,aAAa,EAAE,CACX;IACI1B,WAAW,EAAE,UAAU;IACvBC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAAAyB,KAAA,EAA0B;MAAA,IAAxBtB,OAAO,GAAAsB,KAAA,CAAPtB,OAAO;QAAEC,SAAS,GAAAqB,KAAA,CAATrB,SAAS;MACxBA,SAAS,CAACO,eAAe,CAACe,IAAI,GAAGvB,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACD,IAAI;MAC1DtB,SAAS,CAACO,eAAe,CAACiB,MAAM,GAAG,EAAE;IACzC;EACJ,CAAC,CACJ;EACDC,WAAW,EAAE,CACT;IACI/B,WAAW,EAAE,UAAU;IACvBC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAAA8B,KAAA,EAAiB;MAAA,IAAf1B,SAAS,GAAA0B,KAAA,CAAT1B,SAAS;MACf,IAAIA,SAAS,CAACO,eAAe,CAACe,IAAI,KAAK,UAAU,EAAE;QAC/CtB,SAAS,CAACS,UAAU,EAAE;MAC1B;MACAT,SAAS,CAACO,eAAe,GAAG,CAAC,CAAC;IAClC;EACJ,CAAC,CACJ;EACDoB,UAAU,EAAE,CACR;IACIjC,WAAW,EAAE,sBAAsB;IACnCC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAACgC,WAAW,EAAK;MACrB,IAAMC,YAAY,GAAGD,WAAW,CAAC7B,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACO,KAAK;MAC3D,IACID,YAAY,CAACE,OAAO,KAAK,QAAQ,IACjC,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,CAACC,QAAQ,CAACH,YAAY,CAACE,OAAO,CAAC,IAAI,CAACH,WAAW,CAAC5B,SAAS,CAACE,QAAQ,CAACnB,UAAU,CAAC,IACrG,EAAE,CAAC,SAAS,CAAC,CAACiD,QAAQ,CAACH,YAAY,CAACE,OAAO,CAAC,IAAI,CAACH,WAAW,CAAC5B,SAAS,CAACE,QAAQ,CAAClB,YAAY,CAAC,IAC7F,EAAE,CAAC,cAAc,CAAC,CAACgD,QAAQ,CAACH,YAAY,CAACE,OAAO,CAAC,IAAI,CAACH,WAAW,CAAC5B,SAAS,CAACE,QAAQ,CAAC+B,iBAAiB,CAAC,EACzG;QACE,IAAMC,WAAW,GAAG;UAChBZ,IAAI,EAAEO,YAAY,CAACP;QACvB,CAAC;QACD,IAAIO,YAAY,CAACvB,QAAQ,EAAE;UACvB4B,WAAW,CAAC5B,QAAQ,GAAG,CAAC,CAAC;UACzB,IAAM6B,qBAAqB,GAAGP,WAAW,CAAC5B,SAAS,CAACO,eAAe;UACnEqB,WAAW,CAAC5B,SAAS,CAACO,eAAe,GAAG2B,WAAW,CAAC5B,QAAQ;UAC5D,IAAM8B,sBAAsB,GAAGR,WAAW,CAAC5B,SAAS,CAACQ,gBAAgB;UACrEoB,WAAW,CAAC7B,OAAO,CAACsC,QAAQ,CAACC,cAAc,CAACV,WAAW,CAAC;UACxDA,WAAW,CAAC5B,SAAS,CAACQ,gBAAgB,GAAG4B,sBAAsB;UAC/DR,WAAW,CAAC5B,SAAS,CAACO,eAAe,GAAG4B,qBAAqB;QACjE;QACAP,WAAW,CAAC5B,SAAS,CAACO,eAAe,CAACiB,MAAM,CAACe,IAAI,CAACL,WAAW,CAAC;MAClE;IACJ;EACJ,CAAC,CACJ;EACDM,WAAW,EAAE,CACT;IACI9C,WAAW,EAAE,UAAU;IACvBC,IAAI,EAAE,SAAAA,KAAA8C,KAAA;MAAA,IAAE1C,OAAO,GAAA0C,KAAA,CAAP1C,OAAO;QAAEC,SAAS,GAAAyC,KAAA,CAATzC,SAAS;MAAA,OAAMD,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,KAAK,aAAa,IAClF,EAAE,CAAC,UAAU,CAAC,CAACC,QAAQ,CAACjC,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,CAAC,IAAI,CAAC/B,SAAS,CAACE,QAAQ,CAACjB,aAAa,CAAC,IACnG,EAAE,CAAC,MAAM,CAAC,CAAC+C,QAAQ,CAACjC,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,CAAC,IAAI,CAAC/B,SAAS,CAACE,QAAQ,CAAChB,SAAS,CAAC;IAAA;IAC3FU,MAAM,EAAE,SAAAA,OAACgC,WAAW,EAAK;MACzB,IAAMc,OAAO,GAAGd,WAAW,CAAC7B,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO;MACxD,IAAMR,WAAW,GAAG;QAChBZ,IAAI,EAAEoB,OAAO,CAACpB;MAClB,CAAC;MACD,IAAIoB,OAAO,CAACpC,QAAQ,EAAE;QAClB4B,WAAW,CAAC5B,QAAQ,GAAG,CAAC,CAAC;QACzB,IAAM6B,qBAAqB,GAAGP,WAAW,CAAC5B,SAAS,CAACO,eAAe;QACnE,IAAM6B,sBAAsB,GAAAO,kBAAA,CAAOf,WAAW,CAAC5B,SAAS,CAACQ,gBAAgB,CAAC;QAC1E,IAAMoC,cAAc,GAAGhB,WAAW,CAAC5B,SAAS,CAACI,QAAQ;QACrDwB,WAAW,CAAC5B,SAAS,CAACI,QAAQ,GAAG,EAAE;QACnCwB,WAAW,CAAC5B,SAAS,CAACO,eAAe,GAAG2B,WAAW,CAAC5B,QAAQ;QAC5DsB,WAAW,CAAC7B,OAAO,CAACsC,QAAQ,CAACC,cAAc,CAACV,WAAW,CAAC;QACxD,IAAMiB,mBAAmB,GAAGjB,WAAW,CAAC5B,SAAS,CAACI,QAAQ;QAC1DwB,WAAW,CAAC5B,SAAS,CAACI,QAAQ,GAAGwC,cAAc;QAC/ChB,WAAW,CAAC5B,SAAS,CAACQ,gBAAgB,GAAG4B,sBAAsB;QAC/DR,WAAW,CAAC5B,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACsC,OAAO,CAACP,IAAI,CAACM,mBAAmB,CAAC;QAC3EjB,WAAW,CAAC5B,SAAS,CAACO,eAAe,GAAG4B,qBAAqB;MACjE;IACJ;EACJ,CAAC,CACJ;EACDY,cAAc,EAAE,CACZ;IACIrD,WAAW,EAAE,0BAA0B;IACvCC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAAAoD,KAAA,EAA0B;MAAA,IAAxBjD,OAAO,GAAAiD,KAAA,CAAPjD,OAAO;QAAEC,SAAS,GAAAgD,KAAA,CAAThD,SAAS;MACxB,IAAM8B,KAAK,GAAG/B,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACO,KAAK;MACxC9B,SAAS,CAACQ,gBAAgB,GAAG,CACzB;QACIuB,OAAO,EAAED,KAAK,CAACC,OAAO;QACtBe,OAAO,EAAE;MACb,CAAC,CACJ;IACL;EACJ,CAAC,CACJ;EACDG,YAAY,EAAE,CACV;IACIvD,WAAW,EAAE,gCAAgC;IAC7CC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAAAsD,KAAA,EAAiC;MAAA,IAA/BpD,MAAM,GAAAoD,KAAA,CAANpD,MAAM;QAACC,OAAO,GAAAmD,KAAA,CAAPnD,OAAO;QAAEC,SAAS,GAAAkD,KAAA,CAATlD,SAAS;MAC/BA,SAAS,CAACI,QAAQ,CAACmC,IAAI,CACnBzC,MAAM,CAACqD,SAAS,CAACC,SAAS,CACtBpD,SAAS,CAACE,QAAQ,CAACZ,cAAc,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC0C,QAAQ,CAACjC,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC,GACzFtB,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACuB,OAAO,GACrC,QAAQ,EACZ/B,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACsC,OAAO,EACrC9C,SAAS,CAACS,UAAU,CACvB,CACJ;IACL;EACJ,CAAC,CACJ;EACD4C,YAAY,EAAE,CACV;IACI3D,WAAW,EAAE,mCAAmC;IAChDC,IAAI,EAAE,SAAAA,KAAA2D,KAAA;MAAA,IAAEvD,OAAO,GAAAuD,KAAA,CAAPvD,OAAO;MAAA,OAAMA,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,KAAK,QAAQ,IAAIhC,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACD,IAAI,KAAK,MAAM;IAAA;IAC9G1B,MAAM,EAAE,SAAAA,OAAA,EAAM,CAAC;EACnB,CAAC,EACD;IACIF,WAAW,EAAE,8BAA8B;IAC3CC,IAAI,EAAE,SAAAA,KAAA4D,KAAA;MAAA,IAAExD,OAAO,GAAAwD,KAAA,CAAPxD,OAAO;MAAA,OAAMA,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,KAAK,QAAQ;IAAA;IACtEnC,MAAM,EAAE,SAAAA,OAAA4D,KAAA,EAA0B;MAAA,IAAxBzD,OAAO,GAAAyD,KAAA,CAAPzD,OAAO;QAAEC,SAAS,GAAAwD,KAAA,CAATxD,SAAS;MACxB,IAAMyD,IAAI,GAAG1D,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACe,IAAI;MAC9C,IAAMC,YAAY,GAAG,CAAC,CAAC;MACvB,SAAAC,MAAA,IAA2BC,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;QAAA,IAAAK,MAAA,GAAAC,cAAA,CAAAJ,MAAA;QAAA,IAArCK,GAAG,GAAAF,MAAA;QAAA,IAAEG,KAAK,GAAAH,MAAA;QAClB,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC9B,QAAQ,CAACgC,GAAG,CAAC,EAAE;UAC5CN,YAAY,CAACM,GAAG,CAAC,GAAGC,KAAK;QAC7B;MACJ;MACAjE,SAAS,CAACQ,gBAAgB,CAAC0D,OAAO,CAC9B;QACIT,IAAI,EAAEC,YAAY;QAClBZ,OAAO,EAAE;MACb,CAAC,CACJ;MACD,OAAO,KAAK;IAChB;EACJ,CAAC,EACD;IACIpD,WAAW,EAAE,2BAA2B;IACxCC,IAAI,EAAE,SAAAA,KAAAwE,MAAA;MAAA,IAAEpE,OAAO,GAAAoE,MAAA,CAAPpE,OAAO;QAAEC,SAAS,GAAAmE,MAAA,CAATnE,SAAS;MAAA,OAAM,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAACgC,QAAQ,CAACjC,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,CAAC,IAAI/B,SAAS,CAACE,QAAQ,CAACb,mBAAmB;IAAA;IAC/IO,MAAM,EAAE,SAAAA,OAAAwE,MAAA,EAA0B;MAAA,IAAxBrE,OAAO,GAAAqE,MAAA,CAAPrE,OAAO;QAAEC,SAAS,GAAAoE,MAAA,CAATpE,SAAS;MACxB,IAAMqE,MAAM,GAAG;QACXtC,OAAO,EAAEhC,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO;QAC7Ce,OAAO,EAAE;MACb,CAAC;MACD9C,SAAS,CAACQ,gBAAgB,CAAC0D,OAAO,CAC9BG,MAAM,CACT;IACL;EACJ,CAAC,CACJ;EACDC,UAAU,EAAE,CACR;IACI5E,WAAW,EAAE,mCAAmC;IAChDC,IAAI,EAAE,SAAAA,KAAA4E,MAAA;MAAA,IAAExE,OAAO,GAAAwE,MAAA,CAAPxE,OAAO;MAAA,OAAMA,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,KAAK,QAAQ,IAAIhC,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACD,IAAI,KAAK,MAAM;IAAA;IAC9G1B,MAAM,EAAE,SAAAA,OAAA,EAAM,CAAC;EACnB,CAAC,EACD;IACIF,WAAW,EAAE,8BAA8B;IAC3CC,IAAI,EAAE,SAAAA,KAAA6E,MAAA;MAAA,IAAEzE,OAAO,GAAAyE,MAAA,CAAPzE,OAAO;MAAA,OAAMA,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,KAAK,QAAQ;IAAA;IACtEnC,MAAM,EAAE,SAAAA,OAAA6E,MAAA,EAAwB;MAAA,IAAtB3E,MAAM,GAAA2E,MAAA,CAAN3E,MAAM;QAACE,SAAS,GAAAyE,MAAA,CAATzE,SAAS;MACtB,IAAM0E,MAAM,GAAG1E,SAAS,CAACQ,gBAAgB,CAACmE,KAAK,EAAE;MAC7C3E,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACsC,OAAO,CAACP,IAAI,CAACzC,MAAM,CAACqD,SAAS,CAACyB,QAAQ,CAC/D5E,SAAS,CAACE,QAAQ,CAACpB,YAAY,GAAG4F,MAAM,CAACjB,IAAI,GAAG,CAAC,CAAC,EACnDiB,MAAM,CAAC5B,OAAO,CACjB,CAAC;MACN,OAAO,KAAK;IAChB;EACJ,CAAC,EACD;IACIpD,WAAW,EAAE,yCAAyC;IACtDC,IAAI,EAAE,SAAAA,KAAAkF,MAAA;MAAA,IAAE9E,OAAO,GAAA8E,MAAA,CAAP9E,OAAO;QAAEC,SAAS,GAAA6E,MAAA,CAAT7E,SAAS;MAAA,OAAM,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAACgC,QAAQ,CAACjC,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,CAAC,IAAI/B,SAAS,CAACE,QAAQ,CAACb,mBAAmB;IAAA;IAC/IO,MAAM,EAAE,SAAAA,OAAAkF,MAAA,EAAwB;MAAA,IAAtBhF,MAAM,GAAAgF,MAAA,CAANhF,MAAM;QAACE,SAAS,GAAA8E,MAAA,CAAT9E,SAAS;MACtB,IAAM0E,MAAM,GAAG1E,SAAS,CAACQ,gBAAgB,CAACmE,KAAK,EAAE;MACjD3E,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACsC,OAAO,CAACP,IAAI,CAACzC,MAAM,CAACqD,SAAS,CAAC4B,OAAO,CAACL,MAAM,CAAC3C,OAAO,EAAE2C,MAAM,CAAC5B,OAAO,CAAC,CAAC;IACxG;EACJ,CAAC,CACJ;EACDkC,cAAc,EAAE,CACZ;IACItF,WAAW,EAAE,4BAA4B;IACzCC,IAAI,EAAE,SAAAA,KAAAsF,MAAA;MAAA,IAAElF,OAAO,GAAAkF,MAAA,CAAPlF,OAAO;MAAA,OAAMA,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,KAAK,WAAW;IAAA;IACzEnC,MAAM,EAAE,SAAAA,OAAAsF,MAAA,EAA0B;MAAA,IAAxBnF,OAAO,GAAAmF,MAAA,CAAPnF,OAAO;QAAEC,SAAS,GAAAkF,MAAA,CAATlF,SAAS;MACxB,IAAMyD,IAAI,GAAG1D,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACe,IAAI;MAC9C,IAAMC,YAAY,GAAG,CAAC,CAAC;MACvB,SAAAyB,MAAA,IAA2BvB,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;QAAA,IAAA2B,MAAA,GAAArB,cAAA,CAAAoB,MAAA;QAAA,IAArCnB,GAAG,GAAAoB,MAAA;QAAA,IAAEnB,KAAK,GAAAmB,MAAA;QAClB,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAACpD,QAAQ,CAACgC,GAAG,CAAC,EAAE;UAC/DN,YAAY,CAACM,GAAG,CAACqB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGpB,KAAK;QAC3C;MACJ;MACAjE,SAAS,CAACQ,gBAAgB,CAAC0D,OAAO,CAC9B;QACIT,IAAI,EAAEC,YAAY;QAClBZ,OAAO,EAAE;MACb,CAAC,CACJ;MACD,OAAO,KAAK;IAChB;EACJ,CAAC,CACJ;EACDwC,YAAY,EAAE,CACV;IACI5F,WAAW,EAAE,4BAA4B;IACzCC,IAAI,EAAE,SAAAA,KAAA4F,MAAA;MAAA,IAAExF,OAAO,GAAAwF,MAAA,CAAPxF,OAAO;MAAA,OAAMA,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO,CAACX,OAAO,KAAK,WAAW;IAAA;IACzEnC,MAAM,EAAE,SAAAA,OAAA4F,MAAA,EAAwB;MAAA,IAAtB1F,MAAM,GAAA0F,MAAA,CAAN1F,MAAM;QAACE,SAAS,GAAAwF,MAAA,CAATxF,SAAS;MACtB,IAAM0E,MAAM,GAAG1E,SAAS,CAACQ,gBAAgB,CAACmE,KAAK,EAAE;MACjD3E,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACsC,OAAO,CAACP,IAAI,CAACzC,MAAM,CAACqD,SAAS,CAACyB,QAAQ,CAC/D5E,SAAS,CAACE,QAAQ,CAACpB,YAAY,GAAG4F,MAAM,CAACjB,IAAI,GAAG,CAAC,CAAC,EACnDiB,MAAM,CAAC5B,OAAO,CACjB,CAAC;MACF,OAAO,KAAK;IAChB;EACJ,CAAC,CACJ;EACD2C,IAAI,EAAE,CACF;IACI/F,WAAW,EAAE,mBAAmB;IAChCC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAAA8F,MAAA,EAAiC;MAAA,IAA/B5F,MAAM,GAAA4F,MAAA,CAAN5F,MAAM;QAACC,OAAO,GAAA2F,MAAA,CAAP3F,OAAO;QAAEC,SAAS,GAAA0F,MAAA,CAAT1F,SAAS;MAC/B,IAAM0C,OAAO,GAAG3C,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO;MAC5C,IAAMiD,YAAY,GAAG7F,MAAM,CAACqD,SAAS,CAACsC,IAAI,CAAC/C,OAAO,CAAC+C,IAAI,CAAC;MACxDzF,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACsC,OAAO,CAACP,IAAI,CAACoD,YAAY,CAAC;IAC5D;EACJ,CAAC,CACJ;EACDC,IAAI,EAAE,CACF;IACIlG,WAAW,EAAE,4BAA4B;IACzCC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAAAiG,MAAA,EAAkC;MAAA,IAAhC/F,MAAM,GAAA+F,MAAA,CAAN/F,MAAM;QAAEC,OAAO,GAAA8F,MAAA,CAAP9F,OAAO;QAAEC,SAAS,GAAA6F,MAAA,CAAT7F,SAAS;MAChC,IAAM0C,OAAO,GAAG3C,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACmB,OAAO;MAC5C,IAAIA,OAAO,CAACX,OAAO,KAAK,eAAe,IAAI/B,SAAS,CAACE,QAAQ,CAACf,iBAAiB,EAAE;QAC7Ea,SAAS,CAACa,OAAO,GAAG6B,OAAO,CAACe,IAAI,CAACqC,MAAM;QACvC9F,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACsC,OAAO,CAACP,IAAI,CAACzC,MAAM,CAACqD,SAAS,CAAC4C,aAAa,CAACrD,OAAO,CAACe,IAAI,CAACqC,MAAM,CAAC,CAAC;MACnG,CAAC,MAAM,IAAIpD,OAAO,CAACX,OAAO,KAAK,cAAc,IAAI/B,SAAS,CAACE,QAAQ,CAACd,gBAAgB,EAAE;QAClF,IAAI4G,GAAG,GAAG,EAAE;QACZ,IAAIlG,MAAM,CAACP,gBAAgB,CAAC0G,MAAM,GAAG,CAAC,EAAE;UACpCD,GAAG,GAAG,CAAChG,SAAS,CAACU,QAAQ,EAAEV,SAAS,CAACa,OAAO,EAAE6B,OAAO,CAACe,IAAI,CAACqC,MAAM,CAAC;QACtE;QACA9F,SAAS,CAACQ,gBAAgB,CAAC,CAAC,CAAC,CAACsC,OAAO,CAACP,IAAI,CAACzC,MAAM,CAACqD,SAAS,CAAC+C,YAAY,CAACxD,OAAO,CAACe,IAAI,CAACqC,MAAM,EAAEE,GAAG,EAAElG,MAAM,CAACqG,gBAAgB,CAAC,CAAC;MAChI;IACJ;EACJ,CAAC,CACJ;EACDC,WAAW,EAAE,CACT;IACI1G,WAAW,EAAE,WAAW;IACxBC,IAAI,EAAE,SAAAA,KAAA;MAAA,OAAM,IAAI;IAAA;IAChBC,MAAM,EAAE,SAAAA,OAAAyG,MAAA,EAAgC;MAAA,IAA9BvG,MAAM,GAAAuG,MAAA,CAANvG,MAAM;QAACE,SAAS,GAAAqG,MAAA,CAATrG,SAAS;QAAEC,MAAM,GAAAoG,MAAA,CAANpG,MAAM;MAC9BA,MAAM,CAACqG,KAAK,GAAGxG,MAAM,CAACqD,SAAS,CAACoD,UAAU,CAACvG,SAAS,CAACI,QAAQ,CAAC;IAClE;EACJ,CAAC;AAET,CAAC;AAED,eAAeZ,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}