{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { ResizableTab } from \"./components/used/resizableTab\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FontAwesomeIcon from \"@expo/vector-icons/FontAwesome\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nvar _require = require('proskomma-core'),\n  Proskomma = _require.Proskomma;\nimport { CheckboxMe } from \"./components/used/TextConfig/CheckBox\";\nvar succinct = require(\"./succinct/test.json\");\nvar succinct2 = require(\"./succinct/fnT.json\");\nimport { BoxComponent } from \"./components/proofOfConcept/tableTest/tableTest\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _require2 = require(\"./components/proofOfConcept/tableTest/mat\"),\n  usfm = _require2.usfm;\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var pk = new Proskomma([{\n    name: \"source\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }, {\n    name: \"project\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }, {\n    name: \"revision\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }]);\n  pk.loadSuccinctDocSet(succinct);\n  pk.loadSuccinctDocSet(succinct2);\n  pk.importDocument({\n    'source': '1',\n    'project': 'web',\n    'revision': '0'\n  }, 'usfm', usfm);\n  function AnotherScreen() {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return changeOrientation(ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT);\n        },\n        children: _jsx(Text, {\n          children: \"Another Tab!\"\n        })\n      })\n    });\n  }\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    orientation = _useState2[0],\n    setOrientation = _useState2[1];\n  useEffect(function () {\n    checkOrientation();\n    var subscription = ScreenOrientation.addOrientationChangeListener(handleOrientationChange);\n    return function () {\n      ScreenOrientation.removeOrientationChangeListeners(subscription);\n    };\n  }, []);\n  var checkOrientation = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var orientation = yield ScreenOrientation.getOrientationAsync();\n      setOrientation(orientation);\n    });\n    return function checkOrientation() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var changeOrientation = function () {\n    var _ref2 = _asyncToGenerator(function* (newOrientation) {\n      console.log(\"newOrientation: \", newOrientation);\n      yield ScreenOrientation.lockAsync(newOrientation);\n    });\n    return function changeOrientation(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleOrientationChange = function handleOrientationChange(o) {\n    setOrientation(o.orientationInfo.orientation);\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"ReadingScreen\",\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(FontAwesomeIcon, {\n              name: \"book\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        children: function children() {\n          return _jsx(CheckboxMe, {});\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"resizableTab\",\n        children: function children() {\n          return _jsx(ResizableTab, {\n            pk: pk\n          });\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","ResizableTab","View","ScrollView","Text","Button","TouchableOpacity","FontAwesomeIcon","NavigationContainer","createBottomTabNavigator","ScreenOrientation","_require","require","Proskomma","CheckboxMe","succinct","succinct2","BoxComponent","jsx","_jsx","jsxs","_jsxs","_require2","usfm","Tab","App","pk","name","type","regex","loadSuccinctDocSet","importDocument","AnotherScreen","style","flex","justifyContent","alignItems","children","onPress","changeOrientation","OrientationLock","LANDSCAPE_RIGHT","_useState","_useState2","_slicedToArray","orientation","setOrientation","checkOrientation","subscription","addOrientationChangeListener","handleOrientationChange","removeOrientationChangeListeners","_ref","_asyncToGenerator","getOrientationAsync","apply","arguments","_ref2","newOrientation","console","log","lockAsync","_x","o","orientationInfo","Navigator","initialRouteName","screenOptions","headerShown","Screen","options","tabBarIcon","_ref3","color","size"],"sources":["/home/gabriel/repos/jxt-korennumi/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ResizableTab } from './components/used/resizableTab'\nimport { View, ScrollView, Text, Button, TouchableOpacity } from 'react-native';\nimport FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nconst { Proskomma } = require('proskomma-core');\nimport { CheckboxMe } from './components/used/TextConfig/CheckBox';\nconst succinct = require('./succinct/test.json');\nconst succinct2 = require('./succinct/fnT.json');\nimport { BoxComponent } from './components/proofOfConcept/tableTest/tableTest';\nconst { usfm } = require('./components/proofOfConcept/tableTest/mat')\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const pk = new Proskomma([\n    {\n      name: \"source\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n    {\n      name: \"project\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n    {\n      name: \"revision\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n  ]);\n  pk.loadSuccinctDocSet(succinct);\n  pk.loadSuccinctDocSet(succinct2);\n\n  pk.importDocument({ 'source': '1', 'project': 'web', 'revision': '0' }, 'usfm', usfm);\n\n\n\n  function AnotherScreen() {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <TouchableOpacity onPress={() =>\n          changeOrientation(ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT)\n        }><Text>Another Tab!</Text></TouchableOpacity>\n      </View>\n    );\n  }\n\n  const [orientation, setOrientation] = useState(null);\n  useEffect(() => {\n    checkOrientation();\n    const subscription = ScreenOrientation.addOrientationChangeListener(\n      handleOrientationChange\n    );\n    return () => {\n      ScreenOrientation.removeOrientationChangeListeners(subscription);\n    };\n  }, []);\n  const checkOrientation = async () => {\n    const orientation = await ScreenOrientation.getOrientationAsync();\n    setOrientation(orientation);\n  };\n  const changeOrientation = async (newOrientation) => {\n    console.log(\"newOrientation: \", newOrientation);\n    await ScreenOrientation.lockAsync(newOrientation);\n  };\n  const handleOrientationChange = (o) => {\n    setOrientation(o.orientationInfo.orientation);\n  };\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        initialRouteName=\"Home\"\n        screenOptions={{\n          headerShown: false,\n\n        }}>\n        <Tab.Screen\n          name=\"ReadingScreen\" options={{\n            tabBarIcon: ({ color, size }) => (\n              <FontAwesomeIcon name=\"book\" color={color} size={size} />)\n          }}>\n          {() => <CheckboxMe />}\n        </Tab.Screen>\n        <Tab.Screen name=\"resizableTab\">\n          {() => <ResizableTab pk={pk} />}\n        </Tab.Screen>\n      </Tab.Navigator>\n    </NavigationContainer >\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY;AAAwC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAE7D,OAAOC,eAAe;AACtB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAO,KAAKC,iBAAiB,MAAM,yBAAyB;AAC5D,IAAAC,QAAA,GAAsBC,OAAO,CAAC,gBAAgB,CAAC;EAAvCC,SAAS,GAAAF,QAAA,CAATE,SAAS;AACjB,SAASC,UAAU;AACnB,IAAMC,QAAQ,GAAGH,OAAO,wBAAwB;AAChD,IAAMI,SAAS,GAAGJ,OAAO,uBAAuB;AAChD,SAASK,YAAY;AAA0D,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC/E,IAAAC,SAAA,GAAiBV,OAAO,6CAA6C;EAA7DW,IAAI,GAAAD,SAAA,CAAJC,IAAI;AACZ,IAAMC,GAAG,GAAGf,wBAAwB,EAAE;AAEtC,eAAe,SAASgB,GAAGA,CAAA,EAAG;EAC5B,IAAMC,EAAE,GAAG,IAAIb,SAAS,CAAC,CACvB;IACEc,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EACFH,EAAE,CAACI,kBAAkB,CAACf,QAAQ,CAAC;EAC/BW,EAAE,CAACI,kBAAkB,CAACd,SAAS,CAAC;EAEhCU,EAAE,CAACK,cAAc,CAAC;IAAE,QAAQ,EAAE,GAAG;IAAE,SAAS,EAAE,KAAK;IAAE,UAAU,EAAE;EAAI,CAAC,EAAE,MAAM,EAAER,IAAI,CAAC;EAIrF,SAASS,aAAaA,CAAA,EAAG;IACvB,OACEb,IAAA,CAACjB,IAAI;MAAC+B,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,EACvElB,IAAA,CAACb,gBAAgB;QAACgC,OAAO,EAAE,SAAAA,QAAA;UAAA,OACzBC,iBAAiB,CAAC7B,iBAAiB,CAAC8B,eAAe,CAACC,eAAe,CAAC;QAAA,CACrE;QAAAJ,QAAA,EAAClB,IAAA,CAACf,IAAI;UAAAiC,QAAA,EAAC;QAAY;MAAO;IAAmB,EACzC;EAEX;EAEA,IAAAK,SAAA,GAAsC3C,QAAQ,CAAC,IAAI,CAAC;IAAA4C,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC3C,SAAS,CAAC,YAAM;IACd+C,gBAAgB,EAAE;IAClB,IAAMC,YAAY,GAAGtC,iBAAiB,CAACuC,4BAA4B,CACjEC,uBAAuB,CACxB;IACD,OAAO,YAAM;MACXxC,iBAAiB,CAACyC,gCAAgC,CAACH,YAAY,CAAC;IAClE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,IAAMD,gBAAgB;IAAA,IAAAK,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACnC,IAAMR,WAAW,SAASnC,iBAAiB,CAAC4C,mBAAmB,EAAE;MACjER,cAAc,CAACD,WAAW,CAAC;IAC7B,CAAC;IAAA,gBAHKE,gBAAgBA,CAAA;MAAA,OAAAK,IAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GAGrB;EACD,IAAMjB,iBAAiB;IAAA,IAAAkB,KAAA,GAAAJ,iBAAA,CAAG,WAAOK,cAAc,EAAK;MAClDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,cAAc,CAAC;MAC/C,MAAMhD,iBAAiB,CAACmD,SAAS,CAACH,cAAc,CAAC;IACnD,CAAC;IAAA,gBAHKnB,iBAAiBA,CAAAuB,EAAA;MAAA,OAAAL,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAGtB;EACD,IAAMN,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIa,CAAC,EAAK;IACrCjB,cAAc,CAACiB,CAAC,CAACC,eAAe,CAACnB,WAAW,CAAC;EAC/C,CAAC;EACD,OACE1B,IAAA,CAACX,mBAAmB;IAAA6B,QAAA,EAClBhB,KAAA,CAACG,GAAG,CAACyC,SAAS;MACZC,gBAAgB,EAAC,MAAM;MACvBC,aAAa,EAAE;QACbC,WAAW,EAAE;MAEf,CAAE;MAAA/B,QAAA,GACFlB,IAAA,CAACK,GAAG,CAAC6C,MAAM;QACT1C,IAAI,EAAC,eAAe;QAAC2C,OAAO,EAAE;UAC5BC,UAAU,EAAE,SAAAA,WAAAC,KAAA;YAAA,IAAGC,KAAK,GAAAD,KAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;YAAA,OACxBvD,IAAA,CAACZ,eAAe;cAACoB,IAAI,EAAC,MAAM;cAAC8C,KAAK,EAAEA,KAAM;cAACC,IAAI,EAAEA;YAAK,EAAG;UAAA;QAC7D,CAAE;QAAArC,QAAA,EACD,SAAAA,SAAA;UAAA,OAAMlB,IAAA,CAACL,UAAU,KAAG;QAAA;MAAA,EACV,EACbK,IAAA,CAACK,GAAG,CAAC6C,MAAM;QAAC1C,IAAI,EAAC,cAAc;QAAAU,QAAA,EAC5B,SAAAA,SAAA;UAAA,OAAMlB,IAAA,CAAClB,YAAY;YAACyB,EAAE,EAAEA;UAAG,EAAG;QAAA;MAAA,EACpB;IAAA;EACC,EACK;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}