{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CheckboxMe } from \"./CheckBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ChapitreSelection(_ref) {\n  var pk = _ref.pk,\n    bible = _ref.bible,\n    livre = _ref.livre,\n    chapitre = _ref.chapitre,\n    setChapitre = _ref.setChapitre;\n  if (livre === 'null' || bible == 'null') {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n  var chapters = pk.gqlQuerySync(\"{\\n        docSet(id: \\\"\" + bible + \"\\\") {\\n          document(bookCode: \\\"\" + livre + \"\\\") {\\n            cvIndexes {\\n              chapter\\n            }\\n          }\\n        }\\n      }\");\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    boolChapter = _useState2[0],\n    setBoolChapter = _useState2[1];\n  useEffect(function () {\n    console.log('useEffect');\n    var newChapter = [];\n    for (var key in boolChapter) {\n      if (boolChapter[key]) newChapter.push(key);\n    }\n    console.log('makeChapter');\n  }, [boolChapter]);\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item;\n    return _jsx(CheckboxMe, {\n      num: item.chapter,\n      setParentList: setBoolChapter,\n      parentList: boolChapter\n    });\n  }, [boolChapter]);\n  var keyExtractor = useCallback(function (item, index) {\n    return \"chap-\" + index;\n  }, []);\n  if (chapters.data.docSet.document != null) {\n    return _jsx(FlatList, {\n      data: chapters.data.docSet.document.cvIndexes,\n      numColumns: 3,\n      keyExtractor: keyExtractor,\n      renderItem: renderItem\n    });\n  } else {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n}\nexport { ChapitreSelection };","map":{"version":3,"names":["Text","useCallback","useEffect","useState","View","FlatList","CheckboxMe","jsx","_jsx","ChapitreSelection","_ref","pk","bible","livre","chapitre","setChapitre","children","chapters","gqlQuerySync","_useState","_useState2","_slicedToArray","boolChapter","setBoolChapter","console","log","newChapter","key","push","renderItem","_ref2","item","num","chapter","setParentList","parentList","keyExtractor","index","data","docSet","document","cvIndexes","numColumns"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/ChapitreSelection.js"],"sourcesContent":["import { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { View, FlatList } from 'react-native';\nimport { CheckboxMe } from './CheckBox';\n\nfunction ChapitreSelection({ pk, bible, livre, chapitre, setChapitre }) {\n\n\n\n  if (livre === 'null' || bible == 'null') {\n    return <Text>{`Can't display`}</Text>\n  }\n  let chapters = pk.gqlQuerySync(\n    `{\n        docSet(id: \"${bible}\") {\n          document(bookCode: \"${livre}\") {\n            cvIndexes {\n              chapter\n            }\n          }\n        }\n      }`);\n\n  const [boolChapter, setBoolChapter] = useState({});\n\n  useEffect(() => {\n    console.log('useEffect')\n    let newChapter = []\n    for (let key in boolChapter) {\n      if (boolChapter[key])\n        newChapter.push(key)\n    }\n    console.log('makeChapter')\n  }, [boolChapter]);\n\n  const renderItem = useCallback(({ item }) => {\n    return (\n      <CheckboxMe \n        num={item.chapter} \n        setParentList={setBoolChapter} \n        parentList={boolChapter}\n      />\n    );\n  }, [boolChapter]);\n\n  const keyExtractor = useCallback((item, index) => `chap-${index}`, []);\n\n\n  if (chapters.data.docSet.document != null) {\n    return (\n      <FlatList\n        data={chapters.data.docSet.document.cvIndexes}\n        numColumns={3}\n        keyExtractor={keyExtractor}\n        renderItem={renderItem} \n      />\n    );\n  } else {\n    return <Text>{`Can't display`}</Text>\n  }\n}\nexport { ChapitreSelection }\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAGzD,SAASC,UAAU;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAExC,SAASC,iBAAiBA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAEC,WAAW,GAAAL,IAAA,CAAXK,WAAW;EAIlE,IAAIF,KAAK,KAAK,MAAM,IAAID,KAAK,IAAI,MAAM,EAAE;IACvC,OAAOJ,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;EACA,IAAIC,QAAQ,GAAGN,EAAE,CAACO,YAAY,8BAEVN,KAAK,8CACKC,KAAK,2GAM5B;EAEP,IAAAM,SAAA,GAAsChB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElClB,SAAS,CAAC,YAAM;IACdsB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,IAAIC,UAAU,GAAG,EAAE;IACnB,KAAK,IAAIC,GAAG,IAAIL,WAAW,EAAE;MAC3B,IAAIA,WAAW,CAACK,GAAG,CAAC,EAClBD,UAAU,CAACE,IAAI,CAACD,GAAG,CAAC;IACxB;IACAH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAMO,UAAU,GAAG5B,WAAW,CAAC,UAAA6B,KAAA,EAAc;IAAA,IAAXC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IACpC,OACEvB,IAAA,CAACF,UAAU;MACT0B,GAAG,EAAED,IAAI,CAACE,OAAQ;MAClBC,aAAa,EAAEX,cAAe;MAC9BY,UAAU,EAAEb;IAAY,EACxB;EAEN,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,IAAMc,YAAY,GAAGnC,WAAW,CAAC,UAAC8B,IAAI,EAAEM,KAAK;IAAA,iBAAaA,KAAK;EAAA,CAAE,EAAE,EAAE,CAAC;EAGtE,IAAIpB,QAAQ,CAACqB,IAAI,CAACC,MAAM,CAACC,QAAQ,IAAI,IAAI,EAAE;IACzC,OACEhC,IAAA,CAACH,QAAQ;MACPiC,IAAI,EAAErB,QAAQ,CAACqB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,SAAU;MAC9CC,UAAU,EAAE,CAAE;MACdN,YAAY,EAAEA,YAAa;MAC3BP,UAAU,EAAEA;IAAW,EACvB;EAEN,CAAC,MAAM;IACL,OAAOrB,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;AACF;AACA,SAASP,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}