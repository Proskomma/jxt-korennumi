{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar ProskommaRenderAction = require(\"./ProskommaRenderAction\");\nvar ProskommaRender = function () {\n  \"use strict\";\n\n  function ProskommaRender(spec) {\n    _classCallCheck(this, ProskommaRender);\n    if (this.constructor === ProskommaRender) {\n      throw new Error(\"Abstract class ProskommaRender cannot be instantiated - make as subclass!\");\n    }\n    var actions = spec.actions || {};\n    this.debugLevel = spec.debugLevel || 0;\n    this.actions = {};\n    for (var event of [\"startDocument\", \"endDocument\", \"startSequence\", \"startRow\", \"endRow\", \"endSequence\", \"unresolvedBlockGraft\", \"blockGraft\", \"startParagraph\", \"endParagraph\", \"metaContent\", \"mark\", \"unresolvedInlineGraft\", \"inlineGraft\", \"startWrapper\", \"endWrapper\", \"startMilestone\", \"endMilestone\", \"startChapter\", \"endChapter\", \"startVerses\", \"endVerses\", \"text\"]) {\n      if (actions[event]) {\n        this.actions[event] = actions[event].map(function (a) {\n          return new ProskommaRenderAction(a);\n        });\n      } else {\n        this.actions[event] = [];\n      }\n    }\n  }\n  _createClass(ProskommaRender, [{\n    key: \"addRenderActionObject\",\n    value: function addRenderActionObject(event, actionOb) {\n      if (!this.actions[event]) {\n        throw new Error(\"Unknown event '\" + event);\n      }\n      this.actions[event].push(actionOb);\n    }\n  }, {\n    key: \"addRenderAction\",\n    value: function addRenderAction(event, actionSpec) {\n      this.addRenderActionObject(event, new ProskommaRenderAction(actionSpec));\n    }\n  }, {\n    key: \"describeRenderActions\",\n    value: function describeRenderActions(event) {\n      if (!this.actions[event]) {\n        throw new Error(\"Unknown event '\" + event);\n      }\n      var ret = [\"**Actions for \" + event + \"**\\n\"];\n      for (var actionOb of this.actions[event]) {\n        ret.push(\"IF \" + actionOb.test.toString() + \":\");\n        ret.push(\"    DO \" + actionOb.description);\n      }\n      return ret.join('\\n');\n    }\n  }, {\n    key: \"renderDocument\",\n    value: function renderDocument(_ref) {\n      var docId = _ref.docId,\n        config = _ref.config,\n        output = _ref.output;\n      var context = {};\n      var workspace = {};\n      this.renderDocument1({\n        docId: docId,\n        config: config,\n        context: context,\n        workspace: workspace,\n        output: output\n      });\n      return output;\n    }\n  }, {\n    key: \"renderDocument1\",\n    value: function renderDocument1(_ref2) {\n      var docId = _ref2.docId,\n        config = _ref2.config,\n        context = _ref2.context,\n        workspace = _ref2.workspace,\n        output = _ref2.output;\n      throw new Error(\"Define renderDocument1() in subclass\");\n    }\n  }, {\n    key: \"renderEvent\",\n    value: function renderEvent(event, renderEnvironment) {\n      var context = renderEnvironment.context;\n      if (this.debugLevel > 1) {\n        console.log(\"    \".repeat(context.sequences.length) + \"EVENT \" + event);\n      }\n      if (!this.actions[event]) {\n        throw new Error(\"Unknown event '\" + event);\n      }\n      var found = false;\n      for (var actionOb of this.actions[event]) {\n        var testResult = false;\n        try {\n          testResult = actionOb.test(renderEnvironment);\n        } catch (err) {\n          var msg = \"Exception from test of action '\" + actionOb.description + \"' for event \" + event + \" in \" + (context.sequences.length > 0 ? context.sequences[0].type : \"no\") + \" sequence: \" + err;\n          throw new Error(msg);\n        }\n        if (testResult) {\n          found = true;\n          if (this.debugLevel > 0) {\n            console.log(\"    \".repeat(context.sequences.length) + \"    \" + event + \" action: \" + actionOb.description);\n          }\n          var actionResult = false;\n          try {\n            actionResult = actionOb.action(renderEnvironment);\n          } catch (err) {\n            throw new Error(\"Exception from action '\" + actionOb.description + \"' for event \" + event + \" in \" + (context.sequences.length > 0 ? context.sequences[0].type : \"no\") + \" sequence: \" + err);\n          }\n          if (!actionResult) {\n            break;\n          }\n        }\n      }\n      if (['unresolvedBlockGraft', 'unresolvedInlineGraft'].includes(event) && this.actions[event].length === 0) {\n        throw new Error(\"No action for \" + event + \" graft event in \" + (context.sequences.length > 0 ? context.sequences[0].type : \"no\") + \" sequence: add an action or fix your data!\");\n      }\n      if (!found && this.debugLevel > 1) {\n        console.log(\"    \".repeat(context.sequences.length) + \"    No matching action\");\n      }\n    }\n  }]);\n  return ProskommaRender;\n}();\nmodule.exports = ProskommaRender;","map":{"version":3,"names":["ProskommaRenderAction","require","ProskommaRender","spec","_classCallCheck","constructor","Error","actions","debugLevel","event","map","a","_createClass","key","value","addRenderActionObject","actionOb","push","addRenderAction","actionSpec","describeRenderActions","ret","test","toString","description","join","renderDocument","_ref","docId","config","output","context","workspace","renderDocument1","_ref2","renderEvent","renderEnvironment","console","log","repeat","sequences","length","found","testResult","err","msg","type","actionResult","action","includes","module","exports"],"sources":["/home/gabriel/repos/jxt-korennumi/components/used/ProskommaRender.js"],"sourcesContent":["const ProskommaRenderAction = require('./ProskommaRenderAction');\n\nclass ProskommaRender {\n\n    constructor(spec) {\n        if (this.constructor === ProskommaRender) {\n            throw new Error(\"Abstract class ProskommaRender cannot be instantiated - make as subclass!\");\n        }\n        const actions = spec.actions || {};\n        this.debugLevel = spec.debugLevel || 0;\n        this.actions = {};\n        for (const event of [\n            \"startDocument\",\n            \"endDocument\",\n            \"startSequence\",\n            \"startRow\",\n            \"endRow\",\n            \"endSequence\",\n            \"unresolvedBlockGraft\",\n            \"blockGraft\",\n            \"startParagraph\",\n            \"endParagraph\",\n            \"metaContent\",\n            \"mark\",\n            \"unresolvedInlineGraft\",\n            \"inlineGraft\",\n            \"startWrapper\",\n            \"endWrapper\",\n            \"startMilestone\",\n            \"endMilestone\",\n            \"startChapter\",\n            \"endChapter\",\n            \"startVerses\",\n            \"endVerses\",\n            \"text\"\n        ]) {\n            if (actions[event]) {\n                this.actions[event] = actions[event].map(a => new ProskommaRenderAction(a));\n            } else {\n                this.actions[event] = [];\n            }\n        }\n    }\n\n    addRenderActionObject(event, actionOb) {\n        if (!this.actions[event]) {\n            throw new Error(`Unknown event '${event}`);\n        }\n        this.actions[event].push(actionOb);\n    }\n\n    addRenderAction(event, actionSpec) {\n        this.addRenderActionObject(event, new ProskommaRenderAction(actionSpec));\n    }\n\n    describeRenderActions(event) {\n        if (!this.actions[event]) {\n            throw new Error(`Unknown event '${event}`);\n        }\n        const ret = [`**Actions for ${event}**\\n`];\n        for (const actionOb of this.actions[event]) {\n            ret.push(`IF ${actionOb.test.toString()}:`);\n            ret.push(`    DO ${actionOb.description}`);\n        }\n        return ret.join('\\n');\n    }\n\n    renderDocument({ docId, config, output }) {\n        const context = {};\n        const workspace = {};\n        this.renderDocument1({\n            docId,\n            config,\n            context,\n            workspace,\n            output\n        });\n        return output;\n    }\n\n    renderDocument1({ docId, config, context, workspace, output }) {\n        throw new Error(`Define renderDocument1() in subclass`);\n    }\n\n    // renderEnvironment => {config, context, workspace, output}\n    renderEvent(event, renderEnvironment) {\n        const context = renderEnvironment.context;\n        if (this.debugLevel > 1) {\n            console.log(`${\"    \".repeat(context.sequences.length)}EVENT ${event}`);\n        }\n        if (!this.actions[event]) {\n            throw new Error(`Unknown event '${event}`);\n        }\n        let found = false;\n        for (const actionOb of this.actions[event]) {\n            let testResult = false;\n            try {\n                testResult = actionOb.test(renderEnvironment);\n            } catch (err) {\n                const msg = `Exception from test of action '${actionOb.description}' for event ${event} in ${context.sequences.length > 0 ? context.sequences[0].type : \"no\"} sequence: ${err}`;\n                throw new Error(msg);\n            }\n            if (testResult) {\n                found = true;\n                if (this.debugLevel > 0) {\n                    console.log(`${\"    \".repeat(context.sequences.length)}    ${event} action: ${actionOb.description}`);\n                }\n                let actionResult = false;\n                try {\n                    actionResult = actionOb.action(renderEnvironment);\n                } catch (err) {\n                    throw new Error(`Exception from action '${actionOb.description}' for event ${event} in ${context.sequences.length > 0 ? context.sequences[0].type : \"no\"} sequence: ${err}`);\n                }\n                if (!actionResult) {\n                    break;\n                }\n            }\n        }\n        if (['unresolvedBlockGraft', 'unresolvedInlineGraft'].includes(event) && this.actions[event].length === 0) {\n            throw new Error(`No action for ${event} graft event in ${context.sequences.length > 0 ? context.sequences[0].type : \"no\"} sequence: add an action or fix your data!`)\n        }\n        if (!found && this.debugLevel > 1) {\n            console.log(`${\"    \".repeat(context.sequences.length)}    No matching action`);\n        }\n    };\n\n}\n\nmodule.exports = ProskommaRender;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}