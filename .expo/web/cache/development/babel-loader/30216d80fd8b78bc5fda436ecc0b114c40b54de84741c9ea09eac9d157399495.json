{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { renderStyles as rs, ConvertCssToReactNativeStyle } from \"./renderStyles\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Table, Cell, TableWrapper } from 'react-native-reanimated-table';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar convertedStyleSheet = ConvertCssToReactNativeStyle(rs);\nvar styles = StyleSheet.create(convertedStyleSheet);\nvar getStyles = function getStyles(type, subType) {\n  if (!styles[type]) {\n    throw new Error(\"Unknown style type '\" + type + \"'\");\n  }\n  if (!styles[type][subType]) {\n    console.log(\"No styles for \" + type + \"/\" + subType);\n    return styles[type].default;\n  }\n  return _objectSpread(_objectSpread({}, styles[type].default), styles[type][subType]);\n};\nfunction InlineElement(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    display = _useState2[0],\n    setDisplay = _useState2[1];\n  var toggleDisplay = function toggleDisplay() {\n    return setDisplay(!display);\n  };\n  if (display) {\n    return _jsx(Text, {\n      style: {\n        backgroundColor: \"#CCC\",\n        marginBottom: 16,\n        borderWidth: 1,\n        borderRadius: 4,\n        width: '80%',\n        alignSelf: 'center',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      onPress: toggleDisplay,\n      children: props.children\n    }, \"Inline \" + Math.random() + \" \");\n  } else {\n    return _jsx(Text, {\n      style: {\n        verticalAlign: 'top',\n        fontSize: 10,\n        fontWeight: \"bold\",\n        marginRight: 4,\n        marginLeft: 4,\n        marginTop: 15,\n        padding: 2,\n        backgroundColor: \"#CCC\"\n      },\n      onPress: toggleDisplay,\n      children: props.linkText\n    }, \"Inline_\" + Math.random());\n  }\n}\nvar renderers = {\n  text: function text(_text, id) {\n    console.log(_text);\n    return _jsx(View, {\n      style: {\n        paddingTop: 20\n      },\n      children: _jsx(Text, {\n        children: _text\n      })\n    }, \"text_\" + Math.random());\n  },\n  chapter_label: function chapter_label(number) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        style: _objectSpread({}, getStyles('marks', \"chapter_label\")),\n        children: number\n      })\n    }, Math.random());\n  },\n  verses_label: function verses_label(number, bcv, bcvCallback) {\n    return bcv && bcv.length === 3 ? _jsx(Text, {\n      onClick: function onClick() {\n        return bcvCallback(bcv);\n      },\n      style: _objectSpread(_objectSpread({}, getStyles('marks', \"verses_label\")), {}, {\n        textDecoration: \"underline\",\n        color: \"#00D\"\n      }),\n      children: number\n    }) : _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        paddingTop: 10\n      },\n      children: _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, getStyles('marks', \"verses_label\")), {}, {\n          marginRight: 10\n        }),\n        children: number\n      })\n    }, Math.random());\n  },\n  paragraph: function paragraph(subType, content, footnoteNo) {\n    var TitleContent = {};\n    if ([\"usfm:mt\", \"usfm:s\"].includes(subType)) {\n      var updatedContent = content.map(function (element, index) {\n        var updatedChildren = React.Children.map(element.props.children, function (child, childIndex) {\n          return React.cloneElement(child, {\n            style: _objectSpread(_objectSpread({}, getStyles('paras', subType)), {}, {\n              display: 'flex',\n              flexDirection: 'column',\n              key: \"title_subTitle_\" + index + \"_\" + childIndex\n            })\n          });\n        });\n        return React.cloneElement(element, {\n          key: element.key || \"parent_\" + index\n        }, updatedChildren);\n      });\n      TitleContent = updatedContent;\n    }\n    return [\"usfm:f\", \"usfm:x\"].includes(subType) ? _jsx(InlineElement, {\n      style: getStyles('paras', subType),\n      linkText: subType === \"usfm:f\" ? \"\" + footnoteNo : \"*\",\n      children: content\n    }, \"inline\" + Math.random()) : [\"usfm:mt\", \"usfm:s\"].includes(subType) ? _jsx(View, {\n      style: {\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n        alignItems: 'flex-start'\n      },\n      children: TitleContent\n    }, \"title \" + Math.random() + \" \") : _jsx(View, {\n      style: _objectSpread(_objectSpread({}, getStyles('paras', subType)), {}, {\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n        alignItems: 'flex-start'\n      }),\n      children: content\n    }, \"title \" + Math.random() + \" \");\n  },\n  wrapper: function wrapper(atts, subType, content) {\n    var updatedContent = content.map(function (element, index) {\n      return React.cloneElement(element, {\n        style: {\n          paddingTop: 0\n        },\n        key: \"content_\" + index + \" \"\n      });\n    });\n    return subType === 'cell' ? atts.role === 'body' ? _jsx(Cell, {\n      textStyle: {\n        textAlign: atts.alignment\n      },\n      data: updatedContent\n    }, Math.random()) : _jsx(Cell, {\n      textStyle: {\n        fontWeight: 'bold',\n        textAlign: atts.alignment\n      },\n      data: updatedContent\n    }, Math.random()) : _jsx(View, {\n      style: getStyles('wrappers', subType),\n      children: updatedContent\n    }, Math.random());\n  },\n  wWrapper: function wWrapper(atts, content) {\n    return Object.keys(atts).length === 0 ? content : _jsxs(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [_jsx(Text, {\n        children: content\n      }), Object.entries(atts).map(function (a) {\n        return _jsx(Text, {\n          style: {\n            fontSize: 9,\n            fontWeight: \"bold\",\n            textAlign: 'center'\n          },\n          children: a[0] + \" = \" + a[1] + \" \"\n        }, Math.random());\n      })]\n    }, Math.random());\n  },\n  mergeParas: function mergeParas(paras) {\n    return paras;\n  },\n  table: function table(content) {\n    return _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(Table, {\n        borderStyle: {\n          borderWidth: 1\n        },\n        style: {\n          flexDirection: \"column\"\n        },\n        children: content\n      })\n    }, Math.random());\n  },\n  row: function row(content) {\n    return _jsx(TableWrapper, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: content\n    }, Math.random());\n  }\n};\nexport { renderers };","map":{"version":3,"names":["React","useState","View","Text","renderStyles","rs","ConvertCssToReactNativeStyle","StyleSheet","Table","Cell","TableWrapper","jsx","_jsx","jsxs","_jsxs","convertedStyleSheet","styles","create","getStyles","type","subType","Error","console","log","default","_objectSpread","InlineElement","props","_useState","_useState2","_slicedToArray","display","setDisplay","toggleDisplay","style","backgroundColor","marginBottom","borderWidth","borderRadius","width","alignSelf","flexDirection","flexWrap","onPress","children","Math","random","verticalAlign","fontSize","fontWeight","marginRight","marginLeft","marginTop","padding","linkText","renderers","text","id","paddingTop","chapter_label","number","verses_label","bcv","bcvCallback","length","onClick","textDecoration","color","paragraph","content","footnoteNo","TitleContent","includes","updatedContent","map","element","index","updatedChildren","Children","child","childIndex","cloneElement","key","alignItems","wrapper","atts","role","textStyle","textAlign","alignment","data","wWrapper","Object","keys","entries","a","mergeParas","paras","table","flex","borderStyle","row"],"sources":["/home/gabriel/repos/jxt-korennumi/renderer/render2reactNative.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { renderStyles as rs, ConvertCssToReactNativeStyle } from './renderStyles';\nimport { StyleSheet } from 'react-native';\nimport { Table, Cell, TableWrapper } from 'react-native-reanimated-table';\n\n\nlet convertedStyleSheet = ConvertCssToReactNativeStyle(rs);\nconst styles = StyleSheet.create(convertedStyleSheet);\n\nconst getStyles = (type, subType) => {\n    if (!styles[type]) {\n        throw new Error(`Unknown style type '${type}'`);\n    }\n    if (!styles[type][subType]) {\n        console.log(`No styles for ${type}/${subType}`)\n        return styles[type].default;\n    }\n    return { ...styles[type].default, ...styles[type][subType] };\n}\n\n\n\nfunction InlineElement(props) {\n    const [display, setDisplay] = useState(false);\n    const toggleDisplay = () => setDisplay(!display);\n\n    if (display) {\n        return <Text\n            key={`Inline ${Math.random()} `}\n            style={{\n                backgroundColor: \"#CCC\",\n                marginBottom: 16,\n                borderWidth: 1,\n                borderRadius: 4,\n                width: '80%',\n                alignSelf: 'center',\n                flexDirection: 'row',\n                flexWrap: 'wrap'\n\n\n            }}\n            onPress={toggleDisplay}\n        >\n            {props.children}\n        </Text>\n    } else {\n        return <Text\n            key={`Inline_${Math.random()}`}\n            style={{\n                verticalAlign: 'top',\n                fontSize: 10,\n                fontWeight: \"bold\",\n                marginRight: 4,\n                marginLeft: 4,\n                marginTop: 15,\n                padding: 2,\n                backgroundColor: \"#CCC\"\n            }}\n            onPress={toggleDisplay}\n        >\n            {props.linkText}\n        </Text>\n    }\n}\nconst renderers = {\n    text: (text, id) => { console.log(text); return (<View key={`text_${Math.random()}`} style={{ paddingTop: 20 }}><Text >{text}</Text></View>) },\n    chapter_label: number => <View key={Math.random()} ><Text style={{\n        ...getStyles('marks', \"chapter_label\"),\n    }}>{number}</Text></View>,\n    verses_label: (number, bcv, bcvCallback) =>\n        bcv && bcv.length === 3 ?\n            <Text\n                onClick={() => bcvCallback(bcv)} style={{\n                    ...getStyles('marks', \"verses_label\"),\n                    textDecoration: \"underline\",\n                    color: \"#00D\"\n                }}\n            >\n                {number}\n            </Text> :\n            <View key={Math.random()} style={{ flexDirection: 'row', paddingTop: 10 }}>\n                <Text style={{\n                    ...getStyles('marks', \"verses_label\"),\n                    marginRight: 10,\n                }}>\n                    {number}</Text></View>\n    ,\n    paragraph: (subType, content, footnoteNo) => {\n        let TitleContent = {};\n\n        if ([\"usfm:mt\", \"usfm:s\"].includes(subType)) {\n            const updatedContent = content.map((element, index) => {\n                const updatedChildren = React.Children.map(element.props.children, (child, childIndex) => {\n                    return React.cloneElement(child, { style: { ...getStyles('paras', subType), display: 'flex', flexDirection: 'column', key: `title_subTitle_${index}_${childIndex}` } });\n                });\n                return React.cloneElement(element, { key: element.key || `parent_${index}` }, updatedChildren);\n            });\n            TitleContent = updatedContent;\n        }\n        return (\n\n            [\"usfm:f\", \"usfm:x\"].includes(subType) ?\n                <InlineElement\n                    key={`inline${Math.random()}`}\n                    style={getStyles('paras', subType)}\n                    linkText={subType === \"usfm:f\" ? `${footnoteNo}` : \"*\"}\n                >\n                    {content}\n                </InlineElement> :\n                [\"usfm:mt\", \"usfm:s\"].includes(subType) ?\n                    <View key={`title ${Math.random()} `} style={{ flexWrap: 'wrap', flexDirection: 'row', alignItems: 'flex-start', }}>{TitleContent}</View> :\n                    <View key={`title ${Math.random()} `} style={{ ...getStyles('paras', subType), flexWrap: 'wrap', flexDirection: 'row', alignItems: 'flex-start' }}>\n                        {content}\n                    </View>\n\n\n        )\n    },\n\n    wrapper: (atts, subType, content) => {\n        const updatedContent = content.map((element, index) => {\n            return React.cloneElement(element, { style: { paddingTop: 0 }, key: `content_${index} ` });\n        });\n        return (\n            subType === 'cell' ?\n                atts.role === 'body' ?\n                    <Cell key={Math.random()} textStyle={{ textAlign: atts.alignment }}\n                        data={updatedContent} />\n                    :\n                    <Cell key={Math.random()} textStyle={{ fontWeight: 'bold', textAlign: atts.alignment }} data={updatedContent} />\n                :\n                <View key={Math.random()} style={getStyles('wrappers', subType)}>{updatedContent}</View>)\n    },\n    wWrapper: (atts, content) => Object.keys(atts).length === 0 ?\n        content :\n\n        <View key={Math.random()}\n            style={{\n                display: \"flex\",\n                flexDirection: 'column',\n                alignItems: 'center'\n\n\n            }}\n        >\n            <Text>{content}</Text>\n            {\n                Object.entries(atts).map(\n                    a =>\n                        <Text key={Math.random()}\n                            style={{\n                                fontSize: 9,\n                                fontWeight: \"bold\",\n                                textAlign: 'center'\n\n                            }}\n                        >\n                            {`${a[0]} = ${a[1]} `}\n                        </Text>\n                )\n            }\n        </View>,\n    mergeParas: paras => paras,\n    table: (content) => <View key={Math.random()} style={{ flex: 1 }}><Table borderStyle={{ borderWidth: 1 }} style={{ flexDirection: \"column\" }}>{content}</Table></View>,\n    row: (content) => <TableWrapper key={Math.random()} style={{ flexDirection: \"row\" }}>{content}</TableWrapper>\n}\n\nexport { renderers };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}