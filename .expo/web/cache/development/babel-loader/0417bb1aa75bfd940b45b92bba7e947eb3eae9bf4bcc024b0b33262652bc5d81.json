{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction SliderComponent() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    sliderValue = _useState2[0],\n    setSliderValue = _useState2[1];\n  var handleTouchStart = function handleTouchStart(event) {\n    var locationX = event.nativeEvent.locationX;\n    var newValue = Math.round(locationX / 280 * 100);\n    setSliderValue(newValue);\n  };\n  var handleTouchMove = function handleTouchMove(event) {\n    var locationX = event.nativeEvent.locationX;\n    var newValue = Math.round(locationX / 280 * 100);\n    setSliderValue(newValue);\n  };\n  return _jsx(View, {\n    style: {\n      width: 280\n    },\n    children: _jsxs(View, {\n      style: {\n        height: 10,\n        backgroundColor: 'lightgray',\n        borderRadius: 5,\n        overflow: 'hidden'\n      },\n      children: [_jsx(View, {\n        style: {\n          height: '100%',\n          backgroundColor: 'blue',\n          width: sliderValue + \"%\"\n        }\n      }), _jsx(TouchableOpacity, {\n        style: {\n          position: 'absolute',\n          top: -15,\n          left: sliderValue + \"%\",\n          width: 30,\n          height: 30,\n          borderRadius: 15,\n          backgroundColor: 'blue',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        children: _jsx(Text, {\n          style: {\n            color: 'white'\n          },\n          children: sliderValue\n        })\n      })]\n    })\n  });\n}\nexport { SliderComponent };","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","SliderComponent","_useState","_useState2","_slicedToArray","sliderValue","setSliderValue","handleTouchStart","event","locationX","nativeEvent","newValue","Math","round","handleTouchMove","style","width","children","height","backgroundColor","borderRadius","overflow","position","top","left","alignItems","justifyContent","onTouchStart","onTouchMove","color"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/SliderComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\n\n\nfunction SliderComponent() {\n  const [sliderValue, setSliderValue] = useState(0);\n    const handleTouchStart = event => {\n      const { locationX } = event.nativeEvent;\n      const newValue = Math.round((locationX / 280) * 100);\n      setSliderValue(newValue);\n    };\n  \n    const handleTouchMove = event => {\n      const { locationX } = event.nativeEvent;\n      const newValue = Math.round((locationX / 280) * 100);\n      setSliderValue(newValue);\n    };\n  \n    return (\n      <View style={{ width: 280 }}>\n        <View\n          style={{\n            height: 10,\n            backgroundColor: 'lightgray',\n            borderRadius: 5,\n            overflow: 'hidden',\n          }}>\n          <View\n            style={{\n              height: '100%',\n              backgroundColor: 'blue',\n              width: `${sliderValue}%`,\n            }}\n          />\n          <TouchableOpacity\n            style={{\n              position: 'absolute',\n              top: -15,\n              left: `${sliderValue}%`,\n              width: 30,\n              height: 30,\n              borderRadius: 15,\n              backgroundColor: 'blue',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            onTouchStart={handleTouchStart}\n            onTouchMove={handleTouchMove}>\n            <Text style={{ color: 'white' }}>{sliderValue}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n  export  {SliderComponent}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIxC,SAASC,eAAeA,CAAA,EAAG;EACzB,IAAAC,SAAA,GAAsCT,QAAQ,CAAC,CAAC,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAChC,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAGC,KAAK,EAAI;IAChC,IAAQC,SAAS,GAAKD,KAAK,CAACE,WAAW,CAA/BD,SAAS;IACjB,IAAME,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAEJ,SAAS,GAAG,GAAG,GAAI,GAAG,CAAC;IACpDH,cAAc,CAACK,QAAQ,CAAC;EAC1B,CAAC;EAED,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAGN,KAAK,EAAI;IAC/B,IAAQC,SAAS,GAAKD,KAAK,CAACE,WAAW,CAA/BD,SAAS;IACjB,IAAME,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAEJ,SAAS,GAAG,GAAG,GAAI,GAAG,CAAC;IACpDH,cAAc,CAACK,QAAQ,CAAC;EAC1B,CAAC;EAED,OACEb,IAAA,CAACJ,IAAI;IAACqB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IAAAC,QAAA,EAC1BjB,KAAA,CAACN,IAAI;MACHqB,KAAK,EAAE;QACLG,MAAM,EAAE,EAAE;QACVC,eAAe,EAAE,WAAW;QAC5BC,YAAY,EAAE,CAAC;QACfC,QAAQ,EAAE;MACZ,CAAE;MAAAJ,QAAA,GACFnB,IAAA,CAACJ,IAAI;QACHqB,KAAK,EAAE;UACLG,MAAM,EAAE,MAAM;UACdC,eAAe,EAAE,MAAM;UACvBH,KAAK,EAAKX,WAAW;QACvB;MAAE,EACF,EACFP,IAAA,CAACF,gBAAgB;QACfmB,KAAK,EAAE;UACLO,QAAQ,EAAE,UAAU;UACpBC,GAAG,EAAE,CAAC,EAAE;UACRC,IAAI,EAAKnB,WAAW,MAAG;UACvBW,KAAK,EAAE,EAAE;UACTE,MAAM,EAAE,EAAE;UACVE,YAAY,EAAE,EAAE;UAChBD,eAAe,EAAE,MAAM;UACvBM,UAAU,EAAE,QAAQ;UACpBC,cAAc,EAAE;QAClB,CAAE;QACFC,YAAY,EAAEpB,gBAAiB;QAC/BqB,WAAW,EAAEd,eAAgB;QAAAG,QAAA,EAC7BnB,IAAA,CAACH,IAAI;UAACoB,KAAK,EAAE;YAAEc,KAAK,EAAE;UAAQ,CAAE;UAAAZ,QAAA,EAAEZ;QAAW;MAAQ,EACpC;IAAA;EACd,EACF;AAEX;AACA,SAASJ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}