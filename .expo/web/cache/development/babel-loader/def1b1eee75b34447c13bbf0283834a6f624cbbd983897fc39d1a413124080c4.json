{"ast":null,"code":"import SofriaRenderFromProskomma from \"./SofiraRenderFromProskommaNew\";\nimport sofria2WebActions from \"../../renderer/sofria2web\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Tabletest(_ref) {\n  var pk = _ref.pk;\n  pk.importDocument({\n    'lang': 'eng',\n    'abbr': 'francl'\n  }, 'usfm', \"./table.usfm\");\n  var documentQuery = \"\\n    {\\n      document(docSetId: \\\"eng_francl\\\" withBook: \\\"1CH\\\"){\\n        id\\n        cIndexes {\\n          chapter\\n        }\\n    }}\";\n  var documentResult = pk.gqlQuerySync(documentQuery);\n  console.log(documentResult);\n  var renderer = new SofriaRenderFromProskomma({\n    proskomma: pk,\n    actions: sofria2WebActions\n  });\n  var output = {};\n  var context = {};\n  var workspace = {};\n  try {\n    renderer.renderDocument1({\n      docId: documentResult.data.document.id,\n      config: config,\n      context: context,\n      workspace: workspace,\n      output: output\n    });\n  } catch (err) {\n    console.log(\"Renderer\", err);\n    throw err;\n  }\n  return _jsx(View, {\n    children: output.paras\n  });\n}\nexport { Tabletest };","map":{"version":3,"names":["SofriaRenderFromProskomma","sofria2WebActions","jsx","_jsx","Tabletest","_ref","pk","importDocument","documentQuery","documentResult","gqlQuerySync","console","log","renderer","proskomma","actions","output","context","workspace","renderDocument1","docId","data","document","id","config","err","View","children","paras"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/tableTest/tableTest.js"],"sourcesContent":["\nimport SofriaRenderFromProskomma from './SofiraRenderFromProskommaNew';\nimport sofria2WebActions from '../../renderer/sofria2web';\n\nfunction Tabletest({ pk }) {\n\n    pk.importDocument({ 'lang': 'eng', 'abbr': 'francl' }, 'usfm', \"./table.usfm\");\n\n    let documentQuery = `\n    {\n      document(docSetId: \"eng_francl\" withBook: \"1CH\"){\n        id\n        cIndexes {\n          chapter\n        }\n    }}`\n\n    const documentResult = pk.gqlQuerySync(documentQuery)\n    console.log(documentResult)\n    const renderer = new SofriaRenderFromProskomma({\n        proskomma: pk,\n        actions: sofria2WebActions,\n    });\n\n    const output = {};\n    const context = {};\n    const workspace = {};\n    try {\n\n        renderer.renderDocument1({\n            docId: documentResult.data.document.id,\n            config,\n            context,\n            workspace,\n            output,\n        });\n\n    } catch (err) {\n        console.log(\"Renderer\", err);\n        throw err;\n    }\n\n    return <View>{output.paras}</View>\n}  \nexport {Tabletest}"],"mappings":"AACA,OAAOA,yBAAyB;AAChC,OAAOC,iBAAiB;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAE1D,SAASC,SAASA,CAAAC,IAAA,EAAS;EAAA,IAANC,EAAE,GAAAD,IAAA,CAAFC,EAAE;EAEnBA,EAAE,CAACC,cAAc,CAAC;IAAE,MAAM,EAAE,KAAK;IAAE,MAAM,EAAE;EAAS,CAAC,EAAE,MAAM,EAAE,cAAc,CAAC;EAE9E,IAAIC,aAAa,+IAOd;EAEH,IAAMC,cAAc,GAAGH,EAAE,CAACI,YAAY,CAACF,aAAa,CAAC;EACrDG,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;EAC3B,IAAMI,QAAQ,GAAG,IAAIb,yBAAyB,CAAC;IAC3Cc,SAAS,EAAER,EAAE;IACbS,OAAO,EAAEd;EACb,CAAC,CAAC;EAEF,IAAMe,MAAM,GAAG,CAAC,CAAC;EACjB,IAAMC,OAAO,GAAG,CAAC,CAAC;EAClB,IAAMC,SAAS,GAAG,CAAC,CAAC;EACpB,IAAI;IAEAL,QAAQ,CAACM,eAAe,CAAC;MACrBC,KAAK,EAAEX,cAAc,CAACY,IAAI,CAACC,QAAQ,CAACC,EAAE;MACtCC,MAAM,EAANA,MAAM;MACNP,OAAO,EAAPA,OAAO;MACPC,SAAS,EAATA,SAAS;MACTF,MAAM,EAANA;IACJ,CAAC,CAAC;EAEN,CAAC,CAAC,OAAOS,GAAG,EAAE;IACVd,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEa,GAAG,CAAC;IAC5B,MAAMA,GAAG;EACb;EAEA,OAAOtB,IAAA,CAACuB,IAAI;IAAAC,QAAA,EAAEX,MAAM,CAACY;EAAK,EAAQ;AACtC;AACA,SAAQxB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}