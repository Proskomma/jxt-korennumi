{"ast":null,"code":"var _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction CheckboxMe(_ref) {\n  var num = _ref.num,\n    parentList = _ref.parentList,\n    setParentList = _ref.setParentList;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isChecked = _useState2[0],\n    setChecked = _useState2[1];\n  return _reactJsxRuntime.jsxs(View, {\n    style: {\n      flexDirection: 'column',\n      width: 50\n    },\n    children: [_reactJsxRuntime.jsx(Text, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: num\n    }), _reactJsxRuntime.jsx(View, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: _reactJsxRuntime.jsx(Checkbox, {\n        style: {\n          alignSelf: 'center'\n        },\n        value: num,\n        status: isChecked ? 'checked' : 'unchecked',\n        onPress: function onPress() {\n          setParentList(function (prevList) {\n            return _objectSpread(_objectSpread({}, prevList), {}, _defineProperty({}, num, !isChecked));\n          });\n          setChecked(!isChecked);\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["CheckboxMe","_ref","num","parentList","setParentList","_useState","useState","_useState2","_slicedToArray","isChecked","setChecked","_reactJsxRuntime","jsxs","View","style","flexDirection","width","children","jsx","Text","alignSelf","Checkbox","value","status","onPress","prevList","_objectSpread","_defineProperty"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/CheckBox.js"],"sourcesContent":["function CheckboxMe({ num, parentList, setParentList }) {\n    const [isChecked, setChecked] = useState(false);\n  \n    return (\n      <View style={{ flexDirection: 'column', width: 50 }}>\n        <Text style={{ alignSelf: 'center' }}>{num}</Text>\n        <View style={{ alignSelf: 'center' }}>\n          <Checkbox\n            style={{ alignSelf: 'center' }}\n            value={num}\n            status={isChecked ? 'checked' : 'unchecked'}\n            onPress={() => {\n              setParentList(prevList => ({ ...prevList, [num]: !isChecked }));\n              setChecked(!isChecked);\n            }}/>\n        </View>\n      </View>\n    )\n  }"],"mappings":";;;;;AAAA,SAASA,UAAUA,CAAAC,IAAA,EAAqC;EAAA,IAAlCC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,aAAa,GAAAH,IAAA,CAAbG,aAAa;EAChD,IAAAC,SAAA,GAAgCC,QAAQ,CAAC,KAAK,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAxCI,SAAS,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE5B,OACEI,gBAAA,CAAAC,IAAA,CAACC,IAAI;IAACC,KAAK,EAAE;MAAEC,aAAa,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,GAClDN,gBAAA,CAAAO,GAAA,CAACC,IAAI;MAACL,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAS,CAAE;MAAAH,QAAA,EAAEf;IAAG,EAAQ,EAClDS,gBAAA,CAAAO,GAAA,CAACL,IAAI;MAACC,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAS,CAAE;MAAAH,QAAA,EACnCN,gBAAA,CAAAO,GAAA,CAACG,QAAQ;QACPP,KAAK,EAAE;UAAEM,SAAS,EAAE;QAAS,CAAE;QAC/BE,KAAK,EAAEpB,GAAI;QACXqB,MAAM,EAAEd,SAAS,GAAG,SAAS,GAAG,WAAY;QAC5Ce,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbpB,aAAa,CAAC,UAAAqB,QAAQ;YAAA,OAAAC,aAAA,CAAAA,aAAA,KAAUD,QAAQ,OAAAE,eAAA,KAAGzB,GAAG,EAAG,CAACO,SAAS;UAAA,CAAG,CAAC;UAC/DC,UAAU,CAAC,CAACD,SAAS,CAAC;QACxB;MAAE;IAAE,EACD;EAAA,EACF;AAEX"},"metadata":{},"sourceType":"script","externalDependencies":[]}