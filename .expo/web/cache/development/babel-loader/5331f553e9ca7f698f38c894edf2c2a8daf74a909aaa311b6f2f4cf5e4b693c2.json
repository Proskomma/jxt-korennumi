{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { ResizableTab } from \"./components/used/resizableTab\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FontAwesomeIcon from \"@expo/vector-icons/FontAwesome\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nvar _require = require('proskomma-core'),\n  Proskomma = _require.Proskomma;\nimport { CheckboxMe } from \"./components/used/TextConfig/CheckBox\";\nvar succinct = require(\"./succinct/test.json\");\nvar succinct2 = require(\"./succinct/fnT.json\");\nimport { Tabletest } from \"./components/proofOfConcept/tableTest/tableTest\";\nvar _require2 = require(\"./components/proofOfConcept/tableTest/mat\"),\n  usfm = _require2.usfm;\nimport { ReadingScreen } from \"./components/used/ReadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var pk = new Proskomma([{\n    name: \"source\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }, {\n    name: \"project\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }, {\n    name: \"revision\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }]);\n  pk.loadSuccinctDocSet(succinct);\n  pk.loadSuccinctDocSet(succinct2);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"resizableTab\",\n        children: function children() {\n          return _jsx(ReadingScreen, {\n            bible: 'local_test_1',\n            livre: 'GEN',\n            pk: pk\n          });\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"ReadingScreen\",\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(FontAwesomeIcon, {\n              name: \"book\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        children: function children() {\n          return _jsx(CheckboxMe, {});\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","ResizableTab","View","ScrollView","Text","Button","TouchableOpacity","FontAwesomeIcon","NavigationContainer","createBottomTabNavigator","ScreenOrientation","_require","require","Proskomma","CheckboxMe","succinct","succinct2","Tabletest","_require2","usfm","ReadingScreen","jsx","_jsx","jsxs","_jsxs","Tab","App","pk","name","type","regex","loadSuccinctDocSet","children","Navigator","initialRouteName","screenOptions","headerShown","Screen","bible","livre","options","tabBarIcon","_ref","color","size"],"sources":["/home/gabriel/repos/jxt-korennumi/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ResizableTab } from './components/used/resizableTab'\nimport { View, ScrollView, Text, Button, TouchableOpacity } from 'react-native';\nimport FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nconst { Proskomma } = require('proskomma-core');\nimport { CheckboxMe } from './components/used/TextConfig/CheckBox';\nconst succinct = require('./succinct/test.json');\nconst succinct2 = require('./succinct/fnT.json');\nimport { Tabletest } from './components/proofOfConcept/tableTest/tableTest';\nconst { usfm } = require('./components/proofOfConcept/tableTest/mat')\nimport { ReadingScreen } from './components/used/ReadingScreen';\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const pk = new Proskomma([\n    {\n      name: \"source\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n    {\n      name: \"project\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n    {\n      name: \"revision\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n  ]);\n  pk.loadSuccinctDocSet(succinct);\n  pk.loadSuccinctDocSet(succinct2);\n  //pk.importDocument({ 'source': '1', 'project': 'web', 'revision': '0' }, 'usfm', usfm);\n\n\n  /*const [orientation, setOrientation] = useState(null);\n  useEffect(() => {\n    checkOrientation();\n    const subscription = ScreenOrientation.addOrientationChangeListener(\n      handleOrientationChange\n    );\n    return () => {\n      ScreenOrientation.removeOrientationChangeListeners(subscription);\n    };\n  }, []);\n  const checkOrientation = async () => {\n    const orientation = await ScreenOrientation.getOrientationAsync();\n    setOrientation(orientation);\n  };\n  const changeOrientation = async (newOrientation) => {\n    console.log(\"newOrientation: \", newOrientation);\n    await ScreenOrientation.lockAsync(newOrientation);\n  };\n  const handleOrientationChange = (o) => {\n    setOrientation(o.orientationInfo.orientation);\n  };\n  */\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        initialRouteName=\"Home\"\n        screenOptions={{\n          headerShown: false,\n\n        }}>\n        <Tab.Screen name=\"resizableTab\">\n          {() => <ReadingScreen bible={'local_test_1'} livre={'GEN'} pk={pk} />}\n        </Tab.Screen>\n        <Tab.Screen\n          name=\"ReadingScreen\" options={{\n            tabBarIcon: ({ color, size }) => (\n              <FontAwesomeIcon name=\"book\" color={color} size={size} />)\n          }}>\n          {() => <CheckboxMe />}\n        </Tab.Screen>\n\n      </Tab.Navigator>\n    </NavigationContainer >\n  );\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY;AAAwC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAE7D,OAAOC,eAAe;AACtB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAO,KAAKC,iBAAiB,MAAM,yBAAyB;AAC5D,IAAAC,QAAA,GAAsBC,OAAO,CAAC,gBAAgB,CAAC;EAAvCC,SAAS,GAAAF,QAAA,CAATE,SAAS;AACjB,SAASC,UAAU;AACnB,IAAMC,QAAQ,GAAGH,OAAO,wBAAwB;AAChD,IAAMI,SAAS,GAAGJ,OAAO,uBAAuB;AAChD,SAASK,SAAS;AAClB,IAAAC,SAAA,GAAiBN,OAAO,6CAA6C;EAA7DO,IAAI,GAAAD,SAAA,CAAJC,IAAI;AACZ,SAASC,aAAa;AAA0C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAChE,IAAMC,GAAG,GAAGhB,wBAAwB,EAAE;AAEtC,eAAe,SAASiB,GAAGA,CAAA,EAAG;EAC5B,IAAMC,EAAE,GAAG,IAAId,SAAS,CAAC,CACvB;IACEe,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EACFH,EAAE,CAACI,kBAAkB,CAAChB,QAAQ,CAAC;EAC/BY,EAAE,CAACI,kBAAkB,CAACf,SAAS,CAAC;EA0BhC,OACEM,IAAA,CAACd,mBAAmB;IAAAwB,QAAA,EAClBR,KAAA,CAACC,GAAG,CAACQ,SAAS;MACZC,gBAAgB,EAAC,MAAM;MACvBC,aAAa,EAAE;QACbC,WAAW,EAAE;MAEf,CAAE;MAAAJ,QAAA,GACFV,IAAA,CAACG,GAAG,CAACY,MAAM;QAACT,IAAI,EAAC,cAAc;QAAAI,QAAA,EAC5B,SAAAA,SAAA;UAAA,OAAMV,IAAA,CAACF,aAAa;YAACkB,KAAK,EAAE,cAAe;YAACC,KAAK,EAAE,KAAM;YAACZ,EAAE,EAAEA;UAAG,EAAG;QAAA;MAAA,EAC1D,EACbL,IAAA,CAACG,GAAG,CAACY,MAAM;QACTT,IAAI,EAAC,eAAe;QAACY,OAAO,EAAE;UAC5BC,UAAU,EAAE,SAAAA,WAAAC,IAAA;YAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;YAAA,OACxBtB,IAAA,CAACf,eAAe;cAACqB,IAAI,EAAC,MAAM;cAACe,KAAK,EAAEA,KAAM;cAACC,IAAI,EAAEA;YAAK,EAAG;UAAA;QAC7D,CAAE;QAAAZ,QAAA,EACD,SAAAA,SAAA;UAAA,OAAMV,IAAA,CAACR,UAAU,KAAG;QAAA;MAAA,EACV;IAAA;EAEC,EACK;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}