{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { memo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CheckboxMe(_ref) {\n  var num = _ref.num,\n    parentList = _ref.parentList,\n    setParentList = _ref.setParentList;\n  var _useState = useState('false'),\n    _useState2 = _slicedToArray(_useState, 2),\n    checked = _useState2[0],\n    setChecked = _useState2[1];\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column',\n      width: 50\n    },\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: num\n    }), _jsx(View, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: _jsx(Checkbox, {\n        style: {\n          alignSelf: 'center'\n        },\n        value: num,\n        status: isChecked ? 'checked' : 'unchecked',\n        onPress: function onPress() {\n          setChecked(!checked);\n          setParentList.apply(void 0, _toConsumableArray(parentList).concat(_toConsumableArray(\"\" + num)));\n        }\n      })\n    })]\n  });\n}\nexport { CheckboxMe };","map":{"version":3,"names":["Text","Checkbox","useCallback","useState","View","FlatList","memo","jsx","_jsx","jsxs","_jsxs","CheckboxMe","_ref","num","parentList","setParentList","_useState","_useState2","_slicedToArray","checked","setChecked","style","flexDirection","width","children","alignSelf","value","status","isChecked","onPress","apply","_toConsumableArray","concat"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/CheckBox.js"],"sourcesContent":["import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport { View, FlatList } from 'react-native';\nimport { memo } from 'react';\nfunction CheckboxMe({ num, parentList,setParentList}) {\n  const [checked, setChecked] = useState('false');\n\nreturn(\n  <View style={{ flexDirection: 'column', width: 50 }}>\n    <Text style={{ alignSelf: 'center' }}>{num}</Text>\n    <View style={{ alignSelf: 'center' }}>\n      <Checkbox\n        style={{ alignSelf: 'center' }}\n        value={num}\n        status={isChecked ? 'checked' : 'unchecked'}\n        onPress={() => {\n            setChecked(!checked);\n            setParentList(...parentList,...`${num}`)}\n        } />\n    </View>\n  </View>)\n\n}\nexport { CheckboxMe }\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AACnD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE9C,SAASC,IAAI,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC7B,SAASC,UAAUA,CAAAC,IAAA,EAAmC;EAAA,IAAhCC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAACC,aAAa,GAAAH,IAAA,CAAbG,aAAa;EACjD,IAAAC,SAAA,GAA8Bb,QAAQ,CAAC,OAAO,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE5B,OACEP,KAAA,CAACN,IAAI;IAACiB,KAAK,EAAE;MAAEC,aAAa,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,GAClDhB,IAAA,CAACR,IAAI;MAACqB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAEX;IAAG,EAAQ,EAClDL,IAAA,CAACJ,IAAI;MAACiB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EACnChB,IAAA,CAACP,QAAQ;QACPoB,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAS,CAAE;QAC/BC,KAAK,EAAEb,GAAI;QACXc,MAAM,EAAEC,SAAS,GAAG,SAAS,GAAG,WAAY;QAC5CC,OAAO,EAAE,SAAAA,QAAA,EAAM;UACXT,UAAU,CAAC,CAACD,OAAO,CAAC;UACpBJ,aAAa,CAAAe,KAAA,SAAAC,kBAAA,CAAIjB,UAAU,EAAAkB,MAAA,CAAAD,kBAAA,MAAOlB,GAAG,GAAG;QAAA;MAC3C;IAAG,EACD;EAAA,EACF;AAET;AACA,SAASF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}