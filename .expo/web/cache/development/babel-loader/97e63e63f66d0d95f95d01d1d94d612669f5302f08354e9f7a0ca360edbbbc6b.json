{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { queryOneDocument } from \"../graphql/Query/query\";\nvar _require = require('proskomma-core'),\n  Proskomma = _require.Proskomma;\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport bottomTab from \"../style/bottomTab\";\nimport SofriaRenderFromProskomma from \"./SofiraRenderFromProskommaNew\";\nimport sofria2WebActions from \"../renderer/sofria2web\";\nimport { renderers } from \"../renderer/render2reactNative\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar succinct = require(\"../succinct/test.json\");\nvar pk = new Proskomma([{\n  name: \"source\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}, {\n  name: \"project\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}, {\n  name: \"revision\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}]);\nfunction multipleReplace(query, tabl) {\n  var ret = query;\n  for (var _ref of tabl) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var s = _ref2[0];\n    var r = _ref2[1];\n    ret = ret.replace(s, r);\n  }\n  return ret;\n}\npk.loadSuccinctDocSet(succinct);\nvar documentQuery = multipleReplace(queryOneDocument, [[\"%docSetId%\", \"local_test_1\"], [\"%bookCode%\", \"GEN\"]]);\nvar documentResult = pk.gqlQuerySync(documentQuery);\nvar renderer = new SofriaRenderFromProskomma({\n  proskomma: pk,\n  actions: sofria2WebActions\n});\nvar state = 'begin';\nvar config = {\n  showWordAtts: true,\n  showTitles: true,\n  showHeadings: true,\n  showIntroductions: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showParaStyles: true,\n  showCharacterMarkup: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  chapters: [4],\n  selectedBcvNotes: [],\n  displayPartOfText: {\n    state: state\n  },\n  bcvNotesCallback: function bcvNotesCallback(bcv) {\n    setBcvNoteRef(bcv);\n  },\n  renderers: renderers\n};\nconsole.log(documentResult.data.document.cIndexes);\nvar output = {};\nvar context = {};\nvar workspace = {};\nvar numberToRender = 1;\ntry {\n  renderer.renderDocument1({\n    docId: documentResult.data.document.id,\n    config: config,\n    context: context,\n    workspace: workspace,\n    output: output\n  });\n} catch (err) {\n  console.log(\"Renderer\", err);\n  throw err;\n}\nfunction MainPage() {\n  config.displayPartOfText.state = 'begin';\n  var _useState = useState(output.paras),\n    _useState2 = _slicedToArray(_useState, 2),\n    paras = _useState2[0],\n    setParas = _useState2[1];\n  var _useState3 = useState({\n      showParas: [],\n      indexPara: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showParas = _useState4[0],\n    setShownParas = _useState4[1];\n  var loadInitialParas = function loadInitialParas() {\n    var newShowParas = [];\n    var newIndexPara;\n    if (paras.length < 5) {\n      newShowParas = paras.slice(0, paras.length);\n      newIndexPara = paras.length - 1;\n    } else {\n      newShowParas = paras.slice(0, 5);\n      newIndexPara = 4;\n    }\n    setShownParas({\n      showParas: newShowParas,\n      indexPara: newIndexPara\n    });\n  };\n  useEffect(function () {\n    loadInitialParas();\n  }, []);\n  var loadMoreItems = useCallback(function () {\n    setShownParas(function (prevState) {\n      var prevParas = prevState.showParas;\n      var currentIndex = prevState.indexPara;\n      if (documentResult.data.document.cIndexes.length !== 0) {\n        if (paras.length / 2 <= currentIndex) {\n          config.chapters = [\"\" + documentResult.data.document.cIndexes.shift().chapter];\n          renderer.renderDocument1({\n            docId: documentResult.data.document.id,\n            config: config,\n            context: context,\n            workspace: workspace,\n            output: output\n          });\n          var newParas = output.paras;\n          var updatedParas = [].concat(_toConsumableArray(prevParas), _toConsumableArray(newParas));\n          if (paras.length < currentIndex + numberToRender) {\n            numberToRender = 1;\n          }\n          console.log(currentIndex);\n          var newParaToShow = updatedParas.slice(currentIndex + 1, currentIndex + 1 + numberToRender);\n          var newIndexPara = currentIndex + numberToRender;\n          return {\n            showParas: [].concat(_toConsumableArray(prevState.showParas), _toConsumableArray(newParaToShow)),\n            indexPara: newIndexPara\n          };\n        } else {\n          console.log(currentIndex);\n          var _newParaToShow = paras.slice(currentIndex + 1, currentIndex + 1 + numberToRender);\n          var _newIndexPara = currentIndex + numberToRender;\n          console.log(_newParaToShow);\n          return {\n            showParas: [].concat(_toConsumableArray(prevState.showParas), _toConsumableArray(_newParaToShow)),\n            indexPara: _newIndexPara\n          };\n        }\n      }\n      return {\n        showParas: prevParas,\n        indexPara: currentIndex\n      };\n    });\n  }, [showParas]);\n  var renderItem = useCallback(function (_ref3) {\n    var item = _ref3.item;\n    return item;\n  }, []);\n  var keyExtractor = useCallback(function (item, index) {\n    return \"para-\" + index;\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      children: \"Chapitre 1\"\n    }), _jsx(FlatList, {\n      style: {\n        flexGrow: 1\n      },\n      data: showParas.showParas,\n      renderItem: renderItem,\n      keyExtractor: keyExtractor,\n      onEndReached: loadMoreItems,\n      onEndReachedThreshold: 0.8\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nexport { MainPage };","map":{"version":3,"names":["queryOneDocument","_require","require","Proskomma","View","ScrollView","Text","StatusBar","FlatList","bottomTab","SofriaRenderFromProskomma","sofria2WebActions","renderers","React","useState","useCallback","useEffect","jsx","_jsx","jsxs","_jsxs","succinct","pk","name","type","regex","multipleReplace","query","tabl","ret","_ref","_ref2","_slicedToArray","s","r","replace","loadSuccinctDocSet","documentQuery","documentResult","gqlQuerySync","renderer","proskomma","actions","state","config","showWordAtts","showTitles","showHeadings","showIntroductions","showFootnotes","showXrefs","showParaStyles","showCharacterMarkup","showChapterLabels","showVersesLabels","chapters","selectedBcvNotes","displayPartOfText","bcvNotesCallback","bcv","setBcvNoteRef","console","log","data","document","cIndexes","output","context","workspace","numberToRender","renderDocument1","docId","id","err","MainPage","_useState","paras","_useState2","setParas","_useState3","showParas","indexPara","_useState4","setShownParas","loadInitialParas","newShowParas","newIndexPara","length","slice","loadMoreItems","prevState","prevParas","currentIndex","shift","chapter","newParas","updatedParas","concat","_toConsumableArray","newParaToShow","renderItem","_ref3","item","keyExtractor","index","style","flex","children","flexGrow","onEndReached","onEndReachedThreshold"],"sources":["/home/gabriel/repos/jxt-korennumi/components/mainPage.js"],"sourcesContent":["import { queryOneDocument } from '../graphql/Query/query';\nconst { Proskomma } = require('proskomma-core');\nimport { View, ScrollView, Text, StatusBar, FlatList } from 'react-native';\nimport bottomTab from '../style/bottomTab';\nimport SofriaRenderFromProskomma from './SofiraRenderFromProskommaNew';\nimport sofria2WebActions from '../renderer/sofria2web';\nimport { renderers } from '../renderer/render2reactNative';\nimport React, { useState, useCallback, useEffect } from 'react';\n\nconst succinct = require('../succinct/test.json');\n\nconst pk = new Proskomma([\n  {\n    name: \"source\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n  {\n    name: \"project\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n  {\n    name: \"revision\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n]);\n\nfunction multipleReplace(query, tabl) {\n  let ret = query;\n  for (const [s, r] of tabl) {\n    ret = ret.replace(s, r);\n  }\n  return ret\n}\n\npk.loadSuccinctDocSet(succinct);\nlet documentQuery = multipleReplace(\n  queryOneDocument,\n  [[\"%docSetId%\", \"local_test_1\"], [\"%bookCode%\", \"GEN\"]]);\n\nlet documentResult = pk.gqlQuerySync(documentQuery);\nconst renderer = new SofriaRenderFromProskomma({\n  proskomma: pk,\n  actions: sofria2WebActions,\n});\n\n\n\nconst state = 'begin';\nconst config = {\n  showWordAtts: true,\n  showTitles: true,\n  showHeadings: true,\n  showIntroductions: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showParaStyles: true,\n  showCharacterMarkup: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  chapters: [4],\n  selectedBcvNotes: [],\n  displayPartOfText: { state },\n  bcvNotesCallback: (bcv) => {\n    setBcvNoteRef(bcv);\n  },\n  renderers,\n};\nconsole.log(documentResult.data.document.cIndexes)\nconst output = {};\nconst context = {};\nconst workspace = {};\nlet numberToRender = 1;\ntry {\n\n  renderer.renderDocument1({\n    docId: documentResult.data.document.id,\n    config,\n    context,\n    workspace,\n    output,\n\n\n  });\n\n} catch (err) {\n  console.log(\"Renderer\", err);\n  throw err;\n}\n\nfunction MainPage() {\n  config.displayPartOfText.state = 'begin';\n  const [paras, setParas] = useState(output.paras); // Initial set of items\n  const [showParas, setShownParas] = useState({ showParas: [], indexPara: 0 });\n  const loadInitialParas = () => {\n    let newShowParas = [];\n    let newIndexPara;\n\n    if (paras.length < 5) {\n      newShowParas = paras.slice(0, paras.length);\n      newIndexPara = paras.length-1;\n    } else {\n      newShowParas = paras.slice(0, 5);\n      newIndexPara = 4;\n    }\n    // Update the state using the setShownParas function\n    setShownParas({ showParas: newShowParas, indexPara: newIndexPara });\n  };\n  useEffect(() => {\n    loadInitialParas();\n    \n  }, []);\n\n  const loadMoreItems = useCallback(() => {\n    setShownParas(prevState => {\n      const prevParas = prevState.showParas;\n      const currentIndex = prevState.indexPara;\n      \n      if (documentResult.data.document.cIndexes.length !== 0) {\n        if (paras.length / 2 <= currentIndex) {\n          \n          config.chapters = [`${documentResult.data.document.cIndexes.shift().chapter}`];\n          renderer.renderDocument1({\n            docId: documentResult.data.document.id,\n            config,\n            context,\n            workspace,\n            output\n          });\n          const newParas = output.paras;\n          const updatedParas = [...prevParas, ...newParas];\n          \n          if (paras.length < currentIndex + numberToRender) {\n            numberToRender = 1;\n          }\n          console.log(currentIndex);\n          const newParaToShow = updatedParas.slice(currentIndex+1, currentIndex +1+ numberToRender);\n          const newIndexPara = currentIndex + numberToRender;\n\n          return {\n            showParas: [...prevState.showParas,...newParaToShow],\n            indexPara: newIndexPara,\n          };\n        }\n        else{\n          console.log(currentIndex);\n          const newParaToShow = paras.slice(currentIndex+1, currentIndex+1 + numberToRender);\n          const newIndexPara = currentIndex + numberToRender;\n          console.log(newParaToShow);\n          return {\n            showParas: [...prevState.showParas,...newParaToShow],\n            indexPara: newIndexPara,\n          };\n        }\n      }\n      return {\n        showParas: prevParas,\n        indexPara: currentIndex ,\n      };\n    });\n  }, [showParas]);\n\n  const renderItem = useCallback(({ item }) => item, []);\n\n  const keyExtractor = useCallback((item, index) => `para-${index}`, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text>Chapitre 1</Text>\n      <FlatList\n        style={{ flexGrow: 1 }}\n        data={showParas.showParas}\n        renderItem={renderItem}\n        keyExtractor={keyExtractor}\n        onEndReached={loadMoreItems}\n        onEndReachedThreshold={0.8} // Trigger loadMoreItems when the user reaches 50% from the end\n      />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nexport { MainPage }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}