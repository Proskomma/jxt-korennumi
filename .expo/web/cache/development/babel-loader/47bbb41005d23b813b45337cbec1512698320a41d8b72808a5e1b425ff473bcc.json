{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CheckboxMe } from \"./CheckBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ChapitreSelection(_ref) {\n  var pk = _ref.pk,\n    bible = _ref.bible,\n    livre = _ref.livre,\n    chapitre = _ref.chapitre,\n    setChapitre = _ref.setChapitre;\n  if (livre === 'null' || bible == 'null') {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n  var chapters = pk.gqlQuerySync(\"{\\n        docSet(id: \\\"\" + bible + \"\\\") {\\n          document(bookCode: \\\"\" + livre + \"\\\") {\\n            cvIndexes {\\n              chapter\\n            }\\n          }\\n        }\\n      }\");\n  var initialState = Array(10).fill(false).map(function () {\n    return useState(false);\n  });\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    states = _useState2[0],\n    setStates = _useState2[1];\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item;\n    return item;\n  }, []);\n  var keyExtractor = useCallback(function (item, index) {\n    return \"chap-\" + index;\n  }, []);\n  useEffect(function () {\n    console.log(initialState);\n  }, [initialState]);\n  if (chapters.data.docSet.document != null) {\n    var data = [];\n    chapters.data.docSet.document.cvIndexes.map(function (doc, id) {\n      data.push(_jsx(CheckboxMe, {\n        num: doc.chapter,\n        checked: initialState[id][0],\n        setChecked: initialState[id][1]\n      }));\n    });\n    return _jsx(FlatList, {\n      data: data,\n      numColumns: 3,\n      keyExtractor: keyExtractor,\n      renderItem: renderItem\n    });\n  } else {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n}\nexport { ChapitreSelection };","map":{"version":3,"names":["Text","useCallback","useEffect","useState","View","FlatList","CheckboxMe","jsx","_jsx","ChapitreSelection","_ref","pk","bible","livre","chapitre","setChapitre","children","chapters","gqlQuerySync","initialState","Array","fill","map","_useState","_useState2","_slicedToArray","states","setStates","renderItem","_ref2","item","keyExtractor","index","console","log","data","docSet","document","cvIndexes","doc","id","push","num","chapter","checked","setChecked","numColumns"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/ChapitreSelection.js"],"sourcesContent":["import { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { View, FlatList } from 'react-native';\nimport { CheckboxMe } from './CheckBox';\n\nfunction ChapitreSelection({ pk, bible, livre, chapitre, setChapitre }) {\n\n\n\n  if (livre === 'null' || bible == 'null') {\n    return <Text>{`Can't display`}</Text>\n  }\n  let chapters = pk.gqlQuerySync(\n    `{\n        docSet(id: \"${bible}\") {\n          document(bookCode: \"${livre}\") {\n            cvIndexes {\n              chapter\n            }\n          }\n        }\n      }`);\n\n\n\n      const initialState = Array(10).fill(false).map(() => useState(false));\n      const [states, setStates] = useState(initialState);\n\n  const renderItem = useCallback(({ item }) => item, []);\n  const keyExtractor = useCallback((item, index) => `chap-${index}`, []);\n  useEffect(() => {\n    console.log(initialState)\n  }, [initialState]);\n\n  if (chapters.data.docSet.document != null) {\n    let data = []\n    chapters.data.docSet.document.cvIndexes.map((doc, id) => {\n      data.push(\n        <CheckboxMe num={doc.chapter} checked={initialState[id][0]} setChecked={initialState[id][1]}></CheckboxMe>\n      )\n    })\n    return <FlatList\n      data={data}\n      numColumns={3}\n      keyExtractor={keyExtractor}\n      renderItem={renderItem} />\n  } else {\n    return <Text>{`Can't display`}</Text>\n  }\n}\nexport { ChapitreSelection }\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAGzD,SAASC,UAAU;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAExC,SAASC,iBAAiBA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAEC,WAAW,GAAAL,IAAA,CAAXK,WAAW;EAIlE,IAAIF,KAAK,KAAK,MAAM,IAAID,KAAK,IAAI,MAAM,EAAE;IACvC,OAAOJ,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;EACA,IAAIC,QAAQ,GAAGN,EAAE,CAACO,YAAY,8BAEVN,KAAK,8CACKC,KAAK,2GAM5B;EAIH,IAAMM,YAAY,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAACC,GAAG,CAAC;IAAA,OAAMnB,QAAQ,CAAC,KAAK,CAAC;EAAA,EAAC;EACrE,IAAAoB,SAAA,GAA4BpB,QAAQ,CAACgB,YAAY,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAE5B,IAAMI,UAAU,GAAG3B,WAAW,CAAC,UAAA4B,KAAA;IAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAAOA,IAAI;EAAA,GAAE,EAAE,CAAC;EACtD,IAAMC,YAAY,GAAG9B,WAAW,CAAC,UAAC6B,IAAI,EAAEE,KAAK;IAAA,iBAAaA,KAAK;EAAA,CAAE,EAAE,EAAE,CAAC;EACtE9B,SAAS,CAAC,YAAM;IACd+B,OAAO,CAACC,GAAG,CAACf,YAAY,CAAC;EAC3B,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,IAAIF,QAAQ,CAACkB,IAAI,CAACC,MAAM,CAACC,QAAQ,IAAI,IAAI,EAAE;IACzC,IAAIF,IAAI,GAAG,EAAE;IACblB,QAAQ,CAACkB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,SAAS,CAAChB,GAAG,CAAC,UAACiB,GAAG,EAAEC,EAAE,EAAK;MACvDL,IAAI,CAACM,IAAI,CACPjC,IAAA,CAACF,UAAU;QAACoC,GAAG,EAAEH,GAAG,CAACI,OAAQ;QAACC,OAAO,EAAEzB,YAAY,CAACqB,EAAE,CAAC,CAAC,CAAC,CAAE;QAACK,UAAU,EAAE1B,YAAY,CAACqB,EAAE,CAAC,CAAC,CAAC;MAAE,EAAc,CAC3G;IACH,CAAC,CAAC;IACF,OAAOhC,IAAA,CAACH,QAAQ;MACd8B,IAAI,EAAEA,IAAK;MACXW,UAAU,EAAE,CAAE;MACdf,YAAY,EAAEA,YAAa;MAC3BH,UAAU,EAAEA;IAAW,EAAG;EAC9B,CAAC,MAAM;IACL,OAAOpB,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;AACF;AACA,SAASP,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}