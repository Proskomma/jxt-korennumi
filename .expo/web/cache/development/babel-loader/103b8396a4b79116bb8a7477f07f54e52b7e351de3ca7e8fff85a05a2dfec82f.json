{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar defaultSettings = {\n  showWordAtts: false,\n  showTitles: true,\n  showHeadings: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  showCharacterMarkup: true,\n  showParaStyles: true,\n  selectedBcvNotes: []\n};\nvar sofria2WebActions = {\n  startDocument: [{\n    description: \"Set up\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref) {\n      var config = _ref.config,\n        context = _ref.context,\n        workspace = _ref.workspace,\n        output = _ref.output;\n      if (config.displayPartOfText != null) {\n        if (!['begin', 'continue'].includes(config.displayPartOfText.state)) {\n          throw new Error('state must be typeof string and one of begin or continue');\n        }\n      }\n      workspace.settings = _objectSpread(_objectSpread({}, defaultSettings), config);\n      workspace.webParas = [];\n      output.sofria = {};\n      output.sofria.sequence = {};\n      workspace.currentSequence = output.sofria.sequence;\n      console.log(workspace.currentSequence);\n      workspace.paraContentStack = [];\n      workspace.footnoteNo = 1;\n      workspace.bookCode = context.document.metadata.document.bookCode;\n      workspace.chapter = 0;\n    }\n  }],\n  startSequence: [{\n    description: \"startSequence\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref2) {\n      var context = _ref2.context,\n        workspace = _ref2.workspace;\n      workspace.currentSequence.type = context.sequences[0].type;\n      workspace.currentSequence.blocks = '';\n      console.log(workspace.currentSequence);\n    }\n  }],\n  endSequence: [{\n    description: \"endSequence\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref3) {\n      var context = _ref3.context,\n        workspace = _ref3.workspace;\n      if (context.inTable) {\n        context.inTable = false;\n        workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content));\n      }\n      if (workspace.currentSequence.type === 'footnote') {\n        workspace.footnoteNo++;\n      }\n      console.log(workspace.currentSequence);\n      workspace.currentSequence = {};\n      console.log(workspace.currentSequence);\n    }\n  }],\n  startRow: [{\n    description: \"Initialise content stack\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref4) {\n      var context = _ref4.context,\n        workspace = _ref4.workspace;\n      var block = context.sequences[0].block;\n      if (!context.inTable) {\n        context.inTable = true;\n        workspace.paraContentStack = [{\n          subType: 'table',\n          content: []\n        }];\n      }\n      workspace.paraContentStack.unshift({\n        subType: block.subType,\n        content: []\n      });\n    }\n  }],\n  endRow: [{\n    description: \"Add completed table to webParas\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref5) {\n      var config = _ref5.config,\n        context = _ref5.context,\n        workspace = _ref5.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.row(workspace.settings.showWordAtts ? popped.atts : {}, popped.content));\n    }\n  }],\n  blockGraft: [{\n    description: \"Process block grafts\",\n    test: function test() {\n      return true;\n    },\n    action: function action(environment) {\n      var currentBlock = environment.context.sequences[0].block;\n      if (currentBlock.subType !== \"remark\" && !([\"title\", \"endTitle\"].includes(currentBlock.subType) && !environment.workspace.settings.showTitles) && !([\"heading\"].includes(currentBlock.subType) && !environment.workspace.settings.showHeadings) && !([\"introduction\"].includes(currentBlock.subType) && !environment.workspace.settings.showIntroductions)) {\n        var graftRecord = {\n          type: currentBlock.type\n        };\n        if (currentBlock.sequence) {\n          graftRecord.sequence = {};\n          console.log(environement.workspace.currentSequence);\n          var cachedSequencePointer = environment.workspace.currentSequence;\n          environment.workspace.currentSequence = graftRecord.sequence;\n          console.log(environement.workspace.currentSequence);\n          var cachedParaContentStack = environment.workspace.paraContentStack;\n          environment.context.renderer.renderSequence(environment);\n          environment.workspace.paraContentStack = cachedParaContentStack;\n          environment.workspace.currentSequence = cachedSequencePointer;\n          console.log(environement.workspace.currentSequence);\n        }\n        console.log(environement.workspace.currentSequence);\n        environment.workspace.currentSequence.blocks.push(graftRecord);\n      }\n    }\n  }],\n  inlineGraft: [{\n    description: \"inlineGraft\",\n    test: function test(_ref6) {\n      var context = _ref6.context,\n        workspace = _ref6.workspace;\n      return context.sequences[0].element.subType !== \"note_caller\" && !([\"footnote\"].includes(context.sequences[0].element.subType) && !workspace.settings.showFootnotes) && !([\"xref\"].includes(context.sequences[0].element.subType) && !workspace.settings.showXrefs);\n    },\n    action: function action(environment) {\n      if (environment.context.inTable) {\n        environment.context.inTable = false;\n        workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content));\n      }\n      var element = environment.context.sequences[0].element;\n      var graftRecord = {\n        type: element.type\n      };\n      if (element.sequence) {\n        graftRecord.sequence = {};\n        var cachedSequencePointer = environment.workspace.currentSequence;\n        var cachedParaContentStack = _toConsumableArray(environment.workspace.paraContentStack);\n        var cachedWebParas = environment.workspace.webParas;\n        environment.workspace.webParas = [];\n        environment.workspace.currentSequence = graftRecord.sequence;\n        environment.context.renderer.renderSequence(environment);\n        var sequencePseudoParas = environment.workspace.webParas;\n        environment.workspace.webParas = cachedWebParas;\n        environment.workspace.paraContentStack = cachedParaContentStack;\n        environment.workspace.paraContentStack[0].content.push(sequencePseudoParas);\n        environment.workspace.currentSequence = cachedSequencePointer;\n      }\n    }\n  }],\n  startParagraph: [{\n    description: \"Initialise content stack\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref7) {\n      var config = _ref7.config,\n        context = _ref7.context,\n        workspace = _ref7.workspace;\n      if (context.inTable) {\n        context.inTable = false;\n        workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content));\n      }\n      var block = context.sequences[0].block;\n      workspace.paraContentStack = [{\n        subType: block.subType,\n        content: []\n      }];\n    }\n  }],\n  endParagraph: [{\n    description: \"Add completed para to webParas\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref8) {\n      var config = _ref8.config,\n        context = _ref8.context,\n        workspace = _ref8.workspace;\n      workspace.webParas.push(config.renderers.paragraph(workspace.settings.showParaStyles || ['footnote', 'xref'].includes(context.sequences[0].type) ? workspace.paraContentStack[0].subType : \"usfm:m\", workspace.paraContentStack[0].content, workspace.footnoteNo));\n    }\n  }],\n  startWrapper: [{\n    description: \"Skip usfm:w outside main sequence\",\n    test: function test(_ref9) {\n      var context = _ref9.context;\n      return context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\";\n    },\n    action: function action() {}\n  }, {\n    description: \"Handle standard w attributes\",\n    test: function test(_ref10) {\n      var context = _ref10.context;\n      return context.sequences[0].element.subType === \"usfm:w\";\n    },\n    action: function action(_ref11) {\n      var context = _ref11.context,\n        workspace = _ref11.workspace;\n      var atts = context.sequences[0].element.atts;\n      var standardAtts = {};\n      for (var _ref12 of Object.entries(atts)) {\n        var _ref13 = _slicedToArray(_ref12, 2);\n        var key = _ref13[0];\n        var value = _ref13[1];\n        if ([\"strong\", \"lemma\", \"gloss\"].includes(key)) {\n          standardAtts[key] = value;\n        }\n      }\n      workspace.paraContentStack.unshift({\n        atts: standardAtts,\n        content: []\n      });\n      return false;\n    }\n  }, {\n    description: \"Push to paraContent Stack\",\n    test: function test(_ref14) {\n      var context = _ref14.context,\n        workspace = _ref14.workspace;\n      return ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup;\n    },\n    action: function action(_ref15) {\n      var context = _ref15.context,\n        workspace = _ref15.workspace;\n      var pushed = {\n        subType: context.sequences[0].element.subType,\n        content: []\n      };\n      if (context.sequences[0].element.subType === 'cell') {\n        pushed.atts = context.sequences[0].element.atts;\n      }\n      ;\n      workspace.paraContentStack.unshift(pushed);\n    }\n  }],\n  endWrapper: [{\n    description: \"Skip usfm:w outside main sequence\",\n    test: function test(_ref16) {\n      var context = _ref16.context;\n      return context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\";\n    },\n    action: function action() {}\n  }, {\n    description: \"Handle standard w attributes\",\n    test: function test(_ref17) {\n      var context = _ref17.context;\n      return context.sequences[0].element.subType === \"usfm:w\";\n    },\n    action: function action(_ref18) {\n      var config = _ref18.config,\n        workspace = _ref18.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wWrapper(workspace.settings.showWordAtts ? popped.atts : {}, popped.content));\n      return false;\n    }\n  }, {\n    description: \"Collapse one level of paraContent Stack\",\n    test: function test(_ref19) {\n      var context = _ref19.context,\n        workspace = _ref19.workspace;\n      return ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup;\n    },\n    action: function action(_ref20) {\n      var config = _ref20.config,\n        workspace = _ref20.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wrapper(popped.subType === 'cell' ? popped.atts : {}, popped.subType, popped.content));\n    }\n  }],\n  startMilestone: [{\n    description: \"Handle zaln word-like atts\",\n    test: function test(_ref21) {\n      var context = _ref21.context;\n      return context.sequences[0].element.subType === \"usfm:zaln\";\n    },\n    action: function action(_ref22) {\n      var context = _ref22.context,\n        workspace = _ref22.workspace;\n      var atts = context.sequences[0].element.atts;\n      var standardAtts = {};\n      for (var _ref23 of Object.entries(atts)) {\n        var _ref24 = _slicedToArray(_ref23, 2);\n        var key = _ref24[0];\n        var value = _ref24[1];\n        if ([\"x-strong\", \"x-lemma\", \"x-morph\", \"x-content\"].includes(key)) {\n          standardAtts[key.split('-')[1]] = value;\n        }\n      }\n      workspace.paraContentStack.unshift({\n        atts: standardAtts,\n        content: []\n      });\n      return false;\n    }\n  }],\n  endMilestone: [{\n    description: \"Handle zaln word-like atts\",\n    test: function test(_ref25) {\n      var context = _ref25.context;\n      return context.sequences[0].element.subType === \"usfm:zaln\";\n    },\n    action: function action(_ref26) {\n      var config = _ref26.config,\n        workspace = _ref26.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wWrapper(workspace.settings.showWordAtts ? popped.atts : {}, popped.content));\n      return false;\n    }\n  }],\n  text: [{\n    description: \"Push text to para\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref27) {\n      var config = _ref27.config,\n        context = _ref27.context,\n        workspace = _ref27.workspace;\n      var element = context.sequences[0].element;\n      element.text.split(\" \").map(function (w, id) {\n        var renderedText = config.renderers.text(id === element.text.split(\" \") - 1 ? w : w + \" \");\n        workspace.paraContentStack[0].content.push(renderedText);\n      });\n    }\n  }],\n  mark: [{\n    description: \"Show chapter/verse markers\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref28) {\n      var config = _ref28.config,\n        context = _ref28.context,\n        workspace = _ref28.workspace;\n      var element = context.sequences[0].element;\n      if (element.subType === \"chapter_label\" && workspace.settings.showChapterLabels) {\n        workspace.chapter = element.atts.number;\n        workspace.paraContentStack[0].content.push(config.renderers.chapter_label(element.atts.number));\n      } else if (element.subType === \"verses_label\" && workspace.settings.showVersesLabels) {\n        var bcv = [];\n        if (config.selectedBcvNotes.length > 0) {\n          bcv = [workspace.bookCode, workspace.chapter, element.atts.number];\n        }\n        workspace.paraContentStack[0].content.push(config.renderers.verses_label(element.atts.number, bcv, config.bcvNotesCallback));\n      }\n    }\n  }],\n  endDocument: [{\n    description: \"Build JSX\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref29) {\n      var config = _ref29.config,\n        workspace = _ref29.workspace,\n        output = _ref29.output;\n      output.paras = config.renderers.mergeParas(workspace.webParas);\n    }\n  }]\n};\nexport default sofria2WebActions;","map":{"version":3,"names":["defaultSettings","showWordAtts","showTitles","showHeadings","showFootnotes","showXrefs","showChapterLabels","showVersesLabels","showCharacterMarkup","showParaStyles","selectedBcvNotes","sofria2WebActions","startDocument","description","test","action","_ref","config","context","workspace","output","displayPartOfText","includes","state","Error","settings","_objectSpread","webParas","sofria","sequence","currentSequence","console","log","paraContentStack","footnoteNo","bookCode","document","metadata","chapter","startSequence","_ref2","type","sequences","blocks","endSequence","_ref3","inTable","push","renderers","table","content","startRow","_ref4","block","subType","unshift","endRow","_ref5","popped","shift","row","atts","blockGraft","environment","currentBlock","showIntroductions","graftRecord","environement","cachedSequencePointer","cachedParaContentStack","renderer","renderSequence","inlineGraft","_ref6","element","_toConsumableArray","cachedWebParas","sequencePseudoParas","startParagraph","_ref7","endParagraph","_ref8","paragraph","startWrapper","_ref9","_ref10","_ref11","standardAtts","_ref12","Object","entries","_ref13","_slicedToArray","key","value","_ref14","_ref15","pushed","endWrapper","_ref16","_ref17","_ref18","wWrapper","_ref19","_ref20","wrapper","startMilestone","_ref21","_ref22","_ref23","_ref24","split","endMilestone","_ref25","_ref26","text","_ref27","map","w","id","renderedText","mark","_ref28","number","chapter_label","bcv","length","verses_label","bcvNotesCallback","endDocument","_ref29","paras","mergeParas"],"sources":["/home/gabriel/repos/jxt-korennumi/renderer/sofria2web.js"],"sourcesContent":["\nconst defaultSettings = {\n    showWordAtts: false,\n    showTitles: true,\n    showHeadings: true,\n    showFootnotes: true,\n    showXrefs: true,\n    showChapterLabels: true,\n    showVersesLabels: true,\n    showCharacterMarkup: true,\n    showParaStyles: true,\n    selectedBcvNotes: []\n}\n\nconst sofria2WebActions = {\n    startDocument: [\n        {\n            description: \"Set up\",\n            test: () => true,\n            action: ({ config, context, workspace, output }) => {\n\n                if (config.displayPartOfText != null) {\n                    if (!['begin', 'continue'].includes(config.displayPartOfText.state)) {\n\n                        throw new Error('state must be typeof string and one of begin or continue');\n                    }\n                }\n                workspace.settings = { ...defaultSettings, ...config }\n                workspace.webParas = [];\n                output.sofria = {};\n                output.sofria.sequence = {};\n                workspace.currentSequence = output.sofria.sequence;\n                console.log(workspace.currentSequence)\n                workspace.paraContentStack = [];\n                workspace.footnoteNo = 1;\n                workspace.bookCode = context.document.metadata.document.bookCode;\n                workspace.chapter = 0;\n\n            },\n        }\n    ],\n\n    startSequence: [\n        {\n            description: \"startSequence\",\n            test: () => true,\n            action: ({ context, workspace }) => {\n                workspace.currentSequence.type = context.sequences[0].type;\n                workspace.currentSequence.blocks = ''\n                console.log(workspace.currentSequence)\n            }\n        },\n    ],\n    endSequence: [\n        {\n            description: \"endSequence\",\n            test: () => true,\n            action: ({ context, workspace }) => {\n                if (context.inTable) {\n                    context.inTable = false\n                    workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content))\n                }\n                if (workspace.currentSequence.type === 'footnote') {\n                    workspace.footnoteNo++;\n                }\n                console.log(workspace.currentSequence)\n                workspace.currentSequence = {};\n                console.log(workspace.currentSequence)\n            }\n        },\n    ],\n    startRow: [\n        {\n            description: \"Initialise content stack\",\n            test: () => true,\n            action: ({ context, workspace }) => {\n                const block = context.sequences[0].block;\n\n\n                if (!context.inTable) {\n                    context.inTable = true\n\n                    workspace.paraContentStack = [\n                        {\n                            subType: 'table',\n                            content: []\n                        }\n\n                    ]\n                }\n                workspace.paraContentStack.unshift(\n                    {\n                        subType: block.subType,\n                        content: []\n                    }\n                );\n            }\n        },\n    ],\n\n    endRow: [\n        {\n            description: \"Add completed table to webParas\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n\n                const popped = workspace.paraContentStack.shift();\n                workspace.paraContentStack[0].content.push(config.renderers.row(\n                    (workspace.settings.showWordAtts ? popped.atts : {}),\n                    popped.content\n                ));\n            }\n        },\n    ],\n    blockGraft: [\n        {\n            description: \"Process block grafts\",\n            test: () => true,\n            action: (environment) => {\n\n                const currentBlock = environment.context.sequences[0].block;\n                if (\n                    currentBlock.subType !== \"remark\" &&\n                    !([\"title\", \"endTitle\"].includes(currentBlock.subType) && !environment.workspace.settings.showTitles) &&\n                    !([\"heading\"].includes(currentBlock.subType) && !environment.workspace.settings.showHeadings) &&\n                    !([\"introduction\"].includes(currentBlock.subType) && !environment.workspace.settings.showIntroductions)\n                ) {\n                    const graftRecord = {\n                        type: currentBlock.type,\n                    };\n                    if (currentBlock.sequence) {\n                        graftRecord.sequence = {};\n                        console.log(environement.workspace.currentSequence)\n                        const cachedSequencePointer = environment.workspace.currentSequence;\n                        environment.workspace.currentSequence = graftRecord.sequence;\n                        console.log(environement.workspace.currentSequence)\n                        const cachedParaContentStack = environment.workspace.paraContentStack;\n                        environment.context.renderer.renderSequence(environment);\n                        environment.workspace.paraContentStack = cachedParaContentStack;\n                        environment.workspace.currentSequence = cachedSequencePointer;\n                        console.log(environement.workspace.currentSequence)\n                    }\n                    console.log(environement.workspace.currentSequence)\n                    environment.workspace.currentSequence.blocks.push(graftRecord);\n                }\n            }\n        },\n    ],\n    inlineGraft: [\n        {\n            description: \"inlineGraft\",\n            test: ({ context, workspace }) => context.sequences[0].element.subType !== \"note_caller\" &&\n                !([\"footnote\"].includes(context.sequences[0].element.subType) && !workspace.settings.showFootnotes) &&\n                !([\"xref\"].includes(context.sequences[0].element.subType) && !workspace.settings.showXrefs),\n            action: (environment) => {\n                if (environment.context.inTable) {\n                    environment.context.inTable = false\n                    workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content))\n                }\n                const element = environment.context.sequences[0].element;\n\n                const graftRecord = {\n                    type: element.type,\n                };\n\n                if (element.sequence) {\n                    graftRecord.sequence = {};\n                    const cachedSequencePointer = environment.workspace.currentSequence;\n                    const cachedParaContentStack = [...environment.workspace.paraContentStack];\n                    const cachedWebParas = environment.workspace.webParas;\n                    environment.workspace.webParas = [];\n                    environment.workspace.currentSequence = graftRecord.sequence;\n                    environment.context.renderer.renderSequence(environment);\n                    const sequencePseudoParas = environment.workspace.webParas;\n                    environment.workspace.webParas = cachedWebParas;\n                    environment.workspace.paraContentStack = cachedParaContentStack;\n                    environment.workspace.paraContentStack[0].content.push(sequencePseudoParas);\n                    environment.workspace.currentSequence = cachedSequencePointer;\n\n                }\n            }\n        },\n    ],\n    startParagraph: [\n        {\n            description: \"Initialise content stack\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n                if (context.inTable) {\n                    context.inTable = false\n                    workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content))\n                }\n                const block = context.sequences[0].block;\n                workspace.paraContentStack = [\n                    {\n                        subType: block.subType,\n                        content: []\n                    }\n                ]\n            }\n        },\n    ],\n    endParagraph: [\n        {\n            description: \"Add completed para to webParas\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n                workspace.webParas.push(\n                    config.renderers.paragraph(\n                        workspace.settings.showParaStyles || ['footnote', 'xref'].includes(context.sequences[0].type) ?\n                            workspace.paraContentStack[0].subType :\n                            \"usfm:m\",\n                        workspace.paraContentStack[0].content,\n                        workspace.footnoteNo,\n                    )\n                );\n            }\n        },\n    ],\n    startWrapper: [\n        {\n            description: \"Skip usfm:w outside main sequence\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\",\n            action: () => { }\n        },\n        {\n            description: \"Handle standard w attributes\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:w\",\n            action: ({ context, workspace }) => {\n\n                const atts = context.sequences[0].element.atts;\n                const standardAtts = {};\n                for (const [key, value] of Object.entries(atts)) {\n                    if ([\"strong\", \"lemma\", \"gloss\"].includes(key)) {\n                        standardAtts[key] = value;\n                    }\n                }\n                workspace.paraContentStack.unshift(\n                    {\n                        atts: standardAtts,\n                        content: []\n                    }\n                );\n                return false;\n            }\n        },\n        {\n            description: \"Push to paraContent Stack\",\n            test: ({ context, workspace }) => ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup,\n            action: ({ context, workspace }) => {\n                const pushed = {\n                    subType: context.sequences[0].element.subType,\n                    content: []\n                };\n                if (context.sequences[0].element.subType === 'cell') {\n                    pushed.atts = context.sequences[0].element.atts\n                };\n\n\n                workspace.paraContentStack.unshift(\n                    pushed\n                );\n            }\n        },\n    ],\n    endWrapper: [\n        {\n            description: \"Skip usfm:w outside main sequence\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\",\n            action: () => { }\n        },\n        {\n            description: \"Handle standard w attributes\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:w\",\n            action: ({ config, workspace }) => {\n\n                const popped = workspace.paraContentStack.shift();\n\n                workspace.paraContentStack[0].content.push(config.renderers.wWrapper(\n                    (workspace.settings.showWordAtts ? popped.atts : {}),\n                    popped.content\n                ));\n                return false;\n            }\n        },\n        {\n            description: \"Collapse one level of paraContent Stack\",\n            test: ({ context, workspace }) => {\n\n                return (![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup)\n\n            },\n            action: ({ config, workspace }) => {\n\n                const popped = workspace.paraContentStack.shift();\n                workspace.paraContentStack[0].content.push(config.renderers.wrapper(popped.subType === 'cell' ? popped.atts : {}, popped.subType, popped.content));\n            }\n        },\n    ],\n    startMilestone: [\n        {\n            description: \"Handle zaln word-like atts\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:zaln\",\n            action: ({ context, workspace }) => {\n\n                const atts = context.sequences[0].element.atts;\n                const standardAtts = {};\n                for (const [key, value] of Object.entries(atts)) {\n                    if ([\"x-strong\", \"x-lemma\", \"x-morph\", \"x-content\"].includes(key)) {\n                        standardAtts[key.split('-')[1]] = value;\n                    }\n                }\n                workspace.paraContentStack.unshift(\n                    {\n                        atts: standardAtts,\n                        content: []\n                    }\n                );\n                return false;\n            }\n        },\n    ],\n    endMilestone: [\n        {\n            description: \"Handle zaln word-like atts\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:zaln\",\n            action: ({ config, workspace }) => {\n                const popped = workspace.paraContentStack.shift();\n                workspace.paraContentStack[0].content.push(config.renderers.wWrapper(\n                    (workspace.settings.showWordAtts ? popped.atts : {}),\n                    popped.content\n                ));\n                return false;\n            }\n        },\n    ],\n    text: [\n        {\n            description: \"Push text to para\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n\n                const element = context.sequences[0].element;\n                //const renderedText = config.renderers.text(element.text);\n                //workspace.paraContentStack[0].content.push(renderedText);\n                element.text.split(\" \").map((w, id) => {\n\n                    const renderedText = config.renderers.text((id === element.text.split(\" \") - 1) ? w : w + \" \")\n                    workspace.paraContentStack[0].content.push(renderedText);\n                })\n\n            }\n        },\n    ],\n    mark: [\n        {\n            description: \"Show chapter/verse markers\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n                const element = context.sequences[0].element;\n                if (element.subType === \"chapter_label\" && workspace.settings.showChapterLabels) {\n                    workspace.chapter = element.atts.number;\n                    workspace.paraContentStack[0].content.push(config.renderers.chapter_label(element.atts.number));\n                } else if (element.subType === \"verses_label\" && workspace.settings.showVersesLabels) {\n                    let bcv = [];\n                    if (config.selectedBcvNotes.length > 0) {\n                        bcv = [workspace.bookCode, workspace.chapter, element.atts.number]\n                    }\n                    workspace.paraContentStack[0].content.push(config.renderers.verses_label(element.atts.number, bcv, config.bcvNotesCallback));\n                }\n            }\n        },\n    ],\n    endDocument: [\n        {\n            description: \"Build JSX\",\n            test: () => true,\n            action: ({ config, workspace, output }) => {\n\n                output.paras = config.renderers.mergeParas(workspace.webParas);\n            }\n        }\n    ],\n};\n\nexport default sofria2WebActions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}