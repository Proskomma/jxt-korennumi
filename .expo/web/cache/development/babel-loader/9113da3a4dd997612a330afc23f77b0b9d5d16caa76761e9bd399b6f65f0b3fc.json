{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CheckboxMe } from \"./CheckBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ChapitreSelection(_ref) {\n  var pk = _ref.pk,\n    bible = _ref.bible,\n    livre = _ref.livre,\n    chapitre = _ref.chapitre,\n    setChapitre = _ref.setChapitre;\n  if (livre === 'null' || bible == 'null') {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n  var chapters = pk.gqlQuerySync(\"{\\n        docSet(id: \\\"\" + bible + \"\\\") {\\n          document(bookCode: \\\"\" + livre + \"\\\") {\\n            cvIndexes {\\n              chapter\\n            }\\n          }\\n        }\\n      }\");\n  var _useState = useState(new Array(chapters.data.docSet.document.cvIndexes.length).fill(false)),\n    _useState2 = _slicedToArray(_useState, 2),\n    boolChapter = _useState2[0],\n    setBoolChapter = _useState2[1];\n  useEffect(function () {\n    var newChapter = [];\n    for (var i = 0; i < boolChapter.length; i++) {\n      if (boolChapter[i]) newChapter.push(\"\" + i);\n    }\n    setChapitre(newChapter);\n  }, [boolChapter]);\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item;\n    return item;\n  }, []);\n  var keyExtractor = useCallback(function (item, index) {\n    return \"chap-\" + index;\n  }, []);\n  if (chapters.data.docSet.document != null) {\n    var data = [];\n    chapters.data.docSet.document.cvIndexes.map(function (doc, id) {\n      return data.push(_jsx(CheckboxMe, {\n        num: doc.chapter,\n        setParentList: setChapitre,\n        parentList: chapitre\n      }));\n    });\n    return _jsx(FlatList, {\n      data: data,\n      numColumns: 3,\n      keyExtractor: keyExtractor,\n      renderItem: renderItem\n    });\n  } else {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n}\nexport { ChapitreSelection };","map":{"version":3,"names":["Text","useCallback","useEffect","useState","View","FlatList","CheckboxMe","jsx","_jsx","ChapitreSelection","_ref","pk","bible","livre","chapitre","setChapitre","children","chapters","gqlQuerySync","_useState","Array","data","docSet","document","cvIndexes","length","fill","_useState2","_slicedToArray","boolChapter","setBoolChapter","newChapter","i","push","renderItem","_ref2","item","keyExtractor","index","map","doc","id","num","chapter","setParentList","parentList","numColumns"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/ChapitreSelection.js"],"sourcesContent":["import { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { View, FlatList } from 'react-native';\nimport { CheckboxMe } from './CheckBox';\n\nfunction ChapitreSelection({ pk, bible, livre, chapitre, setChapitre }) {\n  \n  \n\n  if (livre === 'null' || bible == 'null') {\n    return <Text>{`Can't display`}</Text>\n  }\n  let chapters = pk.gqlQuerySync(\n    `{\n        docSet(id: \"${bible}\") {\n          document(bookCode: \"${livre}\") {\n            cvIndexes {\n              chapter\n            }\n          }\n        }\n      }`);\n\n  const [boolChapter , setBoolChapter] = useState(new Array(chapters.data.docSet.document.cvIndexes.length).fill(false))\n\n\n  useEffect(() => {\n    let newChapter = []\n   for(let i = 0; i<boolChapter.length;i++){\n    if(boolChapter[i])\n      newChapter.push(`${i}`)\n   }\n   setChapitre(newChapter)\n  }, [boolChapter]);\n\n  const renderItem = useCallback(({ item }) => item, []);\n  const keyExtractor = useCallback((item, index) => `chap-${index}`, []);\n\n  \n  if (chapters.data.docSet.document != null) {\n    let data = []   \n    chapters.data.docSet.document.cvIndexes.map((doc, id) =>\n      data.push(\n          <CheckboxMe num={doc.chapter} setParentList={setChapitre} parentList={chapitre}></CheckboxMe>\n        ))\n    return <FlatList\n      data={data}\n      numColumns={3}\n      keyExtractor={keyExtractor}\n      renderItem={renderItem}/>\n  } else {\n    return <Text>{`Can't display`}</Text>\n  }\n}\nexport { ChapitreSelection }\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAGzD,SAASC,UAAU;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAExC,SAASC,iBAAiBA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAEC,WAAW,GAAAL,IAAA,CAAXK,WAAW;EAIlE,IAAIF,KAAK,KAAK,MAAM,IAAID,KAAK,IAAI,MAAM,EAAE;IACvC,OAAOJ,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;EACA,IAAIC,QAAQ,GAAGN,EAAE,CAACO,YAAY,8BAEVN,KAAK,8CACKC,KAAK,2GAM5B;EAEP,IAAAM,SAAA,GAAuChB,QAAQ,CAAC,IAAIiB,KAAK,CAACH,QAAQ,CAACI,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,SAAS,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAT,SAAA;IAA/GU,WAAW,GAAAF,UAAA;IAAGG,cAAc,GAAAH,UAAA;EAGnCzB,SAAS,CAAC,YAAM;IACd,IAAI6B,UAAU,GAAG,EAAE;IACpB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAACH,WAAW,CAACJ,MAAM,EAACO,CAAC,EAAE,EAAC;MACvC,IAAGH,WAAW,CAACG,CAAC,CAAC,EACfD,UAAU,CAACE,IAAI,MAAID,CAAC,CAAG;IAC1B;IACAjB,WAAW,CAACgB,UAAU,CAAC;EACxB,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,IAAMK,UAAU,GAAGjC,WAAW,CAAC,UAAAkC,KAAA;IAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAAOA,IAAI;EAAA,GAAE,EAAE,CAAC;EACtD,IAAMC,YAAY,GAAGpC,WAAW,CAAC,UAACmC,IAAI,EAAEE,KAAK;IAAA,iBAAaA,KAAK;EAAA,CAAE,EAAE,EAAE,CAAC;EAGtE,IAAIrB,QAAQ,CAACI,IAAI,CAACC,MAAM,CAACC,QAAQ,IAAI,IAAI,EAAE;IACzC,IAAIF,IAAI,GAAG,EAAE;IACbJ,QAAQ,CAACI,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,SAAS,CAACe,GAAG,CAAC,UAACC,GAAG,EAAEC,EAAE;MAAA,OAClDpB,IAAI,CAACY,IAAI,CACLzB,IAAA,CAACF,UAAU;QAACoC,GAAG,EAAEF,GAAG,CAACG,OAAQ;QAACC,aAAa,EAAE7B,WAAY;QAAC8B,UAAU,EAAE/B;MAAS,EAAc,CAC9F;IAAA,EAAC;IACN,OAAON,IAAA,CAACH,QAAQ;MACdgB,IAAI,EAAEA,IAAK;MACXyB,UAAU,EAAE,CAAE;MACdT,YAAY,EAAEA,YAAa;MAC3BH,UAAU,EAAEA;IAAW,EAAE;EAC7B,CAAC,MAAM;IACL,OAAO1B,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;AACF;AACA,SAASP,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}