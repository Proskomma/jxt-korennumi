{"ast":null,"code":"import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { memo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckboxMe = memo(function (_ref) {\n  var num = _ref.num,\n    setcheck = _ref.setcheck,\n    check = _ref.check;\n  console.log(check);\n  console.log('renderCheckbox..');\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column',\n      width: 50\n    },\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: num\n    }), _jsx(View, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: _jsx(Checkbox, {\n        style: {\n          alignSelf: 'center'\n        },\n        value: num,\n        status: check[num] ? 'checked' : 'unchecked',\n        onPress: function onPress() {\n          check[num] = !check[num];\n          console.log(check[num]);\n        }\n      })\n    })]\n  });\n});\nexport { CheckboxMe };","map":{"version":3,"names":["Text","Checkbox","useCallback","useState","View","FlatList","memo","jsx","_jsx","jsxs","_jsxs","CheckboxMe","_ref","num","setcheck","check","console","log","style","flexDirection","width","children","alignSelf","value","status","onPress"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/CheckBox.js"],"sourcesContent":["import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport { View, FlatList } from 'react-native';\nimport { memo } from 'react';\nconst CheckboxMe = memo(({ num, setcheck, check }) => {\n    console.log(check)\n    console.log('renderCheckbox..')\n    return (\n        <View style={{ flexDirection: 'column', width: 50 }}>\n            <Text style={{ alignSelf: 'center' }}>{num}</Text>\n            <View style={{ alignSelf: 'center' }}>\n                <Checkbox\n                    style={{ alignSelf: 'center' }}\n                    value={num}\n                    status={check[num] ? 'checked' : 'unchecked'}\n                    onPress={() => {check[num] = !check[num];\n                        console.log(check[num])\n                    }} />\n            </View>\n        </View>\n    )\n}\n)\nexport { CheckboxMe }\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AACnD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE9C,SAASC,IAAI,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC7B,IAAMC,UAAU,GAAGL,IAAI,CAAC,UAAAM,IAAA,EAA8B;EAAA,IAA3BC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;EAC3CC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,OACIP,KAAA,CAACN,IAAI;IAACc,KAAK,EAAE;MAAEC,aAAa,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,GAChDb,IAAA,CAACR,IAAI;MAACkB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAER;IAAG,EAAQ,EAClDL,IAAA,CAACJ,IAAI;MAACc,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EACjCb,IAAA,CAACP,QAAQ;QACLiB,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAS,CAAE;QAC/BC,KAAK,EAAEV,GAAI;QACXW,MAAM,EAAET,KAAK,CAACF,GAAG,CAAC,GAAG,SAAS,GAAG,WAAY;QAC7CY,OAAO,EAAE,SAAAA,QAAA,EAAM;UAACV,KAAK,CAACF,GAAG,CAAC,GAAG,CAACE,KAAK,CAACF,GAAG,CAAC;UACpCG,OAAO,CAACC,GAAG,CAACF,KAAK,CAACF,GAAG,CAAC,CAAC;QAC3B;MAAE;IAAG,EACN;EAAA,EACJ;AAEf,CAAC,CACA;AACD,SAASF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}