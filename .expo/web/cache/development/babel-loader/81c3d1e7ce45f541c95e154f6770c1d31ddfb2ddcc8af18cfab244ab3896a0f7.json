{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text } from 'react-native-paper';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { RadioButton } from 'react-native-paper';\nimport { useRef, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LivreSelection(_ref) {\n  var _livres$current, _livres$current$data, _livres$current$data$, _livres$current$data$2;\n  var pk = _ref.pk,\n    bible = _ref.bible,\n    livre = _ref.livre,\n    setLivre = _ref.setLivre;\n  var _React$useState = React.useState(livre),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    checked = _React$useState2[0],\n    setChecked = _React$useState2[1];\n  var livres = useRef({});\n  useEffect(function () {\n    livres.current = pk.gqlQuerySync(\"{\\n        docSet(id: \\\"\" + bible + \"\\\"){\\n          id\\n          documents {\\n            header(id: \\\"bookCode\\\")\\n  \\n        }\\n        }\\n      }\");\n  }, [bible]);\n  return _jsx(View, {\n    children: livres == null ? void 0 : (_livres$current = livres.current) == null ? void 0 : (_livres$current$data = _livres$current.data) == null ? void 0 : (_livres$current$data$ = _livres$current$data.docSet) == null ? void 0 : (_livres$current$data$2 = _livres$current$data$.documents) == null ? void 0 : _livres$current$data$2.map(function (doc, id) {\n      return _jsxs(View, {\n        style: {\n          justifyContent: 'space-between',\n          flexDirection: 'row'\n        },\n        children: [_jsx(Text, {\n          style: {\n            alignSelf: 'center'\n          },\n          children: doc.header\n        }), _jsx(RadioButton, {\n          style: {\n            alignSelf: 'end'\n          },\n          value: doc.header,\n          status: checked === \"\" + doc.header ? 'checked' : 'unchecked',\n          onPress: function onPress() {\n            setChecked(\"\" + doc.header);\n            setLivre(doc.header);\n          }\n        })]\n      }, id);\n    })\n  });\n}\nexport { LivreSelection };","map":{"version":3,"names":["Text","React","View","RadioButton","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","LivreSelection","_ref","_livres$current","_livres$current$data","_livres$current$data$","_livres$current$data$2","pk","bible","livre","setLivre","_React$useState","useState","_React$useState2","_slicedToArray","checked","setChecked","livres","current","gqlQuerySync","children","data","docSet","documents","map","doc","id","style","justifyContent","flexDirection","alignSelf","header","value","status","onPress"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/LivreSelection.js"],"sourcesContent":["import { Text } from 'react-native-paper';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { RadioButton } from 'react-native-paper';\nimport { useRef, useEffect } from 'react';\nfunction LivreSelection({ pk, bible, livre, setLivre }) {\n  const [checked, setChecked] = React.useState(livre);\n  \n  let livres = useRef({});\n\n    useEffect(() => {livres.current = pk.gqlQuerySync(\n      `{\n        docSet(id: \"${bible}\"){\n          id\n          documents {\n            header(id: \"bookCode\")\n  \n        }\n        }\n      }`)},[bible])\n\n  return <View>{livres?.current?.data?.docSet?.documents?.map((doc, id) =>\n    <View key={id} style={{ justifyContent: 'space-between', flexDirection: 'row' }}>\n      <Text style={{ alignSelf: 'center' }}>{doc.header}</Text>\n      <RadioButton\n        style={{ alignSelf: 'end' }}\n        value={doc.header}\n        status={checked === `${doc.header}` ? 'checked' : 'unchecked'}\n        onPress={() => {\n          setChecked(`${doc.header}`);\n          setLivre(doc.header)\n        }} />\n    </View>)}</View>\n}\nexport { LivreSelection }\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE/B,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC1C,SAASC,cAAcA,CAAAC,IAAA,EAAiC;EAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,sBAAA;EAAA,IAA9BC,EAAE,GAAAL,IAAA,CAAFK,EAAE;IAAEC,KAAK,GAAAN,IAAA,CAALM,KAAK;IAAEC,KAAK,GAAAP,IAAA,CAALO,KAAK;IAAEC,QAAQ,GAAAR,IAAA,CAARQ,QAAQ;EAClD,IAAAC,eAAA,GAA8BnB,KAAK,CAACoB,QAAQ,CAACH,KAAK,CAAC;IAAAI,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA5CI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAE1B,IAAII,MAAM,GAAGtB,MAAM,CAAC,CAAC,CAAC,CAAC;EAErBC,SAAS,CAAC,YAAM;IAACqB,MAAM,CAACC,OAAO,GAAGX,EAAE,CAACY,YAAY,8BAE/BX,KAAK,wHAOlB;EAAA,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EAEjB,OAAOV,IAAA,CAACL,IAAI;IAAA2B,QAAA,EAAEH,MAAM,qBAAAd,eAAA,GAANc,MAAM,CAAEC,OAAO,sBAAAd,oBAAA,GAAfD,eAAA,CAAiBkB,IAAI,sBAAAhB,qBAAA,GAArBD,oBAAA,CAAuBkB,MAAM,sBAAAhB,sBAAA,GAA7BD,qBAAA,CAA+BkB,SAAS,qBAAxCjB,sBAAA,CAA0CkB,GAAG,CAAC,UAACC,GAAG,EAAEC,EAAE;MAAA,OAClE1B,KAAA,CAACP,IAAI;QAAUkC,KAAK,EAAE;UAAEC,cAAc,EAAE,eAAe;UAAEC,aAAa,EAAE;QAAM,CAAE;QAAAT,QAAA,GAC9EtB,IAAA,CAACP,IAAI;UAACoC,KAAK,EAAE;YAAEG,SAAS,EAAE;UAAS,CAAE;UAAAV,QAAA,EAAEK,GAAG,CAACM;QAAM,EAAQ,EACzDjC,IAAA,CAACJ,WAAW;UACViC,KAAK,EAAE;YAAEG,SAAS,EAAE;UAAM,CAAE;UAC5BE,KAAK,EAAEP,GAAG,CAACM,MAAO;UAClBE,MAAM,EAAElB,OAAO,UAAQU,GAAG,CAACM,MAAQ,GAAG,SAAS,GAAG,WAAY;UAC9DG,OAAO,EAAE,SAAAA,QAAA,EAAM;YACblB,UAAU,MAAIS,GAAG,CAACM,MAAM,CAAG;YAC3BrB,QAAQ,CAACe,GAAG,CAACM,MAAM,CAAC;UACtB;QAAE,EAAG;MAAA,GATEL,EAAE,CAUN;IAAA;EAAC,EAAQ;AACpB;AACA,SAASzB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}