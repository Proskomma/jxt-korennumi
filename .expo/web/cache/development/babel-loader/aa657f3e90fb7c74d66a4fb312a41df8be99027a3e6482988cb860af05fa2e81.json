{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport { ReadingScreen } from \"./ReadingScreen\";\nimport ConfigDrawer from \"./TextConfig/configDrawer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction TextChanger(_ref) {\n  var pk = _ref.pk;\n  var _useState = useState('local_test_1'),\n    _useState2 = _slicedToArray(_useState, 2),\n    bible = _useState2[0],\n    setBible = _useState2[1];\n  var _useState3 = useState('GEN'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    livre = _useState4[0],\n    setLivre = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isActive = _useState6[0],\n    setIsActive = _useState6[1];\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      contentStyle: {\n        zIndex: 3\n      },\n      style: {\n        position: 'absolute'\n      },\n      icon: function icon() {\n        return _jsx(Icon, {\n          name: \"gear\",\n          size: 20,\n          color: \"blue\"\n        });\n      },\n      onPress: function onPress() {\n        return setIsActive(true);\n      }\n    }, Math.random()), _jsx(ConfigDrawer, {}), _jsx(ReadingScreen, {})]\n  });\n}\nexport default TextChanger;","map":{"version":3,"names":["useState","ReadingScreen","ConfigDrawer","jsx","_jsx","jsxs","_jsxs","TextChanger","_ref","pk","_useState","_useState2","_slicedToArray","bible","setBible","_useState3","_useState4","livre","setLivre","_useState5","_useState6","isActive","setIsActive","View","children","Button","contentStyle","zIndex","style","position","icon","Icon","name","size","color","onPress","Math","random"],"sources":["/home/gabriel/repos/jxt-korennumi/components/used/TextChanger.js"],"sourcesContent":["import { useState } from \"react\"\nimport { ReadingScreen } from \"./ReadingScreen\"\nimport ConfigDrawer from \"./TextConfig/configDrawer\"\nfunction TextChanger({ pk }) {\n    const [bible, setBible] = useState('local_test_1')\n    const [livre, setLivre] = useState('GEN')\n    const [isActive, setIsActive] = useState(false)\n    return (<View>\n        <Button key={Math.random()} contentStyle={{ zIndex: 3 }} style={{ position: 'absolute' }}\n            icon={() => <Icon name=\"gear\" size={20} color=\"blue\" />\n            }\n            onPress={() => setIsActive(true)} />\n        <ConfigDrawer />\n        <ReadingScreen />\n    </View>)\n}\n\nexport default TextChanger"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa;AACtB,OAAOC,YAAY;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACpD,SAASC,WAAWA,CAAAC,IAAA,EAAS;EAAA,IAANC,EAAE,GAAAD,IAAA,CAAFC,EAAE;EACrB,IAAAC,SAAA,GAA0BV,QAAQ,CAAC,cAAc,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA0Bf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAlCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAgCnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAxCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,OAAQd,KAAA,CAACiB,IAAI;IAAAC,QAAA,GACTpB,IAAA,CAACqB,MAAM;MAAqBC,YAAY,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAW,CAAE;MACrFC,IAAI,EAAE,SAAAA,KAAA;QAAA,OAAM1B,IAAA,CAAC2B,IAAI;UAACC,IAAI,EAAC,MAAM;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAM,EAAG;MAAA,CACtD;MACDC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMb,WAAW,CAAC,IAAI,CAAC;MAAA;IAAC,GAHxBc,IAAI,CAACC,MAAM,EAAE,CAGc,EACxCjC,IAAA,CAACF,YAAY,KAAG,EAChBE,IAAA,CAACH,aAAa,KAAG;EAAA,EACd;AACX;AAEA,eAAeM,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}