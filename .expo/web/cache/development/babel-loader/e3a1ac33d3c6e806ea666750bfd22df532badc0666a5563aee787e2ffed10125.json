{"ast":null,"code":"import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { memo } from 'react';\nimport { set } from 'lodash';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckboxMe = memo(function (_ref) {\n  var num = _ref.num,\n    checked = _ref.checked,\n    setChecked = _ref.setChecked;\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column',\n      width: 50\n    },\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: num\n    }), _jsx(View, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: _jsx(Checkbox, {\n        style: {\n          alignSelf: 'center'\n        },\n        value: num,\n        status: checked ? 'checked' : 'unchecked',\n        onPress: function onPress() {\n          setChecked(!checked);\n        }\n      })\n    })]\n  });\n});\nexport { CheckboxMe };","map":{"version":3,"names":["Text","Checkbox","useCallback","useState","View","FlatList","memo","set","jsx","_jsx","jsxs","_jsxs","CheckboxMe","_ref","num","checked","setChecked","style","flexDirection","width","children","alignSelf","value","status","onPress"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/CheckBox.js"],"sourcesContent":["import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport { View, FlatList } from 'react-native';\nimport { memo } from 'react';\nimport { set } from 'lodash';\nconst CheckboxMe = memo(({ num, checked,setChecked }) => {\n    return (\n        <View style={{ flexDirection: 'column', width: 50 }}>\n            <Text style={{ alignSelf: 'center' }}>{num}</Text>\n            <View style={{ alignSelf: 'center' }}>\n                <Checkbox\n                    style={{ alignSelf: 'center' }}\n                    value={num}\n                    status={checked ? 'checked' : 'unchecked'}\n                    onPress={() => {setChecked(!checked)}}\n                     />\n            </View>\n        </View>\n    )\n}\n)\nexport { CheckboxMe }\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AACnD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE9C,SAASC,IAAI,QAAQ,OAAO;AAC5B,SAASC,GAAG,QAAQ,QAAQ;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC7B,IAAMC,UAAU,GAAGN,IAAI,CAAC,UAAAO,IAAA,EAAiC;EAAA,IAA9BC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAACC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EAC9C,OACIL,KAAA,CAACP,IAAI;IAACa,KAAK,EAAE;MAAEC,aAAa,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,GAChDX,IAAA,CAACT,IAAI;MAACiB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAEN;IAAG,EAAQ,EAClDL,IAAA,CAACL,IAAI;MAACa,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EACjCX,IAAA,CAACR,QAAQ;QACLgB,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAS,CAAE;QAC/BC,KAAK,EAAER,GAAI;QACXS,MAAM,EAAER,OAAO,GAAG,SAAS,GAAG,WAAY;QAC1CS,OAAO,EAAE,SAAAA,QAAA,EAAM;UAACR,UAAU,CAAC,CAACD,OAAO,CAAC;QAAA;MAAE;IACnC,EACJ;EAAA,EACJ;AAEf,CAAC,CACA;AACD,SAASH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}