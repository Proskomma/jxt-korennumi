{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar defaultSettings = {\n  showWordAtts: false,\n  showTitles: true,\n  showHeadings: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  showCharacterMarkup: true,\n  showParaStyles: true,\n  selectedBcvNotes: []\n};\nvar sofria2WebActions = {\n  startDocument: [{\n    description: \"Set up\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref) {\n      var config = _ref.config,\n        context = _ref.context,\n        workspace = _ref.workspace,\n        output = _ref.output;\n      if (config.displayPartOfText != null) {\n        if (!['begin', 'continue'].includes(config.displayPartOfText.state)) {\n          throw new Error('state must be typeof string and one of begin or continue');\n        }\n      }\n      workspace.settings = _objectSpread(_objectSpread({}, defaultSettings), config);\n      workspace.webParas = [];\n      output.sofria = {};\n      output.sofria.sequence = {};\n      workspace.currentSequence = output.sofria.sequence;\n      workspace.paraContentStack = [];\n      workspace.footnoteNo = 1;\n      workspace.bookCode = context.document.metadata.document.bookCode;\n      workspace.chapter = 0;\n    }\n  }],\n  startRow: [{\n    description: \"Initialise content stack\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref2) {\n      var context = _ref2.context,\n        workspace = _ref2.workspace;\n      var block = context.sequences[0].block;\n      if (!context.inTable) {\n        context.inTable = true;\n        workspace.paraContentStack = [{\n          subType: 'table',\n          content: []\n        }];\n      }\n      workspace.paraContentStack.unshift({\n        subType: block.subType,\n        content: []\n      });\n    }\n  }],\n  endRow: [{\n    description: \"Add completed table to webParas\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref3) {\n      var config = _ref3.config,\n        context = _ref3.context,\n        workspace = _ref3.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.row(workspace.settings.showWordAtts ? popped.atts : {}, popped.content));\n    }\n  }],\n  startSequence: [{\n    description: \"startSequence\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref4) {\n      var context = _ref4.context,\n        workspace = _ref4.workspace;\n      workspace.currentSequence.type = context.sequences[0].type;\n      workspace.currentSequence.blocks = '';\n    }\n  }],\n  endSequence: [{\n    description: \"endSequence\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref5) {\n      var context = _ref5.context,\n        workspace = _ref5.workspace;\n      if (context.inTable) {\n        context.inTable = false;\n        workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content));\n      }\n      if (workspace.currentSequence.type === 'footnote') {\n        workspace.footnoteNo++;\n      }\n      workspace.currentSequence = {};\n    }\n  }],\n  blockGraft: [{\n    description: \"Process block grafts\",\n    test: function test() {\n      return true;\n    },\n    action: function action(environment) {\n      var currentBlock = environment.context.sequences[0].block;\n      if (currentBlock.subType !== \"remark\" && !([\"title\", \"endTitle\"].includes(currentBlock.subType) && !environment.workspace.settings.showTitles) && !([\"heading\"].includes(currentBlock.subType) && !environment.workspace.settings.showHeadings) && !([\"introduction\"].includes(currentBlock.subType) && !environment.workspace.settings.showIntroductions)) {\n        var graftRecord = {\n          type: currentBlock.type\n        };\n        if (currentBlock.sequence) {\n          graftRecord.sequence = {};\n          var cachedSequencePointer = environment.workspace.currentSequence;\n          environment.workspace.currentSequence = graftRecord.sequence;\n          var cachedParaContentStack = environment.workspace.paraContentStack;\n          environment.context.renderer.renderSequence(environment);\n          environment.workspace.paraContentStack = cachedParaContentStack;\n          environment.workspace.currentSequence = cachedSequencePointer;\n        }\n        environment.workspace.currentSequence.blocks.push(graftRecord);\n      }\n    }\n  }],\n  inlineGraft: [{\n    description: \"inlineGraft\",\n    test: function test(_ref6) {\n      var context = _ref6.context,\n        workspace = _ref6.workspace;\n      return context.sequences[0].element.subType !== \"note_caller\" && !([\"footnote\"].includes(context.sequences[0].element.subType) && !workspace.settings.showFootnotes) && !([\"xref\"].includes(context.sequences[0].element.subType) && !workspace.settings.showXrefs);\n    },\n    action: function action(environment) {\n      if (environment.context.inTable) {\n        environment.context.inTable = false;\n        environment.workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content));\n      }\n      var element = environment.context.sequences[0].element;\n      var graftRecord = {\n        type: element.type\n      };\n      if (element.sequence) {\n        graftRecord.sequence = {};\n        var cachedSequencePointer = environment.workspace.currentSequence;\n        var cachedParaContentStack = _toConsumableArray(environment.workspace.paraContentStack);\n        var cachedWebParas = environment.workspace.webParas;\n        environment.workspace.webParas = [];\n        environment.workspace.currentSequence = graftRecord.sequence;\n        environment.context.renderer.renderSequence(environment);\n        var sequencePseudoParas = environment.workspace.webParas;\n        environment.workspace.webParas = cachedWebParas;\n        environment.workspace.paraContentStack = cachedParaContentStack;\n        environment.workspace.paraContentStack[0].content.push(sequencePseudoParas);\n        environment.workspace.currentSequence = cachedSequencePointer;\n      }\n    }\n  }],\n  startParagraph: [{\n    description: \"Initialise content stack\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref7) {\n      var config = _ref7.config,\n        context = _ref7.context,\n        workspace = _ref7.workspace;\n      if (context.inTable) {\n        context.inTable = false;\n        workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content));\n      }\n      var block = context.sequences[0].block;\n      workspace.paraContentStack = [{\n        subType: block.subType,\n        content: []\n      }];\n    }\n  }],\n  endParagraph: [{\n    description: \"Add completed para to webParas\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref8) {\n      var config = _ref8.config,\n        context = _ref8.context,\n        workspace = _ref8.workspace;\n      workspace.webParas.push(config.renderers.paragraph(workspace.settings.showParaStyles || ['footnote', 'xref'].includes(context.sequences[0].type) ? workspace.paraContentStack[0].subType : \"usfm:m\", workspace.paraContentStack[0].content, workspace.footnoteNo));\n    }\n  }],\n  startWrapper: [{\n    description: \"Skip usfm:w outside main sequence\",\n    test: function test(_ref9) {\n      var context = _ref9.context;\n      return context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\";\n    },\n    action: function action() {}\n  }, {\n    description: \"Handle standard w attributes\",\n    test: function test(_ref10) {\n      var context = _ref10.context;\n      return context.sequences[0].element.subType === \"usfm:w\";\n    },\n    action: function action(_ref11) {\n      var context = _ref11.context,\n        workspace = _ref11.workspace;\n      var atts = context.sequences[0].element.atts;\n      var standardAtts = {};\n      for (var _ref12 of Object.entries(atts)) {\n        var _ref13 = _slicedToArray(_ref12, 2);\n        var key = _ref13[0];\n        var value = _ref13[1];\n        if ([\"strong\", \"lemma\", \"gloss\"].includes(key)) {\n          standardAtts[key] = value;\n        }\n      }\n      workspace.paraContentStack.unshift({\n        atts: standardAtts,\n        content: []\n      });\n      return false;\n    }\n  }, {\n    description: \"Push to paraContent Stack\",\n    test: function test(_ref14) {\n      var context = _ref14.context,\n        workspace = _ref14.workspace;\n      return ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup;\n    },\n    action: function action(_ref15) {\n      var context = _ref15.context,\n        workspace = _ref15.workspace;\n      var pushed = {\n        subType: context.sequences[0].element.subType,\n        content: []\n      };\n      if (context.sequences[0].element.subType === 'cell') {\n        pushed.atts = context.sequences[0].element.atts;\n      }\n      ;\n      workspace.paraContentStack.unshift(pushed);\n    }\n  }],\n  endWrapper: [{\n    description: \"Skip usfm:w outside main sequence\",\n    test: function test(_ref16) {\n      var context = _ref16.context;\n      return context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\";\n    },\n    action: function action() {}\n  }, {\n    description: \"Handle standard w attributes\",\n    test: function test(_ref17) {\n      var context = _ref17.context;\n      return context.sequences[0].element.subType === \"usfm:w\";\n    },\n    action: function action(_ref18) {\n      var config = _ref18.config,\n        workspace = _ref18.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wWrapper(workspace.settings.showWordAtts ? popped.atts : {}, popped.content));\n      return false;\n    }\n  }, {\n    description: \"Collapse one level of paraContent Stack\",\n    test: function test(_ref19) {\n      var context = _ref19.context,\n        workspace = _ref19.workspace;\n      return ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup;\n    },\n    action: function action(_ref20) {\n      var config = _ref20.config,\n        workspace = _ref20.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wrapper(popped.subType === 'cell' ? popped.atts : {}, popped.subType, popped.content));\n    }\n  }],\n  startMilestone: [{\n    description: \"Handle zaln word-like atts\",\n    test: function test(_ref21) {\n      var context = _ref21.context;\n      return context.sequences[0].element.subType === \"usfm:zaln\";\n    },\n    action: function action(_ref22) {\n      var context = _ref22.context,\n        workspace = _ref22.workspace;\n      var atts = context.sequences[0].element.atts;\n      var standardAtts = {};\n      for (var _ref23 of Object.entries(atts)) {\n        var _ref24 = _slicedToArray(_ref23, 2);\n        var key = _ref24[0];\n        var value = _ref24[1];\n        if ([\"x-strong\", \"x-lemma\", \"x-morph\", \"x-content\"].includes(key)) {\n          standardAtts[key.split('-')[1]] = value;\n        }\n      }\n      workspace.paraContentStack.unshift({\n        atts: standardAtts,\n        content: []\n      });\n      return false;\n    }\n  }],\n  endMilestone: [{\n    description: \"Handle zaln word-like atts\",\n    test: function test(_ref25) {\n      var context = _ref25.context;\n      return context.sequences[0].element.subType === \"usfm:zaln\";\n    },\n    action: function action(_ref26) {\n      var config = _ref26.config,\n        workspace = _ref26.workspace;\n      var popped = workspace.paraContentStack.shift();\n      workspace.paraContentStack[0].content.push(config.renderers.wWrapper(workspace.settings.showWordAtts ? popped.atts : {}, popped.content));\n      return false;\n    }\n  }],\n  text: [{\n    description: \"Push text to para\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref27) {\n      var config = _ref27.config,\n        context = _ref27.context,\n        workspace = _ref27.workspace;\n      var element = context.sequences[0].element;\n      element.text.split(\" \").map(function (w, id) {\n        var renderedText = config.renderers.text(id === element.text.split(\" \") - 1 ? w : w + \" \");\n        workspace.paraContentStack[0].content.push(renderedText);\n      });\n    }\n  }],\n  mark: [{\n    description: \"Show chapter/verse markers\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref28) {\n      var config = _ref28.config,\n        context = _ref28.context,\n        workspace = _ref28.workspace;\n      var element = context.sequences[0].element;\n      if (element.subType === \"chapter_label\" && workspace.settings.showChapterLabels) {\n        workspace.chapter = element.atts.number;\n        workspace.paraContentStack[0].content.push(config.renderers.chapter_label(element.atts.number));\n      } else if (element.subType === \"verses_label\" && workspace.settings.showVersesLabels) {\n        var bcv = [];\n        if (config.selectedBcvNotes.length > 0) {\n          bcv = [workspace.bookCode, workspace.chapter, element.atts.number];\n        }\n        workspace.paraContentStack[0].content.push(config.renderers.verses_label(element.atts.number, bcv, config.bcvNotesCallback));\n      }\n    }\n  }],\n  endDocument: [{\n    description: \"Build JSX\",\n    test: function test() {\n      return true;\n    },\n    action: function action(_ref29) {\n      var config = _ref29.config,\n        workspace = _ref29.workspace,\n        output = _ref29.output;\n      output.paras = config.renderers.mergeParas(workspace.webParas);\n    }\n  }]\n};\nexport default sofria2WebActions;","map":{"version":3,"names":["defaultSettings","showWordAtts","showTitles","showHeadings","showFootnotes","showXrefs","showChapterLabels","showVersesLabels","showCharacterMarkup","showParaStyles","selectedBcvNotes","sofria2WebActions","startDocument","description","test","action","_ref","config","context","workspace","output","displayPartOfText","includes","state","Error","settings","_objectSpread","webParas","sofria","sequence","currentSequence","paraContentStack","footnoteNo","bookCode","document","metadata","chapter","startRow","_ref2","block","sequences","inTable","subType","content","unshift","endRow","_ref3","popped","shift","push","renderers","row","atts","startSequence","_ref4","type","blocks","endSequence","_ref5","table","blockGraft","environment","currentBlock","showIntroductions","graftRecord","cachedSequencePointer","cachedParaContentStack","renderer","renderSequence","inlineGraft","_ref6","element","_toConsumableArray","cachedWebParas","sequencePseudoParas","startParagraph","_ref7","endParagraph","_ref8","paragraph","startWrapper","_ref9","_ref10","_ref11","standardAtts","_ref12","Object","entries","_ref13","_slicedToArray","key","value","_ref14","_ref15","pushed","endWrapper","_ref16","_ref17","_ref18","wWrapper","_ref19","_ref20","wrapper","startMilestone","_ref21","_ref22","_ref23","_ref24","split","endMilestone","_ref25","_ref26","text","_ref27","map","w","id","renderedText","mark","_ref28","number","chapter_label","bcv","length","verses_label","bcvNotesCallback","endDocument","_ref29","paras","mergeParas"],"sources":["/home/gabriel/repos/jxt-korennumi/renderer/sofria2web.js"],"sourcesContent":["\nconst defaultSettings = {\n    showWordAtts: false,\n    showTitles: true,\n    showHeadings: true,\n    showFootnotes: true,\n    showXrefs: true,\n    showChapterLabels: true,\n    showVersesLabels: true,\n    showCharacterMarkup: true,\n    showParaStyles: true,\n    selectedBcvNotes: []\n}\n\nconst sofria2WebActions = {\n    startDocument: [\n        {\n            description: \"Set up\",\n            test: () => true,\n            action: ({ config, context, workspace, output }) => {\n\n                if (config.displayPartOfText != null) {\n                    if (!['begin', 'continue'].includes(config.displayPartOfText.state)) {\n\n                        throw new Error('state must be typeof string and one of begin or continue');\n                    }\n                }\n                workspace.settings = { ...defaultSettings, ...config }\n                workspace.webParas = [];\n                output.sofria = {};\n                output.sofria.sequence = {};\n                workspace.currentSequence = output.sofria.sequence;\n                workspace.paraContentStack = [];\n                workspace.footnoteNo = 1;\n                workspace.bookCode = context.document.metadata.document.bookCode;\n                workspace.chapter = 0;\n\n            },\n        }\n    ],\n\n\n    startRow: [\n        {\n            description: \"Initialise content stack\",\n            test: () => true,\n            action: ({ context, workspace }) => {\n                const block = context.sequences[0].block;\n\n\n                if (!context.inTable) {\n                    context.inTable = true\n\n                    workspace.paraContentStack = [\n                        {\n                            subType: 'table',\n                            content: []\n                        }\n\n                    ]\n                }\n                workspace.paraContentStack.unshift(\n                    {\n                        subType: block.subType,\n                        content: []\n                    }\n                );\n            }\n        },\n    ],\n\n    endRow: [\n        {\n            description: \"Add completed table to webParas\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n\n                const popped = workspace.paraContentStack.shift();\n                workspace.paraContentStack[0].content.push(config.renderers.row(\n                    (workspace.settings.showWordAtts ? popped.atts : {}),\n                    popped.content\n                ));\n            }\n        },\n    ],\n    startSequence: [\n        {\n            description: \"startSequence\",\n            test: () => true,\n            action: ({ context, workspace }) => {\n                workspace.currentSequence.type = context.sequences[0].type;\n                workspace.currentSequence.blocks = ''\n            }\n        },\n    ],\n    endSequence: [\n        {\n            description: \"endSequence\",\n            test: () => true,\n            action: ({ context, workspace }) => {\n                if (context.inTable) {\n                    context.inTable = false\n                    workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content))\n                }\n                if (workspace.currentSequence.type === 'footnote') {\n                    workspace.footnoteNo++;\n                }\n                workspace.currentSequence = {};\n            }\n        },\n    ],\n    blockGraft: [\n        {\n            description: \"Process block grafts\",\n            test: () => true,\n            action: (environment) => {\n\n                const currentBlock = environment.context.sequences[0].block;\n                if (\n                    currentBlock.subType !== \"remark\" &&\n                    !([\"title\", \"endTitle\"].includes(currentBlock.subType) && !environment.workspace.settings.showTitles) &&\n                    !([\"heading\"].includes(currentBlock.subType) && !environment.workspace.settings.showHeadings) &&\n                    !([\"introduction\"].includes(currentBlock.subType) && !environment.workspace.settings.showIntroductions)\n                ) {\n                    const graftRecord = {\n                        type: currentBlock.type,\n                    };\n                    if (currentBlock.sequence) {\n                        graftRecord.sequence = {};\n                        const cachedSequencePointer = environment.workspace.currentSequence;\n                        environment.workspace.currentSequence = graftRecord.sequence;\n                        const cachedParaContentStack = environment.workspace.paraContentStack;\n                        environment.context.renderer.renderSequence(environment);\n                        environment.workspace.paraContentStack = cachedParaContentStack;\n                        environment.workspace.currentSequence = cachedSequencePointer;\n                    }\n                    environment.workspace.currentSequence.blocks.push(graftRecord);\n                }\n            }\n        },\n    ],\n    inlineGraft: [\n        {\n            description: \"inlineGraft\",\n            test: ({ context, workspace }) => context.sequences[0].element.subType !== \"note_caller\" &&\n                !([\"footnote\"].includes(context.sequences[0].element.subType) && !workspace.settings.showFootnotes) &&\n                !([\"xref\"].includes(context.sequences[0].element.subType) && !workspace.settings.showXrefs),\n            action: (environment) => {\n                if (environment.context.inTable) {\n                    environment.context.inTable = false\n                    environment.workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content))\n                }\n                const element = environment.context.sequences[0].element;\n\n                const graftRecord = {\n                    type: element.type,\n                };\n\n                if (element.sequence) {\n                    graftRecord.sequence = {};\n                    const cachedSequencePointer = environment.workspace.currentSequence;\n                    const cachedParaContentStack = [...environment.workspace.paraContentStack];\n                    const cachedWebParas = environment.workspace.webParas;\n                    environment.workspace.webParas = [];\n                    environment.workspace.currentSequence = graftRecord.sequence;\n                    environment.context.renderer.renderSequence(environment);\n                    const sequencePseudoParas = environment.workspace.webParas;\n                    environment.workspace.webParas = cachedWebParas;\n                    environment.workspace.paraContentStack = cachedParaContentStack;\n                    environment.workspace.paraContentStack[0].content.push(sequencePseudoParas);\n                    environment.workspace.currentSequence = cachedSequencePointer;\n\n                }\n            }\n        },\n    ],\n    startParagraph: [\n        {\n            description: \"Initialise content stack\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n                if (context.inTable) {\n                    context.inTable = false\n                    workspace.webParas.push(config.renderers.table(workspace.paraContentStack[0].content))\n                }\n                const block = context.sequences[0].block;\n                workspace.paraContentStack = [\n                    {\n                        subType: block.subType,\n                        content: []\n                    }\n                ]\n            }\n        },\n    ],\n    endParagraph: [\n        {\n            description: \"Add completed para to webParas\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n                workspace.webParas.push(\n                    config.renderers.paragraph(\n                        workspace.settings.showParaStyles || ['footnote', 'xref'].includes(context.sequences[0].type) ?\n                            workspace.paraContentStack[0].subType :\n                            \"usfm:m\",\n                        workspace.paraContentStack[0].content,\n                        workspace.footnoteNo,\n                    )\n                );\n            }\n        },\n    ],\n    startWrapper: [\n        {\n            description: \"Skip usfm:w outside main sequence\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\",\n            action: () => { }\n        },\n        {\n            description: \"Handle standard w attributes\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:w\",\n            action: ({ context, workspace }) => {\n\n                const atts = context.sequences[0].element.atts;\n                const standardAtts = {};\n                for (const [key, value] of Object.entries(atts)) {\n                    if ([\"strong\", \"lemma\", \"gloss\"].includes(key)) {\n                        standardAtts[key] = value;\n                    }\n                }\n                workspace.paraContentStack.unshift(\n                    {\n                        atts: standardAtts,\n                        content: []\n                    }\n                );\n                return false;\n            }\n        },\n        {\n            description: \"Push to paraContent Stack\",\n            test: ({ context, workspace }) => ![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup,\n            action: ({ context, workspace }) => {\n                const pushed = {\n                    subType: context.sequences[0].element.subType,\n                    content: []\n                };\n                if (context.sequences[0].element.subType === 'cell') {\n                    pushed.atts = context.sequences[0].element.atts\n                };\n\n\n                workspace.paraContentStack.unshift(\n                    pushed\n                );\n            }\n        },\n    ],\n    endWrapper: [\n        {\n            description: \"Skip usfm:w outside main sequence\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:w\" && context.sequences[0].type !== \"main\",\n            action: () => { }\n        },\n        {\n            description: \"Handle standard w attributes\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:w\",\n            action: ({ config, workspace }) => {\n\n                const popped = workspace.paraContentStack.shift();\n\n                workspace.paraContentStack[0].content.push(config.renderers.wWrapper(\n                    (workspace.settings.showWordAtts ? popped.atts : {}),\n                    popped.content\n                ));\n                return false;\n            }\n        },\n        {\n            description: \"Collapse one level of paraContent Stack\",\n            test: ({ context, workspace }) => {\n\n                return (![\"chapter\", \"verses\"].includes(context.sequences[0].element.subType) && workspace.settings.showCharacterMarkup)\n\n            },\n            action: ({ config, workspace }) => {\n\n                const popped = workspace.paraContentStack.shift();\n                workspace.paraContentStack[0].content.push(config.renderers.wrapper(popped.subType === 'cell' ? popped.atts : {}, popped.subType, popped.content));\n            }\n        },\n    ],\n    startMilestone: [\n        {\n            description: \"Handle zaln word-like atts\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:zaln\",\n            action: ({ context, workspace }) => {\n\n                const atts = context.sequences[0].element.atts;\n                const standardAtts = {};\n                for (const [key, value] of Object.entries(atts)) {\n                    if ([\"x-strong\", \"x-lemma\", \"x-morph\", \"x-content\"].includes(key)) {\n                        standardAtts[key.split('-')[1]] = value;\n                    }\n                }\n                workspace.paraContentStack.unshift(\n                    {\n                        atts: standardAtts,\n                        content: []\n                    }\n                );\n                return false;\n            }\n        },\n    ],\n    endMilestone: [\n        {\n            description: \"Handle zaln word-like atts\",\n            test: ({ context }) => context.sequences[0].element.subType === \"usfm:zaln\",\n            action: ({ config, workspace }) => {\n                const popped = workspace.paraContentStack.shift();\n                workspace.paraContentStack[0].content.push(config.renderers.wWrapper(\n                    (workspace.settings.showWordAtts ? popped.atts : {}),\n                    popped.content\n                ));\n                return false;\n            }\n        },\n    ],\n    text: [\n        {\n            description: \"Push text to para\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n\n                const element = context.sequences[0].element;\n                //const renderedText = config.renderers.text(element.text);\n                //workspace.paraContentStack[0].content.push(renderedText);\n                element.text.split(\" \").map((w, id) => {\n\n                    const renderedText = config.renderers.text((id === element.text.split(\" \") - 1) ? w : w + \" \")\n                    workspace.paraContentStack[0].content.push(renderedText);\n                })\n\n            }\n        },\n    ],\n    mark: [\n        {\n            description: \"Show chapter/verse markers\",\n            test: () => true,\n            action: ({ config, context, workspace }) => {\n                const element = context.sequences[0].element;\n                if (element.subType === \"chapter_label\" && workspace.settings.showChapterLabels) {\n                    workspace.chapter = element.atts.number;\n                    workspace.paraContentStack[0].content.push(config.renderers.chapter_label(element.atts.number));\n                } else if (element.subType === \"verses_label\" && workspace.settings.showVersesLabels) {\n                    let bcv = [];\n                    if (config.selectedBcvNotes.length > 0) {\n                        bcv = [workspace.bookCode, workspace.chapter, element.atts.number]\n                    }\n                    workspace.paraContentStack[0].content.push(config.renderers.verses_label(element.atts.number, bcv, config.bcvNotesCallback));\n                }\n            }\n        },\n    ],\n    endDocument: [\n        {\n            description: \"Build JSX\",\n            test: () => true,\n            action: ({ config, workspace, output }) => {\n\n                output.paras = config.renderers.mergeParas(workspace.webParas);\n            }\n        }\n    ],\n};\n\n\nexport default sofria2WebActions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}