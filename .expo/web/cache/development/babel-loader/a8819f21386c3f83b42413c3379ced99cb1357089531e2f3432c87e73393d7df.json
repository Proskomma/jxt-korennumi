{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text } from 'react-native-paper';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { RadioButton } from 'react-native-paper';\nimport { useRef } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction BibleSelection(_ref) {\n  var pk = _ref.pk,\n    bible = _ref.bible,\n    setBible = _ref.setBible;\n  var _React$useState = React.useState(bible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    checked = _React$useState2[0],\n    setChecked = _React$useState2[1];\n  var docSetids = useRef(pk.gqlQuerySync(\"{\\n      docSets \\n      {\\n        id\\n      }\\n    }\"));\n  return _jsx(View, {\n    children: docSetids.current.data.docSets.map(function (doc, id) {\n      return _jsxs(View, {\n        style: {\n          justifyContent: 'space-between',\n          flexDirection: 'row'\n        },\n        children: [_jsx(Text, {\n          style: {\n            alignSelf: 'center'\n          },\n          children: doc.id\n        }), _jsx(RadioButton, {\n          style: {\n            alignSelf: 'end'\n          },\n          value: doc.id,\n          status: checked === \"\" + doc.id ? 'checked' : 'unchecked',\n          onPress: function onPress() {\n            setChecked(\"\" + doc.id);\n            setBible(doc.id);\n          }\n        })]\n      }, id);\n    })\n  });\n}\nexport { BibleSelection };","map":{"version":3,"names":["Text","React","View","RadioButton","useRef","jsx","_jsx","jsxs","_jsxs","BibleSelection","_ref","pk","bible","setBible","_React$useState","useState","_React$useState2","_slicedToArray","checked","setChecked","docSetids","gqlQuerySync","children","current","data","docSets","map","doc","id","style","justifyContent","flexDirection","alignSelf","value","status","onPress"],"sources":["/home/gabriel/repos/jxt-korennumi/components/used/TextConfig/BibleSelection.js"],"sourcesContent":["import { Text } from 'react-native-paper';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { RadioButton } from 'react-native-paper';\nimport { useRef } from 'react';\n\nfunction BibleSelection({ pk, bible, setBible }) {\n  const [checked, setChecked] = React.useState(bible);\n  let docSetids = useRef(pk.gqlQuerySync(\n    `{\n      docSets \n      {\n        id\n      }\n    }`));\n  return <View>{docSetids.current.data.docSets.map((doc, id) =>\n    <View key={id} style={{ justifyContent: 'space-between', flexDirection: 'row' }}>\n      <Text style={{ alignSelf: 'center' }}>{doc.id}</Text>\n      <RadioButton\n        style={{ alignSelf: 'end' }}\n        value={doc.id}\n        status={checked === `${doc.id}` ? 'checked' : 'unchecked'}\n        onPress={() => {\n          setChecked(`${doc.id}`);\n          setBible(doc.id)\n        }} />\n    </View>)}</View>\n}\nexport { BibleSelection }\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE/B,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/B,SAASC,cAAcA,CAAAC,IAAA,EAA0B;EAAA,IAAvBC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAC3C,IAAAC,eAAA,GAA8Bb,KAAK,CAACc,QAAQ,CAACH,KAAK,CAAC;IAAAI,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA5CI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAC1B,IAAII,SAAS,GAAGhB,MAAM,CAACO,EAAE,CAACU,YAAY,0DAMjC,CAAC;EACN,OAAOf,IAAA,CAACJ,IAAI;IAAAoB,QAAA,EAAEF,SAAS,CAACG,OAAO,CAACC,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,UAACC,GAAG,EAAEC,EAAE;MAAA,OACvDpB,KAAA,CAACN,IAAI;QAAU2B,KAAK,EAAE;UAAEC,cAAc,EAAE,eAAe;UAAEC,aAAa,EAAE;QAAM,CAAE;QAAAT,QAAA,GAC9EhB,IAAA,CAACN,IAAI;UAAC6B,KAAK,EAAE;YAAEG,SAAS,EAAE;UAAS,CAAE;UAAAV,QAAA,EAAEK,GAAG,CAACC;QAAE,EAAQ,EACrDtB,IAAA,CAACH,WAAW;UACV0B,KAAK,EAAE;YAAEG,SAAS,EAAE;UAAM,CAAE;UAC5BC,KAAK,EAAEN,GAAG,CAACC,EAAG;UACdM,MAAM,EAAEhB,OAAO,UAAQS,GAAG,CAACC,EAAI,GAAG,SAAS,GAAG,WAAY;UAC1DO,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbhB,UAAU,MAAIQ,GAAG,CAACC,EAAE,CAAG;YACvBf,QAAQ,CAACc,GAAG,CAACC,EAAE,CAAC;UAClB;QAAE,EAAG;MAAA,GATEA,EAAE,CAUN;IAAA;EAAC,EAAQ;AACpB;AACA,SAASnB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}