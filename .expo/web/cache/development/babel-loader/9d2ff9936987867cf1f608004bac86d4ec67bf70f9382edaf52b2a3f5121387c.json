{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { queryOneChapterOfOneDocSets } from \"../graphql/Query/query\";\nvar _require = require('proskomma-core'),\n  Proskomma = _require.Proskomma;\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport bottomTab from \"../style/bottomTab\";\nimport { SofriaRenderFromProskomma } from 'proskomma-json-tools';\nimport sofria2WebActions from \"../renderer/sofria2web\";\nimport { renderers } from \"../renderer/render2reactNative\";\nimport React, { useState, useCallback } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar succinct = require(\"../succinct/grc.json\");\nvar pk = new Proskomma([{\n  name: \"source\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}, {\n  name: \"project\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}, {\n  name: \"revision\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}]);\nfunction multipleReplace(query, tabl) {\n  var ret = query;\n  for (var _ref of tabl) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var s = _ref2[0];\n    var r = _ref2[1];\n    ret = ret.replace(s, r);\n  }\n  return ret;\n}\npk.loadSuccinctDocSet(succinct);\nvar chapterQuery = multipleReplace(queryOneChapterOfOneDocSets, [[\"%idChapter%\", \"1\"], [\"%docSetId%\", \"local_grc_1\"], [\"%bookCode%\", \"TIT\"]]);\nvar chapterResult = pk.gqlQuerySync(chapterQuery);\nvar renderer = new SofriaRenderFromProskomma({\n  proskomma: pk,\n  actions: sofria2WebActions\n});\nvar config = {\n  showWordAtts: false,\n  showTitles: true,\n  showHeadings: true,\n  showIntroductions: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showParaStyles: true,\n  showCharacterMarkup: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  selectedBcvNotes: [],\n  bcvNotesCallback: function bcvNotesCallback(bcv) {\n    setBcvNoteRef(bcv);\n  },\n  renderers: renderers\n};\nvar output = {};\ntry {\n  renderer.renderDocument({\n    docId: chapterResult.data.document.id,\n    config: config,\n    output: output\n  });\n} catch (err) {\n  console.log(\"Renderer\", err);\n  throw err;\n}\nconsole.log(output.paras.slice(0, 10));\nfunction MainPage() {\n  var _useState = useState(output.paras.slice(0, 10)),\n    _useState2 = _slicedToArray(_useState, 2),\n    paras = _useState2[0],\n    setParas = _useState2[1];\n  var loadMoreItems = useCallback(function () {\n    console.log('test');\n    setParas(function (prevParas) {\n      var newParas = output.paras.slice(prevParas.length, prevParas.length + 2);\n      console.log([].concat(_toConsumableArray(prevParas), _toConsumableArray(newParas)));\n      return [].concat(_toConsumableArray(prevParas), _toConsumableArray(newParas));\n    });\n  }, []);\n  var renderItem = useCallback(function (_ref3) {\n    var item = _ref3.item;\n    return item;\n  }, []);\n  var keyExtractor = useCallback(function (item, index) {\n    return \"para-\" + index;\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      children: \"Chapitre 1\"\n    }), _jsxs(ScrollView, {\n      children: [_jsx(FlatList, {\n        data: paras,\n        renderItem: renderItem,\n        keyExtractor: keyExtractor,\n        onEndReached: loadMoreItems,\n        onEndReachedThreshold: 0.1\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })]\n  });\n}\nexport { MainPage };","map":{"version":3,"names":["queryOneChapterOfOneDocSets","_require","require","Proskomma","View","ScrollView","Text","StatusBar","FlatList","bottomTab","SofriaRenderFromProskomma","sofria2WebActions","renderers","React","useState","useCallback","jsx","_jsx","jsxs","_jsxs","succinct","pk","name","type","regex","multipleReplace","query","tabl","ret","_ref","_ref2","_slicedToArray","s","r","replace","loadSuccinctDocSet","chapterQuery","chapterResult","gqlQuerySync","renderer","proskomma","actions","config","showWordAtts","showTitles","showHeadings","showIntroductions","showFootnotes","showXrefs","showParaStyles","showCharacterMarkup","showChapterLabels","showVersesLabels","selectedBcvNotes","bcvNotesCallback","bcv","setBcvNoteRef","output","renderDocument","docId","data","document","id","err","console","log","paras","slice","MainPage","_useState","_useState2","setParas","loadMoreItems","prevParas","newParas","length","concat","_toConsumableArray","renderItem","_ref3","item","keyExtractor","index","style","flex","children","onEndReached","onEndReachedThreshold"],"sources":["/home/gabriel/repos/jxt-korennumi/components/mainPage.js"],"sourcesContent":["import { queryOneChapterOfOneDocSets } from '../graphql/Query/query';\nconst { Proskomma } = require('proskomma-core');\nimport { View, ScrollView, Text, StatusBar, FlatList } from 'react-native';\nimport bottomTab from '../style/bottomTab';\nimport {SofriaRenderFromProskomma} from 'proskomma-json-tools'\nimport sofria2WebActions from '../renderer/sofria2web';\nimport {renderers} from '../renderer/render2reactNative';\nimport React, { useState, useCallback } from 'react';\n\nconst succinct = require('../succinct/grc.json');\nconst pk = new Proskomma([\n  {\n    name: \"source\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n  {\n    name: \"project\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n  {\n    name: \"revision\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n]);\n\nfunction multipleReplace(query, tabl) {\n  let ret = query;\n  for (const [s, r] of tabl) {\n    ret = ret.replace(s, r);\n  }\n  return ret\n}\n\npk.loadSuccinctDocSet(succinct);\nlet chapterQuery =  multipleReplace(\n  queryOneChapterOfOneDocSets,\n  [[\"%idChapter%\", \"1\"], [\"%docSetId%\", \"local_grc_1\"], [\"%bookCode%\", \"TIT\"]]);\n\nlet chapterResult = pk.gqlQuerySync(chapterQuery);\nconst renderer = new SofriaRenderFromProskomma({\n  proskomma: pk,\n  actions: sofria2WebActions,\n});\n\nconst config = {\n  showWordAtts: false,\n  showTitles: true,\n  showHeadings: true,\n  showIntroductions: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showParaStyles: true,\n  showCharacterMarkup: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  selectedBcvNotes: [],\n  bcvNotesCallback: (bcv) => {\n    setBcvNoteRef(bcv);\n  },\n  renderers,\n};\n\nconst output = {};\ntry {\n  renderer.renderDocument({\n      docId: chapterResult.data.document.id,\n      config,\n      output,\n  });\n} catch (err) {\n  console.log(\"Renderer\", err);\n  throw err;\n}\nconsole.log(output.paras.slice(0, 10))\nfunction MainPage() {\n  const [paras, setParas] = useState(output.paras.slice(0, 10)); // Initial set of items\n\n  const loadMoreItems = useCallback(() => {\n    // Load more items when the user reaches the end of the list\n    console.log('test');\n    setParas(prevParas => {\n      const newParas = output.paras.slice(prevParas.length, prevParas.length + 2);\n      console.log([...prevParas, ...newParas]);\n      return [...prevParas, ...newParas];\n    });\n  }, []);\n\n  const renderItem = useCallback(({ item }) => item, []);\n\n  const keyExtractor = useCallback((item, index) => `para-${index}`, []);\n\n  return (\n    <View style={{flex:1}}>\n      <Text>Chapitre 1</Text>\n      <ScrollView>\n      <FlatList\n        data={paras}\n        renderItem={renderItem}\n        keyExtractor={keyExtractor}\n        onEndReached={loadMoreItems}\n        onEndReachedThreshold={0.1} // Trigger loadMoreItems when the user reaches 10% from the end\n      />\n      <StatusBar style=\"auto\" />\n      </ScrollView>\n    </View>\n  );\n}\n\n\nexport { MainPage }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}