{"ast":null,"code":"import SofriaRenderFromProskomma from \"../../used/SofiraRenderFromProskommaNew\";\nimport sofria2WebActions from \"../../../renderer/sofria2web\";\nimport { renderers } from \"../../renderer/render2reactNative\";\nfunction Tabletest(_ref) {\n  var pk = _ref.pk;\n  var documentQuery = \"\\n  {\\n    documents {\\n      docSetId\\n      id\\n      \\n    }\\n  }\";\n  var config = {\n    showWordAtts: false,\n    showTitles: true,\n    showHeadings: true,\n    showIntroductions: true,\n    showFootnotes: true,\n    showXrefs: true,\n    showParaStyles: true,\n    showCharacterMarkup: true,\n    showChapterLabels: true,\n    showVersesLabels: true,\n    selectedBcvNotes: [],\n    displayPartOfText: {\n      state: state\n    },\n    bcvNotesCallback: function bcvNotesCallback(bcv) {\n      setBcvNoteRef(bcv);\n    },\n    renderers: renderers\n  };\n  var documentResult = pk.gqlQuerySync(documentQuery);\n  console.log(documentResult);\n  documentResult = documentResult.data.documents.filter(function (d) {\n    return d.docSetId === '1_web_0';\n  })[0];\n  console.log(documentResult);\n  var renderer = new SofriaRenderFromProskomma({\n    proskomma: pk,\n    actions: sofria2WebActions\n  });\n  var output = {};\n  var context = {};\n  var workspace = {};\n  renderer.renderDocument1({\n    docId: documentResult.id,\n    config: config,\n    context: context,\n    workspace: workspace,\n    output: output\n  });\n  console.log(ouput.paras);\n}\nexport { Tabletest };","map":{"version":3,"names":["SofriaRenderFromProskomma","sofria2WebActions","renderers","Tabletest","_ref","pk","documentQuery","config","showWordAtts","showTitles","showHeadings","showIntroductions","showFootnotes","showXrefs","showParaStyles","showCharacterMarkup","showChapterLabels","showVersesLabels","selectedBcvNotes","displayPartOfText","state","bcvNotesCallback","bcv","setBcvNoteRef","documentResult","gqlQuerySync","console","log","data","documents","filter","d","docSetId","renderer","proskomma","actions","output","context","workspace","renderDocument1","docId","id","ouput","paras"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/tableTest/tableTest.js"],"sourcesContent":["\nimport SofriaRenderFromProskomma from '../../used/SofiraRenderFromProskommaNew';\nimport sofria2WebActions from '../../../renderer/sofria2web';\nimport { renderers } from '../../renderer/render2reactNative';\n\nfunction Tabletest({ pk }) {\n\n  \n  let documentQuery = `\n  {\n    documents {\n      docSetId\n      id\n      \n    }\n  }`\n  const config = {\n    showWordAtts: false,\n    showTitles: true,\n    showHeadings: true,\n    showIntroductions: true,\n    showFootnotes: true,\n    showXrefs: true,\n    showParaStyles: true,\n    showCharacterMarkup: true,\n    showChapterLabels: true,\n    showVersesLabels: true,\n    //block: { nb: 1 },\n    //chapters: [`${documentResult.data.document.cIndexes.shift().chapter}`],\n    selectedBcvNotes: [],\n    displayPartOfText: { state },\n    bcvNotesCallback: (bcv) => {\n      setBcvNoteRef(bcv);\n    },\n    renderers,\n  };\n    let documentResult = pk.gqlQuerySync(documentQuery)\n    console.log(documentResult)\n    documentResult = documentResult.data.documents.filter(d => d.docSetId === '1_web_0')[0]\n    console.log(documentResult)\n\n    const renderer = new SofriaRenderFromProskomma({\n        proskomma: pk,\n        actions: sofria2WebActions,\n    });\n\n    const output = {};\n    const context = {};\n    const workspace = {};\n\n    renderer.renderDocument1({\n      docId: documentResult.id,\n      config,\n      context,\n      workspace,\n      output,\n    });\n\n    console.log(ouput.paras)\n}  \nexport {Tabletest}"],"mappings":"AACA,OAAOA,yBAAyB;AAChC,OAAOC,iBAAiB;AACxB,SAASC,SAAS;AAElB,SAASC,SAASA,CAAAC,IAAA,EAAS;EAAA,IAANC,EAAE,GAAAD,IAAA,CAAFC,EAAE;EAGrB,IAAIC,aAAa,yEAOf;EACF,IAAMC,MAAM,GAAG;IACbC,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE,IAAI;IAClBC,iBAAiB,EAAE,IAAI;IACvBC,aAAa,EAAE,IAAI;IACnBC,SAAS,EAAE,IAAI;IACfC,cAAc,EAAE,IAAI;IACpBC,mBAAmB,EAAE,IAAI;IACzBC,iBAAiB,EAAE,IAAI;IACvBC,gBAAgB,EAAE,IAAI;IAGtBC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE;MAAEC,KAAK,EAALA;IAAM,CAAC;IAC5BC,gBAAgB,EAAE,SAAAA,iBAACC,GAAG,EAAK;MACzBC,aAAa,CAACD,GAAG,CAAC;IACpB,CAAC;IACDpB,SAAS,EAATA;EACF,CAAC;EACC,IAAIsB,cAAc,GAAGnB,EAAE,CAACoB,YAAY,CAACnB,aAAa,CAAC;EACnDoB,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;EAC3BA,cAAc,GAAGA,cAAc,CAACI,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,QAAQ,KAAK,SAAS;EAAA,EAAC,CAAC,CAAC,CAAC;EACvFN,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;EAE3B,IAAMS,QAAQ,GAAG,IAAIjC,yBAAyB,CAAC;IAC3CkC,SAAS,EAAE7B,EAAE;IACb8B,OAAO,EAAElC;EACb,CAAC,CAAC;EAEF,IAAMmC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAMC,OAAO,GAAG,CAAC,CAAC;EAClB,IAAMC,SAAS,GAAG,CAAC,CAAC;EAEpBL,QAAQ,CAACM,eAAe,CAAC;IACvBC,KAAK,EAAEhB,cAAc,CAACiB,EAAE;IACxBlC,MAAM,EAANA,MAAM;IACN8B,OAAO,EAAPA,OAAO;IACPC,SAAS,EAATA,SAAS;IACTF,MAAM,EAANA;EACF,CAAC,CAAC;EAEFV,OAAO,CAACC,GAAG,CAACe,KAAK,CAACC,KAAK,CAAC;AAC5B;AACA,SAAQxC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}