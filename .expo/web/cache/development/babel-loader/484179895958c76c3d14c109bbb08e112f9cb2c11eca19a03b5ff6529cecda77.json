{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResizableContainer = function ResizableContainer(_ref) {\n  var children = _ref.children;\n  var _useState = useState(100),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(100),\n    _useState4 = _slicedToArray(_useState3, 2),\n    startHeight = _useState4[0],\n    setStartHeight = _useState4[1];\n  var handleTouchStart = function handleTouchStart(event) {\n    var newValue = event.nativeEvent.locationY;\n    console.log(event);\n    setStartHeight(newValue);\n  };\n  var handleTouchMove = function handleTouchMove(event) {\n    var newValue = event.nativeEvent.locationY;\n    console.log(newValue);\n    setStartHeight(newValue);\n  };\n  return _jsxs(View, {\n    style: {\n      height: 280\n    },\n    children: [_jsx(View, {\n      style: {\n        width: '100%',\n        backgroundColor: '#f0f0f0',\n        overflow: 'hidden',\n        height: height\n      },\n      children: children\n    }), _jsx(TouchableOpacity, {\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      children: _jsx(View, {\n        style: {\n          width: '100%',\n          height: 40,\n          backgroundColor: '#ddd',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsx(View, {\n          style: {\n            width: 50,\n            height: 5,\n            backgroundColor: '#666'\n          }\n        })\n      })\n    })]\n  });\n};\nexport default ResizableContainer;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","PanGestureHandler","State","jsx","_jsx","jsxs","_jsxs","ResizableContainer","_ref","children","_useState","_useState2","_slicedToArray","height","setHeight","_useState3","_useState4","startHeight","setStartHeight","handleTouchStart","event","newValue","nativeEvent","locationY","console","log","handleTouchMove","style","width","backgroundColor","overflow","onTouchStart","onTouchMove","justifyContent","alignItems"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/ResizableContainer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View , TouchableOpacity  } from 'react-native';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\n\nconst ResizableContainer = ({ children }) => {\n  const [height, setHeight] = useState(100);\n  const [startHeight, setStartHeight] = useState(100);\n\n  const handleTouchStart = event => {\n  \n    const newValue = event.nativeEvent.locationY;\n    console.log(event)\n    setStartHeight(newValue);\n  };\n\n  const handleTouchMove = event => {\n    const newValue = event.nativeEvent.locationY;\n    console.log(newValue)\n    setStartHeight(newValue);\n  };\n\n\n  return (\n    <View style={{ height: 280 }}>\n      <View\n        style={{\n          width: '100%',\n          backgroundColor: '#f0f0f0',\n          overflow: 'hidden',\n          height: height,\n        }}\n      >\n        {children}\n      </View>\n      <TouchableOpacity\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n      >\n        <View\n          style={{\n            width: '100%',\n            height: 40,\n            backgroundColor: '#ddd',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <View style={{ width: 50, height: 5, backgroundColor: '#666' }} />\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default ResizableContainer;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,iBAAiB,EAAEC,KAAK,QAAQ,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExE,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACpC,IAAAC,SAAA,GAA4BZ,QAAQ,CAAC,GAAG,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAAsCjB,QAAQ,CAAC,GAAG,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAGC,KAAK,EAAI;IAEhC,IAAMC,QAAQ,GAAGD,KAAK,CAACE,WAAW,CAACC,SAAS;IAC5CC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IAClBF,cAAc,CAACG,QAAQ,CAAC;EAC1B,CAAC;EAED,IAAMK,eAAe,GAAG,SAAlBA,eAAeA,CAAGN,KAAK,EAAI;IAC/B,IAAMC,QAAQ,GAAGD,KAAK,CAACE,WAAW,CAACC,SAAS;IAC5CC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrBH,cAAc,CAACG,QAAQ,CAAC;EAC1B,CAAC;EAGD,OACEf,KAAA,CAACP,IAAI;IAAC4B,KAAK,EAAE;MAAEd,MAAM,EAAE;IAAI,CAAE;IAAAJ,QAAA,GAC3BL,IAAA,CAACL,IAAI;MACH4B,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbC,eAAe,EAAE,SAAS;QAC1BC,QAAQ,EAAE,QAAQ;QAClBjB,MAAM,EAAEA;MACV,CAAE;MAAAJ,QAAA,EAEDA;IAAQ,EACJ,EACPL,IAAA,CAACJ,gBAAgB;MACf+B,YAAY,EAAEZ,gBAAiB;MAC/Ba,WAAW,EAAEN,eAAgB;MAAAjB,QAAA,EAE7BL,IAAA,CAACL,IAAI;QACH4B,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbf,MAAM,EAAE,EAAE;UACVgB,eAAe,EAAE,MAAM;UACvBI,cAAc,EAAE,QAAQ;UACxBC,UAAU,EAAE;QACd,CAAE;QAAAzB,QAAA,EAEFL,IAAA,CAACL,IAAI;UAAC4B,KAAK,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEf,MAAM,EAAE,CAAC;YAAEgB,eAAe,EAAE;UAAO;QAAE;MAAG;IAC7D,EACU;EAAA,EACd;AAEX,CAAC;AAED,eAAetB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}