{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SofriaRenderFromProskomma from \"./SofiraRenderFromProskommaNew\";\nimport sofria2WebActions from \"../../renderer/sofria2web\";\nimport { renderers } from \"../../renderer/render2reactNative\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction queryStartDocument(_ref) {\n  var context = _ref.context,\n    livre = _ref.livre,\n    bible = _ref.bible,\n    pk = _ref.pk,\n    workspace = _ref.workspace,\n    output = _ref.output,\n    setData = _ref.setData;\n  var documentQuery = \"\\n  {\\n    document(docSetId: \\\"\" + bible + \"\\\" withBook: \\\"\" + livre + \"\\\"){\\n      id\\n      cIndexes {\\n        chapter\\n      }\\n  }}\\n  \";\n  var documentResult = pk.gqlQuerySync(documentQuery);\n  var renderer = new SofriaRenderFromProskomma({\n    proskomma: pk,\n    actions: sofria2WebActions\n  });\n  var state = 'begin';\n  var config = {\n    showWordAtts: false,\n    showTitles: true,\n    showHeadings: true,\n    showIntroductions: true,\n    showFootnotes: true,\n    showXrefs: true,\n    showParaStyles: true,\n    showCharacterMarkup: true,\n    showChapterLabels: true,\n    showVersesLabels: true,\n    nbBlock: 1,\n    chapters: [\"\" + documentResult.data.document.cIndexes.shift().chapter],\n    selectedBcvNotes: [],\n    displayPartOfText: {\n      state: state\n    },\n    bcvNotesCallback: function bcvNotesCallback(bcv) {\n      setBcvNoteRef(bcv);\n    },\n    renderers: renderers\n  };\n  try {\n    renderer.renderDocument1({\n      docId: documentResult.data.document.id,\n      config: config,\n      context: context,\n      workspace: workspace,\n      output: output\n    });\n  } catch (err) {\n    console.log(\"Renderer\", err);\n    throw err;\n  }\n  config.displayPartOfText.state = 'continue';\n  setData(output.paras);\n}\nfunction ReadingScreen(_ref2) {\n  var livre = _ref2.livre,\n    bible = _ref2.bible,\n    flatListRef = _ref2.flatListRef,\n    pk = _ref2.pk;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var output = {};\n  var context = {};\n  var workspace = {};\n  queryStartDocument({\n    output: output,\n    workspace: workspace,\n    context: context,\n    livre: livre,\n    bible: bible,\n    pk: pk,\n    setData: setData\n  });\n  var renderItem = useCallback(function (_ref3) {\n    var item = _ref3.item;\n    return item;\n  }, []);\n  queryStartDocument;\n  var keyExtractor = useCallback(function (item, index) {\n    return \"para-\" + index + \"-\" + livre + \"-\" + bible;\n  }, [livre, bible]);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(FlatList, {\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      removeClippedSubviews: true,\n      data: data,\n      renderItem: renderItem,\n      keyExtractor: keyExtractor,\n      onEndReached: function onEndReached() {\n        return data;\n      },\n      scrollEventThrottle: 16,\n      onEndReachedThreshold: 0.8\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nexport { ReadingScreen };","map":{"version":3,"names":["SofriaRenderFromProskomma","sofria2WebActions","renderers","React","useState","useCallback","useEffect","jsx","_jsx","jsxs","_jsxs","queryStartDocument","_ref","context","livre","bible","pk","workspace","output","setData","documentQuery","documentResult","gqlQuerySync","renderer","proskomma","actions","state","config","showWordAtts","showTitles","showHeadings","showIntroductions","showFootnotes","showXrefs","showParaStyles","showCharacterMarkup","showChapterLabels","showVersesLabels","nbBlock","chapters","data","document","cIndexes","shift","chapter","selectedBcvNotes","displayPartOfText","bcvNotesCallback","bcv","setBcvNoteRef","renderDocument1","docId","id","err","console","log","paras","ReadingScreen","_ref2","flatListRef","_useState","_useState2","_slicedToArray","renderItem","_ref3","item","keyExtractor","index","View","style","flex","children","FlatList","height","width","removeClippedSubviews","onEndReached","scrollEventThrottle","onEndReachedThreshold","StatusBar"],"sources":["/home/gabriel/repos/jxt-korennumi/components/used/ReadingScreen.js"],"sourcesContent":["import { View, StatusBar, FlatList } from 'react-native';\nimport SofriaRenderFromProskomma from './SofiraRenderFromProskommaNew';\nimport sofria2WebActions from '../../renderer/sofria2web';\nimport { renderers } from '../../renderer/render2reactNative';\nimport React, { useState, useCallback, useEffect } from 'react';\n\nfunction queryStartDocument({ context, livre, bible, pk, workspace, output, setData }) {\n  let documentQuery = `\n  {\n    document(docSetId: \"${bible}\" withBook: \"${livre}\"){\n      id\n      cIndexes {\n        chapter\n      }\n  }}\n  `\n  const documentResult = pk.gqlQuerySync(documentQuery)\n\n  const renderer = new SofriaRenderFromProskomma({\n    proskomma: pk,\n    actions: sofria2WebActions,\n\n  });\n\n  const state = 'begin';\n  const config = {\n\n    showWordAtts: false,\n    showTitles: true,\n    showHeadings: true,\n    showIntroductions: true,\n    showFootnotes: true,\n    showXrefs: true,\n    showParaStyles: true,\n    showCharacterMarkup: true,\n    showChapterLabels: true,\n    showVersesLabels: true,\n    nbBlock: 1,\n    chapters: [`${documentResult.data.document.cIndexes.shift().chapter}`],\n    selectedBcvNotes: [],\n    displayPartOfText: { state },\n    bcvNotesCallback: (bcv) => {\n      setBcvNoteRef(bcv);\n    },\n    renderers,\n  };\n\n  try {\n\n    renderer.renderDocument1({\n      docId: documentResult.data.document.id,\n      config,\n      context,\n      workspace,\n      output,\n    });\n\n  } catch (err) {\n    console.log(\"Renderer\", err);\n    throw err;\n  }\n  config.displayPartOfText.state = 'continue';\n  setData(output.paras)\n\n}\nfunction ReadingScreen({ livre, bible, flatListRef, pk }) {\n  const [data, setData] = useState([])\n  const output = {};\n  const context = {};\n  const workspace = {};\n  queryStartDocument({ output, workspace, context, livre, bible, pk, setData })\n\n  const renderItem = useCallback(({ item }) => item, []);\n  queryStartDocument\n  const keyExtractor = useCallback((item, index) => `para-${index}-${livre}-${bible}`, [livre, bible]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <FlatList\n        style={{ height: '100%', width: '100%' }}\n        removeClippedSubviews={true}\n        data={data}\n        renderItem={renderItem}\n        keyExtractor={keyExtractor}\n        //ref={flatListRef}\n        onEndReached={() => { return (data) }}\n        scrollEventThrottle={16} // Add scrollEventThrottle for better performance\n        onEndReachedThreshold={0.8} // Trigger loadMoreItems when the user reaches 50% from the end\n      />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nexport { ReadingScreen }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}