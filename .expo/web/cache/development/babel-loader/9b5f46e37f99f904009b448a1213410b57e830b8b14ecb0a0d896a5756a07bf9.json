{"ast":null,"code":"import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { memo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckboxMe = memo(function (_ref) {\n  var num = _ref.num,\n    isChecked = _ref.isChecked,\n    setChecked = _ref.setChecked;\n  console.log(\"renderCheckbox..\");\n  return _jsxs(View, {\n    style: {\n      flexDirection: \"column\",\n      width: 50\n    },\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: \"center\"\n      },\n      children: num\n    }), _jsx(View, {\n      style: {\n        alignSelf: \"center\"\n      },\n      children: _jsx(Checkbox, {\n        style: {\n          alignSelf: \"center\"\n        },\n        value: num,\n        status: isChecked ? \"checked\" : \"unchecked\",\n        onPress: function onPress() {\n          console.log(\"checkBoxCard\");\n          setChecked(!isChecked);\n        }\n      })\n    })]\n  });\n});\nexport { CheckboxMe };","map":{"version":3,"names":["Text","Checkbox","useCallback","useState","View","FlatList","memo","jsx","_jsx","jsxs","_jsxs","CheckboxMe","_ref","num","isChecked","setChecked","console","log","style","flexDirection","width","children","alignSelf","value","status","onPress"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/CheckBox.js"],"sourcesContent":["import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport { View, FlatList } from 'react-native';\nimport { memo } from 'react';\nconst CheckboxMe = memo(({ num, isChecked, setChecked }) => {\n    console.log(\"renderCheckbox..\");\n    return (\n      <View style={{ flexDirection: \"column\", width: 50 }}>\n        <Text style={{ alignSelf: \"center\" }}>{num}</Text>\n        <View style={{ alignSelf: \"center\" }}>\n          <Checkbox\n            style={{ alignSelf: \"center\" }}\n            value={num}\n            status={isChecked ? \"checked\" : \"unchecked\"}\n            onPress={() => {\n              console.log(\"checkBoxCard\");\n              setChecked(!isChecked);\n            }}\n          />\n        </View>\n      </View>\n    );\n  });\nexport {CheckboxMe}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AACnD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE9C,SAASC,IAAI,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC7B,IAAMC,UAAU,GAAGL,IAAI,CAAC,UAAAM,IAAA,EAAoC;EAAA,IAAjCC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EACjDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,OACEP,KAAA,CAACN,IAAI;IAACc,KAAK,EAAE;MAAEC,aAAa,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,GAClDb,IAAA,CAACR,IAAI;MAACkB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAER;IAAG,EAAQ,EAClDL,IAAA,CAACJ,IAAI;MAACc,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EACnCb,IAAA,CAACP,QAAQ;QACPiB,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAS,CAAE;QAC/BC,KAAK,EAAEV,GAAI;QACXW,MAAM,EAAEV,SAAS,GAAG,SAAS,GAAG,WAAY;QAC5CW,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbT,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC3BF,UAAU,CAAC,CAACD,SAAS,CAAC;QACxB;MAAE;IACF,EACG;EAAA,EACF;AAEX,CAAC,CAAC;AACJ,SAAQH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}