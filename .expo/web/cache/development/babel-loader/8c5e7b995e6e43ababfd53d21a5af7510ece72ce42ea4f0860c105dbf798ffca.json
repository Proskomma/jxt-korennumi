{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { queryOneChapterOfOneDocSets } from \"../graphql/Query/query\";\nvar _require = require('proskomma-core'),\n  Proskomma = _require.Proskomma;\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport bottomTab from \"../style/bottomTab\";\nimport { SofriaRenderFromProskomma } from 'proskomma-json-tools';\nimport sofria2WebActions from \"../renderer/sofria2web\";\nimport { renderers } from \"../renderer/render2reactNative\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar succinct = require(\"../succinct/grc.json\");\nvar pk = new Proskomma([{\n  name: \"source\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}, {\n  name: \"project\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}, {\n  name: \"revision\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}]);\nfunction multipleReplace(query, tabl) {\n  var ret = query;\n  for (var _ref of tabl) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var s = _ref2[0];\n    var r = _ref2[1];\n    ret = ret.replace(s, r);\n  }\n  return ret;\n}\npk.loadSuccinctDocSet(succinct);\nvar chapterQuery = multipleReplace(queryOneChapterOfOneDocSets, [[\"%idChapter%\", \"1\"], [\"%docSetId%\", \"local_grc_1\"], [\"%bookCode%\", \"TIT\"]]);\nvar chapterResult = pk.gqlQuerySync(chapterQuery);\nvar renderer = new SofriaRenderFromProskomma({\n  proskomma: pk,\n  actions: sofria2WebActions\n});\nvar config = {\n  showWordAtts: false,\n  showTitles: true,\n  showHeadings: true,\n  showIntroductions: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showParaStyles: true,\n  showCharacterMarkup: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  selectedBcvNotes: [],\n  bcvNotesCallback: function bcvNotesCallback(bcv) {\n    setBcvNoteRef(bcv);\n  },\n  renderers: renderers\n};\nvar output = {};\ntry {\n  renderer.renderDocument({\n    docId: chapterResult.data.document.id,\n    config: config,\n    output: output\n  });\n} catch (err) {\n  console.log(\"Renderer\", err);\n  throw err;\n}\nfunction MainPage() {\n  return _jsx(FlatList, {\n    style: bottomTab.mainContent,\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Chapitre 1\"\n      }, 'Text'), output.paras, _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    }, 'keyView')\n  }, 'ScrollView');\n}\nexport { MainPage };","map":{"version":3,"names":["queryOneChapterOfOneDocSets","_require","require","Proskomma","View","ScrollView","Text","StatusBar","FlatList","bottomTab","SofriaRenderFromProskomma","sofria2WebActions","renderers","jsx","_jsx","jsxs","_jsxs","succinct","pk","name","type","regex","multipleReplace","query","tabl","ret","_ref","_ref2","_slicedToArray","s","r","replace","loadSuccinctDocSet","chapterQuery","chapterResult","gqlQuerySync","renderer","proskomma","actions","config","showWordAtts","showTitles","showHeadings","showIntroductions","showFootnotes","showXrefs","showParaStyles","showCharacterMarkup","showChapterLabels","showVersesLabels","selectedBcvNotes","bcvNotesCallback","bcv","setBcvNoteRef","output","renderDocument","docId","data","document","id","err","console","log","MainPage","style","mainContent","children","paras"],"sources":["/home/gabriel/repos/jxt-korennumi/components/mainPage.js"],"sourcesContent":["import { queryOneChapterOfOneDocSets } from '../graphql/Query/query';\nconst { Proskomma } = require('proskomma-core');\nimport { View, ScrollView, Text, StatusBar, FlatList } from 'react-native';\nimport bottomTab from '../style/bottomTab';\nimport {SofriaRenderFromProskomma} from 'proskomma-json-tools'\nimport sofria2WebActions from '../renderer/sofria2web';\nimport {renderers} from '../renderer/render2reactNative';\n\nconst succinct = require('../succinct/grc.json');\nconst pk = new Proskomma([\n  {\n    name: \"source\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n  {\n    name: \"project\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n  {\n    name: \"revision\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n]);\n\nfunction multipleReplace(query, tabl) {\n  let ret = query;\n  for (const [s, r] of tabl) {\n    ret = ret.replace(s, r);\n  }\n  return ret\n}\n\npk.loadSuccinctDocSet(succinct);\nlet chapterQuery =  multipleReplace(\n  queryOneChapterOfOneDocSets,\n  [[\"%idChapter%\", \"1\"], [\"%docSetId%\", \"local_grc_1\"], [\"%bookCode%\", \"TIT\"]]);\n\nlet chapterResult = pk.gqlQuerySync(chapterQuery);\nconst renderer = new SofriaRenderFromProskomma({\n  proskomma: pk,\n  actions: sofria2WebActions,\n});\n\nconst config = {\n  showWordAtts: false,\n  showTitles: true,\n  showHeadings: true,\n  showIntroductions: true,\n  showFootnotes: true,\n  showXrefs: true,\n  showParaStyles: true,\n  showCharacterMarkup: true,\n  showChapterLabels: true,\n  showVersesLabels: true,\n  selectedBcvNotes: [],\n  bcvNotesCallback: (bcv) => {\n    setBcvNoteRef(bcv);\n  },\n  renderers,\n};\n\nconst output = {};\ntry {\n  renderer.renderDocument({\n      docId: chapterResult.data.document.id,\n      config,\n      output,\n  });\n} catch (err) {\n  console.log(\"Renderer\", err);\n  throw err;\n}\n\nfunction MainPage() {\n  return (\n    <FlatList key={'ScrollView'} style={bottomTab.mainContent}>\n      <View key={'keyView'}>\n        <Text key={'Text'}>Chapitre 1</Text>\n\n        {output.paras}\n\n        <StatusBar style=\"auto\" />\n      </View>\n    </FlatList>\n  );\n\n}\nexport { MainPage }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}