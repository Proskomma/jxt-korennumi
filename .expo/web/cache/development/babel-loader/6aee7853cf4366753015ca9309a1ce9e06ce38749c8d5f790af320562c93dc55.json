{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ReadingScreen } from \"./ReadingScreen\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGear } from '@fortawesome/free-solid-svg-icons/faGear';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from 'react-native-paper';\nlibrary.add(faGear);\nimport ConfigDrawer from \"./TextConfig/configDrawer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction TextChanger(_ref) {\n  var pk = _ref.pk,\n    flatListRef = _ref.flatListRef;\n  var _useState = useState('local_Fnt_1'),\n    _useState2 = _slicedToArray(_useState, 2),\n    bible = _useState2[0],\n    setBible = _useState2[1];\n  var _useState3 = useState('TIT'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    livre = _useState4[0],\n    setLivre = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isActive = _useState6[0],\n    setIsActive = _useState6[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(Button, {\n      style: {\n        position: 'absolute',\n        zIndex: 3\n      },\n      icon: function icon() {\n        return _jsx(Icon, {\n          name: \"gear\",\n          size: 20,\n          color: \"blue\"\n        });\n      },\n      onPress: function onPress() {\n        return setIsActive(true);\n      }\n    }, Math.random()), _jsx(ConfigDrawer, {\n      pk: pk,\n      setIsActive: setIsActive,\n      isActive: isActive,\n      setBibleParent: setBible,\n      bibleParent: bible,\n      setLivreParent: setLivre,\n      livreParent: livre\n    }), _jsx(ReadingScreen, {\n      livre: livre,\n      bible: bible,\n      flatListRef: flatListRef,\n      pk: pk\n    })]\n  });\n}\nexport default TextChanger;","map":{"version":3,"names":["useState","View","ReadingScreen","library","faGear","Icon","Button","add","ConfigDrawer","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","TextChanger","_ref","pk","flatListRef","_useState","_useState2","_slicedToArray","bible","setBible","_useState3","_useState4","livre","setLivre","_useState5","_useState6","isActive","setIsActive","children","style","position","zIndex","icon","name","size","color","onPress","Math","random","setBibleParent","bibleParent","setLivreParent","livreParent"],"sources":["/home/gabriel/repos/jxt-korennumi/components/used/TextChanger.js"],"sourcesContent":["import { useState, } from \"react\"\nimport { View } from \"react-native\";\nimport { ReadingScreen } from \"./ReadingScreen\"\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGear } from '@fortawesome/free-solid-svg-icons/faGear';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Button } from 'react-native-paper';\n\nlibrary.add(faGear);\n\nimport ConfigDrawer from \"./TextConfig/configDrawer\"\nfunction TextChanger({ pk, flatListRef }) {\n    const [bible, setBible] = useState('local_Fnt_1')\n    const [livre, setLivre] = useState('TIT')\n    const [isActive, setIsActive] = useState(false)\n    return (\n        <>\n            <Button key={Math.random()} style={{ position: 'absolute', zIndex: 3 }}\n                icon={() => <Icon name=\"gear\" size={20} color=\"blue\" />\n                }\n                onPress={() => setIsActive(true)} />\n            <ConfigDrawer pk={pk} setIsActive={setIsActive} isActive={isActive} setBibleParent={setBible} bibleParent={bible} setLivreParent={setLivre} livreParent={livre} />\n            <ReadingScreen livre={livre} bible={bible} flatListRef={flatListRef} pk={pk} />\n        </>\n    )\n}\n\nexport default TextChanger"],"mappings":";AAAA,SAASA,QAAQ,QAAS,OAAO;AAAA,OAAAC,IAAA;AAEjC,SAASC,aAAa;AACtB,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,MAAM,QAAQ,0CAA0C;AACjE,OAAOC,IAAI;AACX,SAASC,MAAM,QAAQ,oBAAoB;AAE3CH,OAAO,CAACI,GAAG,CAACH,MAAM,CAAC;AAEnB,OAAOI,YAAY;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACpD,SAASC,WAAWA,CAAAC,IAAA,EAAsB;EAAA,IAAnBC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;EAClC,IAAAC,SAAA,GAA0BnB,QAAQ,CAAC,aAAa,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA0BxB,QAAQ,CAAC,KAAK,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAlCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAgC5B,QAAQ,CAAC,KAAK,CAAC;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAxCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,OACIf,KAAA,CAAAF,SAAA;IAAAoB,QAAA,GACItB,IAAA,CAACJ,MAAM;MAAqB2B,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAE,CAAE;MACnEC,IAAI,EAAE,SAAAA,KAAA;QAAA,OAAM1B,IAAA,CAACL,IAAI;UAACgC,IAAI,EAAC,MAAM;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAM,EAAG;MAAA,CACtD;MACDC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMT,WAAW,CAAC,IAAI,CAAC;MAAA;IAAC,GAHxBU,IAAI,CAACC,MAAM,EAAE,CAGc,EACxChC,IAAA,CAACF,YAAY;MAACS,EAAE,EAAEA,EAAG;MAACc,WAAW,EAAEA,WAAY;MAACD,QAAQ,EAAEA,QAAS;MAACa,cAAc,EAAEpB,QAAS;MAACqB,WAAW,EAAEtB,KAAM;MAACuB,cAAc,EAAElB,QAAS;MAACmB,WAAW,EAAEpB;IAAM,EAAG,EAClKhB,IAAA,CAACR,aAAa;MAACwB,KAAK,EAAEA,KAAM;MAACJ,KAAK,EAAEA,KAAM;MAACJ,WAAW,EAAEA,WAAY;MAACD,EAAE,EAAEA;IAAG,EAAG;EAAA,EAChF;AAEX;AAEA,eAAeF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}