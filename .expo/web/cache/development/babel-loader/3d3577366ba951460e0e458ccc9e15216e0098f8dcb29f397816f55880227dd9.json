{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { ResizableTab } from \"./components/used/resizableTab\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FontAwesomeIcon from \"@expo/vector-icons/FontAwesome\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nvar _require = require('proskomma-core'),\n  Proskomma = _require.Proskomma;\nimport { CheckboxMe } from \"./components/used/TextConfig/CheckBox\";\nvar succinct = require(\"./succinct/test.json\");\nvar succinct2 = require(\"./succinct/fnT.json\");\nimport { Tabletest } from \"./components/proofOfConcept/tableTest/tableTest\";\nvar _require2 = require(\"./components/proofOfConcept/tableTest/mat\"),\n  usfm = _require2.usfm;\nimport { ReadingScreen } from \"./components/used/ReadingScreen\";\nimport TextChanger from \"./components/used/TextChanger\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var pk = new Proskomma([{\n    name: \"source\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }, {\n    name: \"project\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }, {\n    name: \"revision\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }]);\n  pk.loadSuccinctDocSet(succinct);\n  pk.loadSuccinctDocSet(succinct2);\n  pk.importDocument({\n    'source': '1',\n    'project': 'web',\n    'revision': '0'\n  }, 'usfm', usfm);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"resizableTab\",\n        children: function children() {\n          return _jsx(ReadingScreen, {\n            pk: pk,\n            livre: 'TIT',\n            bible: 'local_fnT_1'\n          });\n        }\n      }, Math.random()), _jsx(Drawer.Screen, {\n        name: \"ReadingScreen\",\n        children: function children() {\n          return _jsx(CheckboxMe, {});\n        }\n      }, Math.random())]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","ResizableTab","View","ScrollView","Text","Button","TouchableOpacity","FontAwesomeIcon","NavigationContainer","createDrawerNavigator","_require","require","Proskomma","CheckboxMe","succinct","succinct2","Tabletest","_require2","usfm","ReadingScreen","TextChanger","jsx","_jsx","jsxs","_jsxs","Drawer","App","pk","name","type","regex","loadSuccinctDocSet","importDocument","children","Navigator","initialRouteName","screenOptions","headerShown","Screen","livre","bible","Math","random"],"sources":["/home/gabriel/repos/jxt-korennumi/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ResizableTab } from './components/used/resizableTab'\nimport { View, ScrollView, Text, Button, TouchableOpacity } from 'react-native';\nimport FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nconst { Proskomma } = require('proskomma-core');\nimport { CheckboxMe } from './components/used/TextConfig/CheckBox';\nconst succinct = require('./succinct/test.json');\nconst succinct2 = require('./succinct/fnT.json');\nimport { Tabletest } from './components/proofOfConcept/tableTest/tableTest';\nconst { usfm } = require('./components/proofOfConcept/tableTest/mat')\nimport { ReadingScreen } from './components/used/ReadingScreen';\nimport TextChanger from './components/used/TextChanger';\n\n\nconst Drawer = createDrawerNavigator();\n\nexport default function App() {\n  const pk = new Proskomma([\n    {\n      name: \"source\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n    {\n      name: \"project\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n    {\n      name: \"revision\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n  ]);\n  pk.loadSuccinctDocSet(succinct);\n  pk.loadSuccinctDocSet(succinct2);\n  pk.importDocument({ 'source': '1', 'project': 'web', 'revision': '0' }, 'usfm', usfm);\n\n\n  /*const [orientation, setOrientation] = useState(null);\n  useEffect(() => {\n    checkOrientation();\n    const subscription = ScreenOrientation.addOrientationChangeListener(\n      handleOrientationChange\n    );\n    return () => {\n      ScreenOrientation.removeOrientationChangeListeners(subscription);\n    };\n  }, []);\n  const checkOrientation = async () => {\n    const orientation = await ScreenOrientation.getOrientationAsync();\n    setOrientation(orientation);\n  };\n  const changeOrientation = async (newOrientation) => {\n    console.log(\"newOrientation: \", newOrientation);\n    await ScreenOrientation.lockAsync(newOrientation);\n  };\n  const handleOrientationChange = (o) => {\n    setOrientation(o.orientationInfo.orientation);\n  };\n  */\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator\n        initialRouteName=\"Home\"\n        screenOptions={{\n          headerShown: false,\n\n        }}>\n        <Drawer.Screen key={Math.random()} name=\"resizableTab\">\n          {() => <ReadingScreen pk={pk} livre={'TIT'} bible={'local_fnT_1'} />}\n        </Drawer.Screen>\n        <Drawer.Screen key={Math.random()}\n          name=\"ReadingScreen\">\n          {() => <CheckboxMe />}\n        </Drawer.Screen>\n\n      </Drawer.Navigator>\n    </NavigationContainer >\n  );\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY;AAAwC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAE7D,OAAOC,eAAe;AACtB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,IAAAC,QAAA,GAAsBC,OAAO,CAAC,gBAAgB,CAAC;EAAvCC,SAAS,GAAAF,QAAA,CAATE,SAAS;AACjB,SAASC,UAAU;AACnB,IAAMC,QAAQ,GAAGH,OAAO,wBAAwB;AAChD,IAAMI,SAAS,GAAGJ,OAAO,uBAAuB;AAChD,SAASK,SAAS;AAClB,IAAAC,SAAA,GAAiBN,OAAO,6CAA6C;EAA7DO,IAAI,GAAAD,SAAA,CAAJC,IAAI;AACZ,SAASC,aAAa;AACtB,OAAOC,WAAW;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxD,IAAMC,MAAM,GAAGhB,qBAAqB,EAAE;AAEtC,eAAe,SAASiB,GAAGA,CAAA,EAAG;EAC5B,IAAMC,EAAE,GAAG,IAAIf,SAAS,CAAC,CACvB;IACEgB,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EACFH,EAAE,CAACI,kBAAkB,CAACjB,QAAQ,CAAC;EAC/Ba,EAAE,CAACI,kBAAkB,CAAChB,SAAS,CAAC;EAChCY,EAAE,CAACK,cAAc,CAAC;IAAE,QAAQ,EAAE,GAAG;IAAE,SAAS,EAAE,KAAK;IAAE,UAAU,EAAE;EAAI,CAAC,EAAE,MAAM,EAAEd,IAAI,CAAC;EAyBrF,OACEI,IAAA,CAACd,mBAAmB;IAAAyB,QAAA,EAClBT,KAAA,CAACC,MAAM,CAACS,SAAS;MACfC,gBAAgB,EAAC,MAAM;MACvBC,aAAa,EAAE;QACbC,WAAW,EAAE;MAEf,CAAE;MAAAJ,QAAA,GACFX,IAAA,CAACG,MAAM,CAACa,MAAM;QAAqBV,IAAI,EAAC,cAAc;QAAAK,QAAA,EACnD,SAAAA,SAAA;UAAA,OAAMX,IAAA,CAACH,aAAa;YAACQ,EAAE,EAAEA,EAAG;YAACY,KAAK,EAAE,KAAM;YAACC,KAAK,EAAE;UAAc,EAAG;QAAA;MAAA,GADlDC,IAAI,CAACC,MAAM,EAAE,CAEjB,EAChBpB,IAAA,CAACG,MAAM,CAACa,MAAM;QACZV,IAAI,EAAC,eAAe;QAAAK,QAAA,EACnB,SAAAA,SAAA;UAAA,OAAMX,IAAA,CAACT,UAAU,KAAG;QAAA;MAAA,GAFH4B,IAAI,CAACC,MAAM,EAAE,CAGjB;IAAA;EAEC,EACE;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}