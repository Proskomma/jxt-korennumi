{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { queryOneChapterOfOneDocSets } from \"../graphql/Query/query\";\nvar _require = require('proskomma-core'),\n  Proskomma = _require.Proskomma;\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport bottomTab from \"../style/bottomTab\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar succinctlsg = require(\"../succinct/lsg.json\");\nvar pk = new Proskomma([{\n  name: \"source\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}, {\n  name: \"project\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}, {\n  name: \"revision\",\n  type: \"string\",\n  regex: \"^[^\\\\s]+$\"\n}]);\nfunction multipleReplace(query, tabl) {\n  var ret = query;\n  for (var _ref of tabl) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var s = _ref2[0];\n    var r = _ref2[1];\n    ret = ret.replace(s, r);\n  }\n  return ret;\n}\npk.loadSuccinctDocSet(queryOneChapterOfOneDocSets);\nvar chapterQuery = pk.gqlQuerySync(multipleReplace([[\"%idChapter%\", \"1\"], [\"%docSetId%\", \"local_lsg_1\"], [\"%bookCode%\", \"TIT\"]]));\nconsole.log(chapterQuery);\nfunction MainPage() {\n  return _jsx(ScrollView, {\n    style: bottomTab.mainContent,\n    children: _jsxs(View, {\n      children: [chapterQuery.data.docSet.documents.map(function (doc, idd) {\n        return _jsxs(View, {\n          children: [_jsxs(Text, {\n            children: [\"Chapitre \", idd + 1]\n          }), doc.cvIndex.verses.map(function (vers, idvs) {\n            var _vers$verse$;\n            return _jsxs(View, {\n              children: [_jsxs(Text, {\n                children: [\" \", idvs]\n              }), _jsx(Text, {\n                children: (_vers$verse$ = vers.verse[0]) == null ? void 0 : _vers$verse$.text\n              })]\n            }, \"verses \" + idd + \"-\" + idvs);\n          })]\n        }, \"chapter \" + idd);\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nexport { MainPage };","map":{"version":3,"names":["queryOneChapterOfOneDocSets","_require","require","Proskomma","View","ScrollView","Text","StatusBar","bottomTab","jsxs","_jsxs","jsx","_jsx","succinctlsg","pk","name","type","regex","multipleReplace","query","tabl","ret","_ref","_ref2","_slicedToArray","s","r","replace","loadSuccinctDocSet","chapterQuery","gqlQuerySync","console","log","MainPage","style","mainContent","children","data","docSet","documents","map","doc","idd","cvIndex","verses","vers","idvs","_vers$verse$","verse","text"],"sources":["/home/gabriel/repos/jxt-korennumi/components/mainPage.js"],"sourcesContent":["import { queryOneChapterOfOneDocSets } from '../graphql/Query/query';\nconst { Proskomma } = require('proskomma-core');\nimport { View, ScrollView, Text, StatusBar } from 'react-native';\nimport bottomTab from '../style/bottomTab';\n\nconst succinctlsg = require('../succinct/lsg.json');\nconst pk = new Proskomma([\n  {\n    name: \"source\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n  {\n    name: \"project\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n  {\n    name: \"revision\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\",\n  },\n]);\n\nfunction multipleReplace(query,tabl){\n  let ret = query;\n  for(const [s,r] of tabl){\n    ret = ret.replace(s,r);\n  }\n  return ret\n}\n\npk.loadSuccinctDocSet(queryOneChapterOfOneDocSets);\nlet chapterQuery = pk.gqlQuerySync(multipleReplace([[\"%idChapter%\", \"1\"],[\"%docSetId%\",\"local_lsg_1\"],[\"%bookCode%\",\"TIT\"]]));\n\n\nconsole.log(chapterQuery);\n\n\nfunction MainPage() {\n  return (\n    <ScrollView style={bottomTab.mainContent}>\n      <View>\n        {chapterQuery.data.docSet.documents.map(\n          (doc, idd) => (<View key={`chapter ${idd}`}><Text>Chapitre {idd + 1}</Text>\n            {doc.cvIndex.verses.map(\n              (vers, idvs) => (\n                <View key={`verses ${idd}-${idvs}`}> \n                  <Text> {idvs}</Text>\n                  <Text>{vers.verse[0]?.text}</Text>\n                </View>))}\n          </View>))}\n        <StatusBar style=\"auto\" />\n      </View>\n    </ScrollView>\n  );\n\n}\nexport { MainPage }\n\n"],"mappings":";AAAA,SAASA,2BAA2B;AACpC,IAAAC,QAAA,GAAsBC,OAAO,CAAC,gBAAgB,CAAC;EAAvCC,SAAS,GAAAF,QAAA,CAATE,SAAS;AAA+B,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAEhD,OAAOC,SAAS;AAA2B,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE3C,IAAMC,WAAW,GAAGX,OAAO,wBAAwB;AACnD,IAAMY,EAAE,GAAG,IAAIX,SAAS,CAAC,CACvB;EACEY,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE;AACT,CAAC,CACF,CAAC;AAEF,SAASC,eAAeA,CAACC,KAAK,EAACC,IAAI,EAAC;EAClC,IAAIC,GAAG,GAAGF,KAAK;EACf,SAAAG,IAAA,IAAmBF,IAAI,EAAC;IAAA,IAAAG,KAAA,GAAAC,cAAA,CAAAF,IAAA;IAAA,IAAbG,CAAC,GAAAF,KAAA;IAAA,IAACG,CAAC,GAAAH,KAAA;IACZF,GAAG,GAAGA,GAAG,CAACM,OAAO,CAACF,CAAC,EAACC,CAAC,CAAC;EACxB;EACA,OAAOL,GAAG;AACZ;AAEAP,EAAE,CAACc,kBAAkB,CAAC5B,2BAA2B,CAAC;AAClD,IAAI6B,YAAY,GAAGf,EAAE,CAACgB,YAAY,CAACZ,eAAe,CAAC,CAAC,CAAC,aAAa,EAAE,GAAG,CAAC,EAAC,CAAC,YAAY,EAAC,aAAa,CAAC,EAAC,CAAC,YAAY,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAG7Ha,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;AAGzB,SAASI,QAAQA,CAAA,EAAG;EAClB,OACErB,IAAA,CAACP,UAAU;IAAC6B,KAAK,EAAE1B,SAAS,CAAC2B,WAAY;IAAAC,QAAA,EACvC1B,KAAA,CAACN,IAAI;MAAAgC,QAAA,GACFP,YAAY,CAACQ,IAAI,CAACC,MAAM,CAACC,SAAS,CAACC,GAAG,CACrC,UAACC,GAAG,EAAEC,GAAG;QAAA,OAAMhC,KAAA,CAACN,IAAI;UAAAgC,QAAA,GAAwB1B,KAAA,CAACJ,IAAI;YAAA8B,QAAA,GAAC,WAAS,EAACM,GAAG,GAAG,CAAC;UAAA,EAAQ,EACxED,GAAG,CAACE,OAAO,CAACC,MAAM,CAACJ,GAAG,CACrB,UAACK,IAAI,EAAEC,IAAI;YAAA,IAAAC,YAAA;YAAA,OACTrC,KAAA,CAACN,IAAI;cAAAgC,QAAA,GACH1B,KAAA,CAACJ,IAAI;gBAAA8B,QAAA,GAAC,GAAC,EAACU,IAAI;cAAA,EAAQ,EACpBlC,IAAA,CAACN,IAAI;gBAAA8B,QAAA,GAAAW,YAAA,GAAEF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,qBAAbD,YAAA,CAAeE;cAAI,EAAQ;YAAA,eAFfP,GAAG,SAAII,IAAI,CAGzB;UAAA,CAAC,CAAC;QAAA,gBANsBJ,GAAG,CAOjC;MAAA,CAAC,CAAC,EACX9B,IAAA,CAACL,SAAS;QAAC2B,KAAK,EAAC;MAAM,EAAG;IAAA;EACrB,EACI;AAGjB;AACA,SAASD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}