{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CheckboxMe } from \"./CheckBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ChapitreSelection(_ref) {\n  var pk = _ref.pk,\n    bible = _ref.bible,\n    livre = _ref.livre,\n    chapitre = _ref.chapitre,\n    setChapitre = _ref.setChapitre;\n  if (livre === 'null' || bible == 'null') {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n  var chapters = pk.gqlQuerySync(\"{\\n        docSet(id: \\\"\" + bible + \"\\\") {\\n          document(bookCode: \\\"\" + livre + \"\\\") {\\n            cvIndexes {\\n              chapter\\n            }\\n          }\\n        }\\n      }\");\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    boolChapter = _useState2[0],\n    setBoolChapter = _useState2[1];\n  useEffect(function () {\n    var newChapter = [];\n    for (var key in boolChapter) {\n      if (boolChapter[key]) newChapter.push(key);\n    }\n    setChapitre(newChapter);\n  }, [boolChapter]);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n      index = _ref2.index;\n    return _jsx(CheckboxMe, {\n      num: item.chapter,\n      setParentList: setBoolChapter,\n      parentList: boolChapter\n    });\n  };\n  var keyExtractor = useCallback(function (item, index) {\n    return \"chap-\" + index;\n  }, []);\n  if (chapters.data.docSet.document != null) {\n    return _jsx(FlatList, {\n      data: chapters.data.docSet.document.cvIndexes,\n      numColumns: 3,\n      keyExtractor: keyExtractor,\n      renderItem: renderItem\n    });\n  } else {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n}\nexport { ChapitreSelection };","map":{"version":3,"names":["Text","useCallback","useEffect","useState","View","FlatList","CheckboxMe","jsx","_jsx","ChapitreSelection","_ref","pk","bible","livre","chapitre","setChapitre","children","chapters","gqlQuerySync","_useState","_useState2","_slicedToArray","boolChapter","setBoolChapter","newChapter","key","push","renderItem","_ref2","item","index","num","chapter","setParentList","parentList","keyExtractor","data","docSet","document","cvIndexes","numColumns"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/ChapitreSelection.js"],"sourcesContent":["import { Text } from 'react-native-paper';\nimport { useCallback, useEffect, useState } from 'react';\nimport { View, FlatList } from 'react-native';\nimport { CheckboxMe } from './CheckBox';\n\nfunction ChapitreSelection({ pk, bible, livre, chapitre, setChapitre }) {\n  if (livre === 'null' || bible == 'null') {\n    return <Text>{`Can't display`}</Text>\n  }\n  let chapters = pk.gqlQuerySync(\n    `{\n        docSet(id: \"${bible}\") {\n          document(bookCode: \"${livre}\") {\n            cvIndexes {\n              chapter\n            }\n          }\n        }\n      }`);\n\n  const [boolChapter , setBoolChapter] = useState({});\n\n  useEffect(() => {\n    let newChapter = []\n    for(let key in boolChapter){\n      if(boolChapter[key])\n        newChapter.push(key)\n    }\n    setChapitre(newChapter)\n  }, [boolChapter]);\n\n  const renderItem = ({ item, index }) => {\n    return <CheckboxMe\n              num={item.chapter}\n              setParentList={setBoolChapter}\n              parentList={boolChapter}\n            />\n  };\n\n  const keyExtractor = useCallback((item, index) => `chap-${index}`, []);\n\n  if (chapters.data.docSet.document != null) {\n    return (\n      <FlatList\n        data={chapters.data.docSet.document.cvIndexes}\n        numColumns={3}\n        keyExtractor={keyExtractor}\n        renderItem={renderItem}\n      />\n    )\n  } else {\n    return <Text>{`Can't display`}</Text>\n  }\n}\nexport { ChapitreSelection }\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAEzD,SAASC,UAAU;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAExC,SAASC,iBAAiBA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAEC,WAAW,GAAAL,IAAA,CAAXK,WAAW;EAClE,IAAIF,KAAK,KAAK,MAAM,IAAID,KAAK,IAAI,MAAM,EAAE;IACvC,OAAOJ,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;EACA,IAAIC,QAAQ,GAAGN,EAAE,CAACO,YAAY,8BAEVN,KAAK,8CACKC,KAAK,2GAM5B;EAEP,IAAAM,SAAA,GAAuChB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,WAAW,GAAAF,UAAA;IAAGG,cAAc,GAAAH,UAAA;EAEnClB,SAAS,CAAC,YAAM;IACd,IAAIsB,UAAU,GAAG,EAAE;IACnB,KAAI,IAAIC,GAAG,IAAIH,WAAW,EAAC;MACzB,IAAGA,WAAW,CAACG,GAAG,CAAC,EACjBD,UAAU,CAACE,IAAI,CAACD,GAAG,CAAC;IACxB;IACAV,WAAW,CAACS,UAAU,CAAC;EACzB,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,IAAMK,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA,EAAwB;IAAA,IAAlBC,IAAI,GAAAD,KAAA,CAAJC,IAAI;MAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;IAC/B,OAAOtB,IAAA,CAACF,UAAU;MACRyB,GAAG,EAAEF,IAAI,CAACG,OAAQ;MAClBC,aAAa,EAAEV,cAAe;MAC9BW,UAAU,EAAEZ;IAAY,EACxB;EACZ,CAAC;EAED,IAAMa,YAAY,GAAGlC,WAAW,CAAC,UAAC4B,IAAI,EAAEC,KAAK;IAAA,iBAAaA,KAAK;EAAA,CAAE,EAAE,EAAE,CAAC;EAEtE,IAAIb,QAAQ,CAACmB,IAAI,CAACC,MAAM,CAACC,QAAQ,IAAI,IAAI,EAAE;IACzC,OACE9B,IAAA,CAACH,QAAQ;MACP+B,IAAI,EAAEnB,QAAQ,CAACmB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,SAAU;MAC9CC,UAAU,EAAE,CAAE;MACdL,YAAY,EAAEA,YAAa;MAC3BR,UAAU,EAAEA;IAAW,EACvB;EAEN,CAAC,MAAM;IACL,OAAOnB,IAAA,CAACR,IAAI;MAAAgB,QAAA;IAAA,EAAyB;EACvC;AACF;AACA,SAASP,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}