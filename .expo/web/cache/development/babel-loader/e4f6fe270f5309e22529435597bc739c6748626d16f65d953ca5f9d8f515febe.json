{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { renderStyles as styles } from \"./renderStyles\";\nvar camelToKebabCase = function camelToKebabCase(str) {\n  return str.replace(/[A-Z]/g, function (letter) {\n    return \"-\" + letter.toLowerCase();\n  });\n};\nvar getStyles = function getStyles(type, subType) {\n  if (!styles[type]) {\n    throw new Error(\"Unknown style type '\" + type + \"'\");\n  }\n  if (!styles[type][subType]) {\n    console.log(\"No styles for \" + type + \"/\" + subType);\n    return styles[type].default;\n  }\n  var retObj = _objectSpread(_objectSpread({}, styles[type].default), styles[type][subType]);\n  var retArr = [];\n  Object.entries(retObj).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    retArr.push(camelToKebabCase(key) + \": \" + value);\n  });\n  return retArr.join(\"; \");\n};\nfunction InlineElement(props) {\n  return \"<span\\n            style={{\\n                ...props.style,\\n                paddingLeft: \\\"0.5em\\\",\\n                paddingRight: \\\"0.5em\\\",\\n                backgroundColor: \\\"#CCC\\\",\\n                marginTop: \\\"1em\\\",\\n                marginBottom: \\\"1em\\\"\\n            }}\\n            onClick={toggleDisplay}\\n        >\\n            \" + props.children + \"\\n        </span>\";\n}\nvar renderers = {\n  text: function text(_text) {\n    return _text;\n  },\n  chapter_label: function chapter_label(number) {\n    return \"<span style=\\\"\" + getStyles('marks', \"chapter_label\") + \"\\\">\" + number + \"</span>\";\n  },\n  verses_label: function verses_label(number) {\n    return \"<span style=\\\"\" + getStyles('marks', \"verses_label\") + \"\\\">\" + number + \"</span>\";\n  },\n  paragraph: function paragraph(subType, content, footnoteNo) {\n    return [\"usfm:f\", \"usfm:x\"].includes(subType) ? InlineElement({\n      style: getStyles('paras', subType),\n      linkText: subType === \"usfm:f\" ? footnoteNo : \"*\",\n      children: content.join(\"\")\n    }) : \"<p style=\\\"\" + getStyles('paras', subType) + \"\\\">\" + content.join(\"\") + \"</p>\";\n  },\n  wrapper: function wrapper(subType, content) {\n    return \"<span style=\\\"\" + getStyles('wrappers', subType) + \"\\\">\" + content + \"</span>\";\n  },\n  wWrapper: function wWrapper(atts, content) {\n    return Object.keys(atts).length === 0 ? content : \"<span\\n            style={{\\n                display: \\\"inline-block\\\",\\n                verticalAlign: \\\"top\\\",\\n                textAlign: \\\"center\\\"\\n            }}\\n        >\\n        <div>\" + content + \"</div>\\n            \" + Object.entries(atts).map(function (a) {\n      return \"<div\\n                            style={{\\n                                fontSize: \\\"xx-small\\\",\\n                                fontWeight: \\\"bold\\\"\\n                            }}\\n                        >\\n                        {\" + a[0] + \" = \" + a[1] + \"} \\n                        </div>\";\n    }) + \"\\n        </span>\";\n  },\n  mergeParas: function mergeParas(paras) {\n    return paras.join('\\n');\n  }\n};\nexport { renderers };","map":{"version":3,"names":["renderStyles","styles","camelToKebabCase","str","replace","letter","toLowerCase","getStyles","type","subType","Error","console","log","default","retObj","_objectSpread","retArr","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","value","push","join","InlineElement","props","children","renderers","text","chapter_label","number","verses_label","paragraph","content","footnoteNo","includes","style","linkText","wrapper","wWrapper","atts","keys","length","map","a","mergeParas","paras"],"sources":["/home/gabriel/repos/jxt-korennumi/renderer/render2html.js"],"sourcesContent":["import {renderStyles as styles} from './renderStyles';\n\nconst camelToKebabCase = (str) =>\n    str.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);\n\nconst getStyles = (type, subType) => {\n    if (!styles[type]) {\n        throw new Error(`Unknown style type '${type}'`);\n    }\n    if (!styles[type][subType]) {\n        console.log(`No styles for ${type}/${subType}`)\n        return styles[type].default;\n    }\n    const retObj = {...styles[type].default, ...styles[type][subType]};\n    let retArr = []\n    Object.entries(retObj).forEach( ([key,value]) => {\n        retArr.push(`${camelToKebabCase(key)}: ${value}`)\n    })\n    return retArr.join(\"; \");\n}\n\nfunction InlineElement(props) {\n        return `<span\n            style={{\n                ...props.style,\n                paddingLeft: \"0.5em\",\n                paddingRight: \"0.5em\",\n                backgroundColor: \"#CCC\",\n                marginTop: \"1em\",\n                marginBottom: \"1em\"\n            }}\n            onClick={toggleDisplay}\n        >\n            ${props.children}\n        </span>`\n/* if not display\n    } else {\n        return `<span\n            style={{\n                verticalAlign: \"super\",\n                fontSize: \"x-small\",\n                fontWeight: \"bold\",\n                marginRight: \"0.25em\",\n                padding: \"2px\",\n                backgroundColor: \"#CCC\"\n            }}\n            onClick={toggleDisplay}\n        >\n        ${props.linkText}\n    </span>`\n    }\n*/\n}\n\nconst renderers = {\n    text: text => text,\n    chapter_label: number => `<span style=\"${getStyles('marks', \"chapter_label\")}\">${number}</span>`,\n    verses_label: number => `<span style=\"${getStyles('marks', \"verses_label\")}\">${number}</span>`,\n    paragraph: (subType, content, footnoteNo) =>\n        [\"usfm:f\", \"usfm:x\"].includes(subType) ?\n            InlineElement({\n                style: getStyles('paras', subType),\n                linkText: (subType === \"usfm:f\") ? footnoteNo : \"*\",\n                children: content.join(\"\")\n            })\n            : `<p style=\"${getStyles('paras', subType)}\">${content.join(\"\")}</p>`,\n    wrapper: (subType, content) => `<span style=\"${getStyles('wrappers', subType)}\">${content}</span>`,\n    wWrapper: (atts, content) => Object.keys(atts).length === 0 ?\n        content :\n        `<span\n            style={{\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"center\"\n            }}\n        >\n        <div>${content}</div>\n            ${\n                Object.entries(atts).map(\n                    a =>\n                        `<div\n                            style={{\n                                fontSize: \"xx-small\",\n                                fontWeight: \"bold\"\n                            }}\n                        >\n                        {${a[0]} = ${a[1]}} \n                        </div>`\n                )\n            }\n        </span>`,\n    mergeParas: paras => paras.join('\\n'),\n}\n\nexport {renderers};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}