{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text } from 'react-native-paper';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { RadioButton } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChapitreSelection(_ref) {\n  var pk = _ref.pk,\n    bible = _ref.bible,\n    livre = _ref.livre,\n    chapitre = _ref.chapitre,\n    setChapitre = _ref.setChapitre;\n  var _React$useState = React.useState(chapitre),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    checked = _React$useState2[0],\n    setChecked = _React$useState2[1];\n  if (livre === 'null' || bible == 'null') {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n  var chapters = pk.gqlQuerySync(\"{\\n        docSet(id: \\\"\" + bible + \"\\\") {\\n          document(bookCode: \\\"\" + livre + \"\\\") {\\n            cvIndexes {\\n              chapter\\n            }\\n          }\\n        }\\n      }\");\n  if (chapters.data.docSet.document != null) {\n    var data = {};\n    chapters.data.docSet.document.cvIndexes.map(function (doc, id) {\n      return data.push(_jsxs(View, {\n        style: {\n          flexDirection: 'column',\n          width: 50\n        },\n        children: [_jsx(Text, {\n          style: {\n            alignSelf: 'center'\n          },\n          children: doc.chapter\n        }), _jsx(RadioButton, {\n          style: {\n            alignSelf: 'center'\n          },\n          value: doc.chapter,\n          status: checked === \"\" + doc.chapter ? 'checked' : 'unchecked',\n          onPress: function onPress() {\n            setChecked(\"\" + doc.chapter);\n            setChapitre(doc.chapter);\n          }\n        })]\n      }, id));\n    });\n    return _jsx(FlatList, {\n      data: itemData\n    });\n  } else {\n    return _jsx(Text, {\n      children: \"Can't display\"\n    });\n  }\n}\nexport { ChapitreSelection };","map":{"version":3,"names":["Text","React","View","RadioButton","jsx","_jsx","jsxs","_jsxs","ChapitreSelection","_ref","pk","bible","livre","chapitre","setChapitre","_React$useState","useState","_React$useState2","_slicedToArray","checked","setChecked","children","chapters","gqlQuerySync","data","docSet","document","cvIndexes","map","doc","id","push","style","flexDirection","width","alignSelf","chapter","value","status","onPress","FlatList","itemData"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/ChapitreSelection.js"],"sourcesContent":["import { Text } from 'react-native-paper';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { RadioButton } from 'react-native-paper';\n\nfunction ChapitreSelection({ pk, bible, livre, chapitre ,setChapitre }) {\n  const [checked, setChecked] = React.useState(chapitre);\n  if(livre==='null' || bible=='null'){\n    return <Text>{`Can't display`}</Text>\n  }\n  let chapters = pk.gqlQuerySync(\n    `{\n        docSet(id: \"${bible}\") {\n          document(bookCode: \"${livre}\") {\n            cvIndexes {\n              chapter\n            }\n          }\n        }\n      }`);\n\n  if(chapters.data.docSet.document != null){\n    let data = {}\n    chapters.data.docSet.document.cvIndexes.map((doc, id) =>\n    data.push(\n    <View key={id} style={{flexDirection: 'column',width:50}}>\n      <Text style={{ alignSelf: 'center' }}>{doc.chapter}</Text>\n      <RadioButton\n      style={{ alignSelf: 'center' }}\n        value={doc.chapter}\n        status={checked === `${doc.chapter}` ? 'checked' : 'unchecked'}\n        onPress={() => {\n          setChecked(`${doc.chapter}`);\n          setChapitre(doc.chapter)\n        }} />\n    </View>))\n    return <FlatList \n    data={itemData}>{}</FlatList>\n  \n}else{\n  return <Text>{`Can't display`}</Text>\n}\n}\nexport { ChapitreSelection }\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE/B,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,SAASC,iBAAiBA,CAAAC,IAAA,EAA8C;EAAA,IAA3CC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAEC,WAAW,GAAAL,IAAA,CAAXK,WAAW;EAClE,IAAAC,eAAA,GAA8Bd,KAAK,CAACe,QAAQ,CAACH,QAAQ,CAAC;IAAAI,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA/CI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAC1B,IAAGL,KAAK,KAAG,MAAM,IAAID,KAAK,IAAE,MAAM,EAAC;IACjC,OAAON,IAAA,CAACL,IAAI;MAAAqB,QAAA;IAAA,EAAyB;EACvC;EACA,IAAIC,QAAQ,GAAGZ,EAAE,CAACa,YAAY,8BAEVZ,KAAK,8CACKC,KAAK,2GAM5B;EAEP,IAAGU,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,QAAQ,IAAI,IAAI,EAAC;IACvC,IAAIF,IAAI,GAAG,CAAC,CAAC;IACbF,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,SAAS,CAACC,GAAG,CAAC,UAACC,GAAG,EAAEC,EAAE;MAAA,OACpDN,IAAI,CAACO,IAAI,CACTxB,KAAA,CAACL,IAAI;QAAU8B,KAAK,EAAE;UAACC,aAAa,EAAE,QAAQ;UAACC,KAAK,EAAC;QAAE,CAAE;QAAAb,QAAA,GACvDhB,IAAA,CAACL,IAAI;UAACgC,KAAK,EAAE;YAAEG,SAAS,EAAE;UAAS,CAAE;UAAAd,QAAA,EAAEQ,GAAG,CAACO;QAAO,EAAQ,EAC1D/B,IAAA,CAACF,WAAW;UACZ6B,KAAK,EAAE;YAAEG,SAAS,EAAE;UAAS,CAAE;UAC7BE,KAAK,EAAER,GAAG,CAACO,OAAQ;UACnBE,MAAM,EAAEnB,OAAO,UAAQU,GAAG,CAACO,OAAS,GAAG,SAAS,GAAG,WAAY;UAC/DG,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbnB,UAAU,MAAIS,GAAG,CAACO,OAAO,CAAG;YAC5BtB,WAAW,CAACe,GAAG,CAACO,OAAO,CAAC;UAC1B;QAAE,EAAG;MAAA,GATEN,EAAE,CAUN,CAAC;IAAA,EAAC;IACT,OAAOzB,IAAA,CAACmC,QAAQ;MAChBhB,IAAI,EAAEiB;IAAS,EAAc;EAEjC,CAAC,MAAI;IACH,OAAOpC,IAAA,CAACL,IAAI;MAAAqB,QAAA;IAAA,EAAyB;EACvC;AACA;AACA,SAASb,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}