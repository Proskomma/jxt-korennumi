{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { ReadingScreen } from \"./components/used/ReadingScreen\";\nimport { ResizableTab } from \"./components/used/resizableTab\";\nimport bottomTab from \"./style/bottomTab\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FontAwesomeIcon from \"@expo/vector-icons/FontAwesome\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SliderComponent } from \"./components/proofOfConcept/SliderComponent\";\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nimport MyComponent from \"./components/proofOfConcept/configDrawer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar succinct = require(\"./succinct/test.json\");\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  global.pk = new Proskomma([{\n    name: \"source\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }, {\n    name: \"project\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }, {\n    name: \"revision\",\n    type: \"string\",\n    regex: \"^[^\\\\s]+$\"\n  }]);\n  function multipleReplace(query, tabl) {\n    var ret = query;\n    for (var _ref of tabl) {\n      var _ref2 = _slicedToArray(_ref, 2);\n      var s = _ref2[0];\n      var r = _ref2[1];\n      ret = ret.replace(s, r);\n    }\n    return ret;\n  }\n  global.pk.loadSuccinctDocSet(succinct);\n  var documentQuery = multipleReplace(queryOneDocument, [[\"%docSetId%\", \"local_test_1\"], [\"%bookCode%\", \"GEN\"]]);\n  function AnotherScreen() {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return changeOrientation(ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT);\n        },\n        children: _jsx(Text, {\n          children: \"Another Tab!\"\n        })\n      })\n    });\n  }\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    orientation = _useState2[0],\n    setOrientation = _useState2[1];\n  useEffect(function () {\n    checkOrientation();\n    var subscription = ScreenOrientation.addOrientationChangeListener(handleOrientationChange);\n    return function () {\n      ScreenOrientation.removeOrientationChangeListeners(subscription);\n    };\n  }, []);\n  var checkOrientation = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var orientation = yield ScreenOrientation.getOrientationAsync();\n      setOrientation(orientation);\n    });\n    return function checkOrientation() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var changeOrientation = function () {\n    var _ref4 = _asyncToGenerator(function* (newOrientation) {\n      console.log(\"newOrientation: \", newOrientation);\n      yield ScreenOrientation.lockAsync(newOrientation);\n    });\n    return function changeOrientation(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleOrientationChange = function handleOrientationChange(o) {\n    setOrientation(o.orientationInfo.orientation);\n  };\n  console.log(orientation);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"ReadingScreen\",\n        component: MyComponent,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color,\n              size = _ref5.size;\n            return _jsx(FontAwesomeIcon, {\n              name: \"book\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"resizableTab\",\n        component: ResizableTab\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","ReadingScreen","ResizableTab","bottomTab","View","ScrollView","Text","Button","TouchableOpacity","FontAwesomeIcon","NavigationContainer","createBottomTabNavigator","SliderComponent","ScreenOrientation","MyComponent","jsx","_jsx","jsxs","_jsxs","succinct","require","Tab","App","global","pk","Proskomma","name","type","regex","multipleReplace","query","tabl","ret","_ref","_ref2","_slicedToArray","s","r","replace","loadSuccinctDocSet","documentQuery","queryOneDocument","AnotherScreen","style","flex","justifyContent","alignItems","children","onPress","changeOrientation","OrientationLock","LANDSCAPE_RIGHT","_useState","_useState2","orientation","setOrientation","checkOrientation","subscription","addOrientationChangeListener","handleOrientationChange","removeOrientationChangeListeners","_ref3","_asyncToGenerator","getOrientationAsync","apply","arguments","_ref4","newOrientation","console","log","lockAsync","_x","o","orientationInfo","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","options","tabBarIcon","_ref5","color","size"],"sources":["/home/gabriel/repos/jxt-korennumi/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {ReadingScreen} from './components/used/ReadingScreen'\nimport {ResizableTab} from './components/used/resizableTab'\nimport bottomTab from './style/bottomTab'\nimport { View, ScrollView,Text,Button,TouchableOpacity} from 'react-native';\nimport FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SliderComponent } from './components/proofOfConcept/SliderComponent';\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nimport MyComponent from \"./components/proofOfConcept/configDrawer\";\nconst succinct = require('./succinct/test.json');\n\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  \n\n   global.pk = new Proskomma([\n    {\n      name: \"source\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n    {\n      name: \"project\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n    {\n      name: \"revision\",\n      type: \"string\",\n      regex: \"^[^\\\\s]+$\",\n    },\n  ]);\n  \n  function multipleReplace(query, tabl) {\n    let ret = query;\n    for (const [s, r] of tabl) {\n      ret = ret.replace(s, r);\n    }\n    return ret\n  }\n  \n  global.pk.loadSuccinctDocSet(succinct);\n  let documentQuery = multipleReplace(\n    queryOneDocument,\n    [[\"%docSetId%\", \"local_test_1\"], [\"%bookCode%\", \"GEN\"]]);\n  \n\n\n  function AnotherScreen() {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <TouchableOpacity onPress={() =>\n            changeOrientation(ScreenOrientation.OrientationLock.LANDSCAPE_RIGHT)\n          }><Text>Another Tab!</Text></TouchableOpacity>\n      </View>\n    );\n  }\n  \n  const [orientation, setOrientation] = useState(null);\n  useEffect(() => {\n    checkOrientation();\n    const subscription = ScreenOrientation.addOrientationChangeListener(\n      handleOrientationChange\n    );\n    return () => {\n      ScreenOrientation.removeOrientationChangeListeners(subscription);\n    };\n  }, []);\n  const checkOrientation = async () => {\n    const orientation = await ScreenOrientation.getOrientationAsync();\n    setOrientation(orientation);\n  };\n  const changeOrientation = async (newOrientation) => {\n    console.log(\"newOrientation: \", newOrientation);\n    await ScreenOrientation.lockAsync(newOrientation);\n  };\n  const handleOrientationChange = (o) => {\n    setOrientation(o.orientationInfo.orientation);\n  };\n  console.log(orientation);\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        initialRouteName=\"Home\"\n        screenOptions={{\n          headerShown: false,\n          \n        }}>\n        <Tab.Screen \n        name=\"ReadingScreen\" \n        component={MyComponent} \n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <FontAwesomeIcon name=\"book\" color={color} size={size} />\n          ),\n          \n        \n        }}/>\n        <Tab.Screen name=\"resizableTab\" component={ResizableTab} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}