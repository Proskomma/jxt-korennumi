{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { memo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckboxMe = memo(function (_ref) {\n  var num = _ref.num,\n    setcheck = _ref.setcheck,\n    check = _ref.check;\n  var _useState = useState(check[num]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chec = _useState2[0],\n    setChec = _useState2[1];\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column',\n      width: 50\n    },\n    children: [_jsx(Text, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: num\n    }), _jsx(View, {\n      style: {\n        alignSelf: 'center'\n      },\n      children: _jsx(Checkbox, {\n        style: {\n          alignSelf: 'center'\n        },\n        value: num,\n        status: check[num] ? 'checked' : 'unchecked',\n        onPress: function onPress() {\n          check[num] = !check[num];\n          setChec(check[num]);\n        }\n      })\n    })]\n  });\n});\nexport { CheckboxMe };","map":{"version":3,"names":["Text","Checkbox","useCallback","useState","View","FlatList","memo","jsx","_jsx","jsxs","_jsxs","CheckboxMe","_ref","num","setcheck","check","_useState","_useState2","_slicedToArray","chec","setChec","style","flexDirection","width","children","alignSelf","value","status","onPress"],"sources":["/home/gabriel/repos/jxt-korennumi/components/proofOfConcept/CheckBox.js"],"sourcesContent":["import { Text, Checkbox } from 'react-native-paper';\nimport { useCallback, useState } from 'react';\nimport { View, FlatList } from 'react-native';\nimport { memo } from 'react';\nconst CheckboxMe = memo(({ num, setcheck, check }) => {\n    const [chec,setChec] = useState(check[num])\n    return (\n        <View style={{ flexDirection: 'column', width: 50 }}>\n            <Text style={{ alignSelf: 'center' }}>{num}</Text>\n            <View style={{ alignSelf: 'center' }}>\n                <Checkbox\n                    style={{ alignSelf: 'center' }}\n                    value={num}\n                    status={check[num] ? 'checked' : 'unchecked'}\n                    onPress={() => {check[num] = !check[num];\n                        setChec(check[num]);\n                    }} />\n            </View>\n        </View>\n    )\n}\n)\nexport { CheckboxMe }\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AACnD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE9C,SAASC,IAAI,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC7B,IAAMC,UAAU,GAAGL,IAAI,CAAC,UAAAM,IAAA,EAA8B;EAAA,IAA3BC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;EAC3C,IAAAC,SAAA,GAAuBb,QAAQ,CAACY,KAAK,CAACF,GAAG,CAAC,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,IAAI,GAAAF,UAAA;IAACG,OAAO,GAAAH,UAAA;EACnB,OACIP,KAAA,CAACN,IAAI;IAACiB,KAAK,EAAE;MAAEC,aAAa,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAG,CAAE;IAAAC,QAAA,GAChDhB,IAAA,CAACR,IAAI;MAACqB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAEX;IAAG,EAAQ,EAClDL,IAAA,CAACJ,IAAI;MAACiB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EACjChB,IAAA,CAACP,QAAQ;QACLoB,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAS,CAAE;QAC/BC,KAAK,EAAEb,GAAI;QACXc,MAAM,EAAEZ,KAAK,CAACF,GAAG,CAAC,GAAG,SAAS,GAAG,WAAY;QAC7Ce,OAAO,EAAE,SAAAA,QAAA,EAAM;UAACb,KAAK,CAACF,GAAG,CAAC,GAAG,CAACE,KAAK,CAACF,GAAG,CAAC;UACpCO,OAAO,CAACL,KAAK,CAACF,GAAG,CAAC,CAAC;QACvB;MAAE;IAAG,EACN;EAAA,EACJ;AAEf,CAAC,CACA;AACD,SAASF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}